{"ast":null,"code":"import _classCallCheck from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Base } from './Base.js';\nexport var Bitfield = /*#__PURE__*/function (_Base) {\n  _inherits(Bitfield, _Base);\n\n  var _super = _createSuper(Bitfield);\n\n  function Bitfield(type) {\n    var _this;\n\n    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, Bitfield);\n\n    _this = _super.call(this);\n    _this.type = type;\n    _this.flags = flags;\n    return _this;\n  }\n\n  _createClass(Bitfield, [{\n    key: \"decode\",\n    value: function decode(stream) {\n      var val = this.type.decode(stream);\n      var res = {};\n\n      for (var i = 0; i < this.flags.length; i++) {\n        var flag = this.flags[i];\n\n        if (flag != null) {\n          res[flag] = !!(val & 1 << i);\n        }\n      }\n\n      return res;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.type.size();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, keys) {\n      var val = 0;\n\n      for (var i = 0; i < this.flags.length; i++) {\n        var flag = this.flags[i];\n\n        if (flag != null) {\n          if (keys[flag]) {\n            val |= 1 << i;\n          }\n        }\n      }\n\n      return this.type.encode(stream, val);\n    }\n  }]);\n\n  return Bitfield;\n}(Base);","map":{"version":3,"names":["Base","Bitfield","type","flags","stream","val","decode","res","i","length","flag","size","keys","encode"],"sources":["E:/Mern login/client/node_modules/restructure/src/Bitfield.js"],"sourcesContent":["import {Base} from './Base.js';\n\nexport class Bitfield extends Base {\n  constructor(type, flags = []) {\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n\n  decode(stream) {\n    const val = this.type.decode(stream);\n\n    const res = {};\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        res[flag] = !!(val & (1 << i));\n      }\n    }\n\n    return res;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, keys) {\n    let val = 0;\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        if (keys[flag]) { val |= (1 << i); }\n      }\n    }\n\n    return this.type.encode(stream, val);\n  }\n}\n"],"mappings":";;;;AAAA,SAAQA,IAAR,QAAmB,WAAnB;AAEA,WAAaC,QAAb;EAAA;;EAAA;;EACE,kBAAYC,IAAZ,EAA8B;IAAA;;IAAA,IAAZC,KAAY,uEAAJ,EAAI;;IAAA;;IAC5B;IACA,MAAKD,IAAL,GAAYA,IAAZ;IACA,MAAKC,KAAL,GAAaA,KAAb;IAH4B;EAI7B;;EALH;IAAA;IAAA,OAOE,gBAAOC,MAAP,EAAe;MACb,IAAMC,GAAG,GAAG,KAAKH,IAAL,CAAUI,MAAV,CAAiBF,MAAjB,CAAZ;MAEA,IAAMG,GAAG,GAAG,EAAZ;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWM,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;QAC1C,IAAME,IAAI,GAAG,KAAKP,KAAL,CAAWK,CAAX,CAAb;;QACA,IAAIE,IAAI,IAAI,IAAZ,EAAkB;UAChBH,GAAG,CAACG,IAAD,CAAH,GAAY,CAAC,EAAEL,GAAG,GAAI,KAAKG,CAAd,CAAb;QACD;MACF;;MAED,OAAOD,GAAP;IACD;EAnBH;IAAA;IAAA,OAqBE,gBAAO;MACL,OAAO,KAAKL,IAAL,CAAUS,IAAV,EAAP;IACD;EAvBH;IAAA;IAAA,OAyBE,gBAAOP,MAAP,EAAeQ,IAAf,EAAqB;MACnB,IAAIP,GAAG,GAAG,CAAV;;MACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKL,KAAL,CAAWM,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;QAC1C,IAAME,IAAI,GAAG,KAAKP,KAAL,CAAWK,CAAX,CAAb;;QACA,IAAIE,IAAI,IAAI,IAAZ,EAAkB;UAChB,IAAIE,IAAI,CAACF,IAAD,CAAR,EAAgB;YAAEL,GAAG,IAAK,KAAKG,CAAb;UAAkB;QACrC;MACF;;MAED,OAAO,KAAKN,IAAL,CAAUW,MAAV,CAAiBT,MAAjB,EAAyBC,GAAzB,CAAP;IACD;EAnCH;;EAAA;AAAA,EAA8BL,IAA9B"},"metadata":{},"sourceType":"module"}
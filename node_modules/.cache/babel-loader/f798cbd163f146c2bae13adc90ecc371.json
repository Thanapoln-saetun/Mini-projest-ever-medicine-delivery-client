{"ast":null,"code":"import { Base } from './Base.js';\nexport class Enum extends Base {\n  constructor(type) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    super();\n    this.type = type;\n    this.options = options;\n  }\n\n  decode(stream) {\n    const index = this.type.decode(stream);\n    return this.options[index] || index;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, val) {\n    const index = this.options.indexOf(val);\n\n    if (index === -1) {\n      throw new Error(`Unknown option in enum: ${val}`);\n    }\n\n    return this.type.encode(stream, index);\n  }\n\n}","map":{"version":3,"names":["Base","Enum","constructor","type","options","decode","stream","index","size","encode","val","indexOf","Error"],"sources":["E:/Mern login/client/node_modules/restructure/src/Enum.js"],"sourcesContent":["import {Base} from './Base.js';\n\nexport class Enum extends Base {\n  constructor(type, options = []) {\n    super();\n    this.type = type;\n    this.options = options;\n  }\n  \n  decode(stream) {\n    const index = this.type.decode(stream);\n    return this.options[index] || index;\n  }\n\n  size() {\n    return this.type.size();\n  }\n\n  encode(stream, val) {\n    const index = this.options.indexOf(val);\n    if (index === -1) {\n      throw new Error(`Unknown option in enum: ${val}`);\n    }\n\n    return this.type.encode(stream, index);\n  }\n}\n"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,WAAnB;AAEA,OAAO,MAAMC,IAAN,SAAmBD,IAAnB,CAAwB;EAC7BE,WAAW,CAACC,IAAD,EAAqB;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC9B;IACA,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;;EAEDC,MAAM,CAACC,MAAD,EAAS;IACb,MAAMC,KAAK,GAAG,KAAKJ,IAAL,CAAUE,MAAV,CAAiBC,MAAjB,CAAd;IACA,OAAO,KAAKF,OAAL,CAAaG,KAAb,KAAuBA,KAA9B;EACD;;EAEDC,IAAI,GAAG;IACL,OAAO,KAAKL,IAAL,CAAUK,IAAV,EAAP;EACD;;EAEDC,MAAM,CAACH,MAAD,EAASI,GAAT,EAAc;IAClB,MAAMH,KAAK,GAAG,KAAKH,OAAL,CAAaO,OAAb,CAAqBD,GAArB,CAAd;;IACA,IAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;MAChB,MAAM,IAAIK,KAAJ,CAAW,2BAA0BF,GAAI,EAAzC,CAAN;IACD;;IAED,OAAO,KAAKP,IAAL,CAAUM,MAAV,CAAiBH,MAAjB,EAAyBC,KAAzB,CAAP;EACD;;AAvB4B"},"metadata":{},"sourceType":"module"}
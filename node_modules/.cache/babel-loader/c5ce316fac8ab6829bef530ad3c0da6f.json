{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TableRow = void 0;\n\nvar React = require(\"react\");\n\nvar renderer_1 = require(\"@react-pdf/renderer\");\n\nvar Utils_1 = require(\"./Utils\");\n\nvar TableRow = function (_super) {\n  __extends(TableRow, _super);\n\n  function TableRow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableRow.prototype.render = function () {\n    var _this = this;\n\n    var rowCells = React.Children.toArray(this.props.children);\n\n    var _a = (0, Utils_1.getDefaultBorderIncludes)(this.props),\n        includeLeftBorder = _a.includeLeftBorder,\n        includeBottomBorder = _a.includeBottomBorder,\n        includeRightBorder = _a.includeRightBorder,\n        includeTopBorder = _a.includeTopBorder;\n\n    var remainingWeighting = 1;\n    var numberOfWeightingsDefined = 0;\n    rowCells.forEach(function (i) {\n      if (i.props.weighting !== undefined) {\n        remainingWeighting -= i.props.weighting;\n        numberOfWeightingsDefined++;\n      }\n    });\n    var weightingsPerNotSpecified = Math.ceil(remainingWeighting / (rowCells.length - numberOfWeightingsDefined));\n    var rowColor = (this.props.zebra || this.props.evenRowColor) && this.props.even ? this.props.evenRowColor || 'lightgray' : this.props.oddRowColor || '';\n    return React.createElement(renderer_1.View, {\n      style: {\n        borderBottom: includeBottomBorder === true ? \"1pt solid black\" : 0,\n        borderRight: includeRightBorder === true ? \"1pt solid black\" : 0,\n        borderLeft: includeLeftBorder === true ? \"1pt solid black\" : 0,\n        borderTop: includeTopBorder === true ? \"1pt solid black\" : 0,\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        backgroundColor: rowColor\n      }\n    }, rowCells.map(function (rc, columnIndex) {\n      var _a;\n\n      return React.cloneElement(rc, {\n        weighting: (_a = rc.props.weighting) !== null && _a !== void 0 ? _a : weightingsPerNotSpecified,\n        data: _this.props.data,\n        key: columnIndex,\n        fontSize: _this.props.fontSize,\n        textAlign: _this.props.textAlign,\n        includeLeftBorder: columnIndex === 0,\n        includeRightBorder: columnIndex !== rowCells.length - 1\n      });\n    }));\n  };\n\n  return TableRow;\n}(React.PureComponent);\n\nexports.TableRow = TableRow;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AA2CA;EAA8BA;;EAA9B;;EA8CC;;EA7CGC;IAAA;;IACI,IAAMC,QAAQ,GAAUC,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuB,KAAKC,KAAL,CAAWC,QAAlC,CAAxB;;IACM,SAAiF,sCAAyB,KAAKD,KAA9B,CAAjF;IAAA,IAACE,iBAAiB,uBAAlB;IAAA,IAAoBC,mBAAmB,yBAAvC;IAAA,IAAyCC,kBAAkB,wBAA3D;IAAA,IAA6DC,gBAAgB,sBAA7E;;IAEN,IAAIC,kBAAkB,GAAG,CAAzB;IACA,IAAIC,yBAAyB,GAAG,CAAhC;IACAX,QAAQ,CAACY,OAAT,CAAiB,UAACC,CAAD,EAA6B;MAC1C,IAAIA,CAAC,CAACT,KAAF,CAAQU,SAAR,KAAsBC,SAA1B,EAAqC;QACjCL,kBAAkB,IAAIG,CAAC,CAACT,KAAF,CAAQU,SAA9B;QACAH,yBAAyB;MAC5B;IACJ,CALD;IAOA,IAAMK,yBAAyB,GAAGC,IAAI,CAACC,IAAL,CAAUR,kBAAkB,IAAIV,QAAQ,CAACmB,MAAT,GAAkBR,yBAAtB,CAA5B,CAAlC;IAEA,IAAMS,QAAQ,GAAI,CAAC,KAAKhB,KAAL,CAAWiB,KAAX,IAAoB,KAAKjB,KAAL,CAAWkB,YAAhC,KAAiD,KAAKlB,KAAL,CAAWmB,IAA7D,GAAqE,KAAKnB,KAAL,CAAWkB,YAAX,IAA2B,WAAhG,GAA8G,KAAKlB,KAAL,CAAWoB,WAAX,IAA0B,EAAzJ;IAEA,OACIvB,oBAACwB,eAAD,EAAK;MACDC,KAAK,EAAE;QACHC,YAAY,EAAEpB,mBAAmB,KAAK,IAAxB,GAA+B,iBAA/B,GAAmD,CAD9D;QAEHqB,WAAW,EAAEpB,kBAAkB,KAAK,IAAvB,GAA8B,iBAA9B,GAAkD,CAF5D;QAGHqB,UAAU,EAAEvB,iBAAiB,KAAK,IAAtB,GAA6B,iBAA7B,GAAiD,CAH1D;QAIHwB,SAAS,EAAErB,gBAAgB,KAAK,IAArB,GAA4B,iBAA5B,GAAgD,CAJxD;QAKHsB,KAAK,EAAE,MALJ;QAMHC,OAAO,EAAE,MANN;QAOHC,aAAa,EAAE,KAPZ;QAQHC,cAAc,EAAE,eARb;QASHC,eAAe,EAAEf;MATd;IADN,CAAL,EAcQpB,QAAQ,CAACoC,GAAT,CAAa,UAACC,EAAD,EAAKC,WAAL,EAAgB;;;MAAK,YAAK,CAACC,YAAN,CAAmBF,EAAnB,EAAuB;QACrDvB,SAAS,EAAE,QAAE,CAACV,KAAH,CAASU,SAAT,MAAkB,IAAlB,IAAkB0B,aAAlB,GAAkBA,EAAlB,GAAsBxB,yBADoB;QAErDyB,IAAI,EAAEC,KAAI,CAACtC,KAAL,CAAWqC,IAFoC;QAGrDE,GAAG,EAAEL,WAHgD;QAIrDM,QAAQ,EAAEF,KAAI,CAACtC,KAAL,CAAWwC,QAJgC;QAKrDC,SAAS,EAAEH,KAAI,CAACtC,KAAL,CAAWyC,SAL+B;QAMrDvC,iBAAiB,EAAEgC,WAAW,KAAK,CANkB;QAOrD9B,kBAAkB,EAAE8B,WAAW,KAAMtC,QAAQ,CAACmB,MAAT,GAAkB;MAPF,CAAvB;IAQhC,CARF,CAdR,CADJ;EA2BH,CA5CD;;EA6CJ;AAAC,CA9CD,CAA8BlB,KAAK,CAAC6C,aAApC;;AAAaC","names":["__extends","TableRow","rowCells","React","Children","toArray","props","children","includeLeftBorder","includeBottomBorder","includeRightBorder","includeTopBorder","remainingWeighting","numberOfWeightingsDefined","forEach","i","weighting","undefined","weightingsPerNotSpecified","Math","ceil","length","rowColor","zebra","evenRowColor","even","oddRowColor","renderer_1","style","borderBottom","borderRight","borderLeft","borderTop","width","display","flexDirection","justifyContent","backgroundColor","map","rc","columnIndex","cloneElement","_a","data","_this","key","fontSize","textAlign","PureComponent","exports"],"sources":["E:\\Mern login\\client\\node_modules\\@david.kucsai\\react-pdf-table\\src\\TableRow.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {TableBorder, TableCell} from \"./TableCell\";\nimport {DataTableCell} from \"./DataTableCell\";\nimport {View} from \"@react-pdf/renderer\";\nimport {getDefaultBorderIncludes} from \"./Utils\";\nimport {TableBodyProps} from \"./TableBody\";\n\nexport interface TableRowProps extends TableBorder {\n    /**\n     * The font size as a valid unit defined in react-pdf.\n     */\n    fontSize?: number | string;\n\n    /**\n     * Whether to align the text. Defaults to left.\n     */\n    textAlign?: \"left\" | \"center\" | \"right\";\n\n    /**\n     * Any data associated, relevant if the parent is a {@see DataTableCell}.\n     */\n    data?: any;\n\n    /**\n     * Whether rows have alternating styles\n     */\n    zebra?: boolean;\n\n    /**\n     * Whether this row is even (true) or odd (false)\n     */\n    even?: boolean;\n\n    /**\n     * Specify the color of even rows\n     */\n    evenRowColor?: string;\n\n    /**\n     * Specify the color of odd rows\n     */\n    oddRowColor?: string;\n}\n\n/**\n * This component describes how to display a row.\n */\nexport class TableRow extends React.PureComponent<Partial<TableBodyProps>> {\n    render() {\n        const rowCells: any[] = React.Children.toArray(this.props.children);\n        const {includeLeftBorder, includeBottomBorder, includeRightBorder, includeTopBorder} = getDefaultBorderIncludes(this.props);\n\n        let remainingWeighting = 1;\n        let numberOfWeightingsDefined = 0;\n        rowCells.forEach((i: TableCell | DataTableCell) => {\n            if (i.props.weighting !== undefined) {\n                remainingWeighting -= i.props.weighting;\n                numberOfWeightingsDefined++;\n            }\n        });\n\n        const weightingsPerNotSpecified = Math.ceil(remainingWeighting / (rowCells.length - numberOfWeightingsDefined));\n\n        const rowColor = ((this.props.zebra || this.props.evenRowColor) && this.props.even) ? this.props.evenRowColor || 'lightgray' : this.props.oddRowColor || '';\n\n        return (\n            <View\n                style={{\n                    borderBottom: includeBottomBorder === true ? \"1pt solid black\" : 0,\n                    borderRight: includeRightBorder === true ? \"1pt solid black\" : 0,\n                    borderLeft: includeLeftBorder === true ? \"1pt solid black\" : 0,\n                    borderTop: includeTopBorder === true ? \"1pt solid black\" : 0,\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    backgroundColor: rowColor,\n                }}\n            >\n                {\n                    rowCells.map((rc, columnIndex) => React.cloneElement(rc, {\n                        weighting: rc.props.weighting ?? weightingsPerNotSpecified,\n                        data: this.props.data,\n                        key: columnIndex,\n                        fontSize: this.props.fontSize,\n                        textAlign: this.props.textAlign,\n                        includeLeftBorder: columnIndex === 0,\n                        includeRightBorder: columnIndex !== (rowCells.length - 1)\n                    }))\n                }\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}
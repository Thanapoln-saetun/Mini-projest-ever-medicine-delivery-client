{"ast":null,"code":"import _createForOfIteratorHelper from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Node back-compat.\nvar ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n};\nexport var DecodeStream = /*#__PURE__*/function () {\n  function DecodeStream(buffer) {\n    _classCallCheck(this, DecodeStream);\n\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  _createClass(DecodeStream, [{\n    key: \"readString\",\n    value: function readString(length) {\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n      encoding = ENCODING_MAPPING[encoding] || encoding;\n      var buf = this.readBuffer(length);\n\n      try {\n        var decoder = new TextDecoder(encoding);\n        return decoder.decode(buf);\n      } catch (err) {\n        return buf;\n      }\n    }\n  }, {\n    key: \"readBuffer\",\n    value: function readBuffer(length) {\n      return this.buffer.slice(this.pos, this.pos += length);\n    }\n  }, {\n    key: \"readUInt24BE\",\n    value: function readUInt24BE() {\n      return (this.readUInt16BE() << 8) + this.readUInt8();\n    }\n  }, {\n    key: \"readUInt24LE\",\n    value: function readUInt24LE() {\n      return this.readUInt16LE() + (this.readUInt8() << 16);\n    }\n  }, {\n    key: \"readInt24BE\",\n    value: function readInt24BE() {\n      return (this.readInt16BE() << 8) + this.readUInt8();\n    }\n  }, {\n    key: \"readInt24LE\",\n    value: function readInt24LE() {\n      return this.readUInt16LE() + (this.readInt8() << 16);\n    }\n  }]);\n\n  return DecodeStream;\n}();\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nvar _iterator = _createForOfIteratorHelper(Object.getOwnPropertyNames(DataView.prototype)),\n    _step;\n\ntry {\n  var _loop = function _loop() {\n    var key = _step.value;\n\n    if (key.slice(0, 3) === 'get') {\n      var type = key.slice(3).replace('Ui', 'UI');\n\n      if (type === 'Float32') {\n        type = 'Float';\n      } else if (type === 'Float64') {\n        type = 'Double';\n      }\n\n      var bytes = DecodeStream.TYPES[type];\n\n      DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n        var ret = this.view[key](this.pos, false);\n        this.pos += bytes;\n        return ret;\n      };\n\n      if (bytes !== 1) {\n        DecodeStream.prototype['read' + type + 'LE'] = function () {\n          var ret = this.view[key](this.pos, true);\n          this.pos += bytes;\n          return ret;\n        };\n      }\n    }\n  };\n\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    _loop();\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}","map":{"version":3,"names":["ENCODING_MAPPING","utf16le","ucs2","utf16be","DecodeStream","buffer","view","DataView","byteOffset","byteLength","pos","length","encoding","buf","readBuffer","decoder","TextDecoder","decode","err","slice","readUInt16BE","readUInt8","readUInt16LE","readInt16BE","readInt8","TYPES","UInt8","UInt16","UInt24","UInt32","Int8","Int16","Int24","Int32","Float","Double","Object","getOwnPropertyNames","prototype","key","type","replace","bytes","ret"],"sources":["E:/Mern login/client/node_modules/restructure/src/DecodeStream.js"],"sourcesContent":["// Node back-compat.\nconst ENCODING_MAPPING = {\n  utf16le: 'utf-16le',\n  ucs2: 'utf-16le',\n  utf16be: 'utf-16be'\n}\n\nexport class DecodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    this.pos = 0;\n    this.length = this.buffer.length;\n  }\n\n  readString(length, encoding = 'ascii') {\n    encoding = ENCODING_MAPPING[encoding] || encoding;\n\n    let buf = this.readBuffer(length);\n    try {\n      let decoder = new TextDecoder(encoding);\n      return decoder.decode(buf);\n    } catch (err) {\n      return buf;\n    }\n  }\n\n  readBuffer(length) {\n    return this.buffer.slice(this.pos, (this.pos += length));\n  }\n\n  readUInt24BE() {\n    return (this.readUInt16BE() << 8) + this.readUInt8();\n  }\n\n  readUInt24LE() {\n    return this.readUInt16LE() + (this.readUInt8() << 16);\n  }\n\n  readInt24BE() {\n    return (this.readInt16BE() << 8) + this.readUInt8();\n  }\n\n  readInt24LE() {\n    return this.readUInt16LE() + (this.readInt8() << 16);\n  }\n}\n\nDecodeStream.TYPES = {\n  UInt8: 1,\n  UInt16: 2,\n  UInt24: 3,\n  UInt32: 4,\n  Int8: 1,\n  Int16: 2,\n  Int24: 3,\n  Int32: 4,\n  Float: 4,\n  Double: 8\n};\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'get') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    DecodeStream.prototype['read' + type + (bytes === 1 ? '' : 'BE')] = function () {\n      const ret = this.view[key](this.pos, false);\n      this.pos += bytes;\n      return ret;\n    };\n\n    if (bytes !== 1) {\n      DecodeStream.prototype['read' + type + 'LE'] = function () {\n        const ret = this.view[key](this.pos, true);\n        this.pos += bytes;\n        return ret;\n      };\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
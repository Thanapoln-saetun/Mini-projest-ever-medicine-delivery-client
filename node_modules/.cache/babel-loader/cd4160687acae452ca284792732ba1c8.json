{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TableCell = void 0;\n\nvar React = require(\"react\");\n\nvar renderer_1 = require(\"@react-pdf/renderer\");\n\nvar Utils_1 = require(\"./Utils\");\n\nvar TableCell = function (_super) {\n  __extends(TableCell, _super);\n\n  function TableCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableCell.prototype.render = function () {\n    var _a, _b, _c;\n\n    var content;\n\n    if (typeof this.props.children === \"string\") {\n      content = React.createElement(renderer_1.Text, null, this.props.children);\n    } else if (typeof this.props.children === \"number\") {\n      content = React.createElement(renderer_1.Text, null, this.props.children.toString());\n    } else {\n      content = this.props.children;\n    }\n\n    var includeRightBorder = (0, Utils_1.getDefaultBorderIncludes)(this.props).includeRightBorder;\n    var defaultStyle = {\n      flex: (_a = this.props.weighting) !== null && _a !== void 0 ? _a : 1,\n      justifyContent: \"stretch\",\n      textAlign: (_b = this.props.textAlign) !== null && _b !== void 0 ? _b : \"left\",\n      fontSize: (_c = this.props.fontSize) !== null && _c !== void 0 ? _c : this.props.isHeader === true ? 14 : 12,\n      borderRight: includeRightBorder === true ? \"1pt solid black\" : 0,\n      wordWrap: \"break-word\",\n      whiteSpace: \"pre-wrap\"\n    };\n\n    var mergedStyles = __spreadArray([defaultStyle], (0, Utils_1.transformToArray)(this.props.style), true);\n\n    return React.createElement(renderer_1.View, {\n      style: mergedStyles,\n      wrap: true\n    }, content);\n  };\n\n  return TableCell;\n}(React.PureComponent);\n\nexports.TableCell = TableCell;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AA2DA;EAA+BA;;EAA/B;;EA0CC;;EAzCGC;;;IACI,IAAIC,OAAJ;;IAEA,IAAI,OAAO,KAAKC,KAAL,CAAWC,QAAlB,KAA+B,QAAnC,EAA6C;MACzCF,OAAO,GACHG,oBAACC,eAAD,EAAK,IAAL,EAAO,KAAKH,KAAL,CAAWC,QAAlB,CADJ;IAGH,CAJD,MAIO,IAAG,OAAO,KAAKD,KAAL,CAAWC,QAAlB,KAA+B,QAAlC,EAA4C;MAC/CF,OAAO,GACHG,oBAACC,eAAD,EAAK,IAAL,EAAO,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,QAApB,EAAP,CADJ;IAGH,CAJM,MAIA;MACHL,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAArB;IACH;;IAEM,sBAAkB,GAAI,sCAAyB,KAAKD,KAA9B,EAAoCK,kBAA1D;IACP,IAAMC,YAAY,GAAmB;MACjCC,IAAI,EAAE,WAAKP,KAAL,CAAWQ,SAAX,MAAoB,IAApB,IAAoBC,aAApB,GAAoBA,EAApB,GAAwB,CADG;MAGjCC,cAAc,EAAE,SAHiB;MAIjCC,SAAS,EAAE,WAAKX,KAAL,CAAWW,SAAX,MAAoB,IAApB,IAAoBC,aAApB,GAAoBA,EAApB,GAAwB,MAJF;MAKjCC,QAAQ,EAAE,WAAKb,KAAL,CAAWa,QAAX,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmBA,EAAnB,GAAwB,KAAKd,KAAL,CAAWe,QAAX,KAAwB,IAAxB,GAA+B,EAA/B,GAAoC,EALrC;MAMjCC,WAAW,EAAEX,kBAAkB,KAAK,IAAvB,GAA8B,iBAA9B,GAAkD,CAN9B;MAOjCY,QAAQ,EAAE,YAPuB;MAQjCC,UAAU,EAAE;IARqB,CAArC;;IAWA,IAAMC,YAAY,kBACdb,YADc,GAEX,8BAAiB,KAAKN,KAAL,CAAWoB,KAA5B,CAFW,EAEuB,IAFvB,CAAlB;;IAKA,OACIlB,oBAACC,eAAD,EAAK;MACDiB,KAAK,EAAED,YADN;MAEDE,IAAI,EAAE;IAFL,CAAL,EAIKtB,OAJL,CADJ;EAQH,CAxCD;;EAyCJ;AAAC,CA1CD,CAA+BG,KAAK,CAACoB,aAArC;;AAAaC","names":["__extends","TableCell","content","props","children","React","renderer_1","toString","includeRightBorder","defaultStyle","flex","weighting","_a","justifyContent","textAlign","_b","fontSize","_c","isHeader","borderRight","wordWrap","whiteSpace","mergedStyles","style","wrap","PureComponent","exports"],"sources":["E:\\Mern login\\client\\node_modules\\@david.kucsai\\react-pdf-table\\src\\TableCell.tsx"],"sourcesContent":["import * as React from \"react\";\nimport ReactPDF, {Text, View} from \"@react-pdf/renderer\";\nimport {getDefaultBorderIncludes, transformToArray} from \"./Utils\";\n\n/**\n * Whether to include borders or not.\n * Depending on the context some toggles will not have any effect.\n */\nexport interface TableBorder {\n    /**\n     * Include the top border. Default true.\n     */\n    includeTopBorder?: boolean;\n\n    /**\n     * Include the right border. Default true.\n     */\n    includeRightBorder?: boolean;\n\n    /**\n     * Include the bottom border. Default true.\n     */\n    includeBottomBorder?: boolean;\n\n    /**\n     * Include the left border. Default true.\n     */\n    includeLeftBorder?: boolean;\n}\n\nexport interface TableCellProps extends TableBorder {\n    /**\n     * The weighting of a cell based on the flex layout style.\n     * This value is between 0..1, if not specified 1 is assumed, this will take up the remaining available space.\n     */\n    weighting?: number;\n\n    /**\n     * Extra styling to apply. These will override existing style with the same key.\n     */\n    style?: ReactPDF.Style | ReactPDF.Style[];\n\n    /**\n     * How to align the text\n     */\n    textAlign?: \"left\" | \"center\" | \"right\";\n\n    /**\n     * Whether this is a header cell or not. If not defined it will be false.\n     */\n    isHeader?: boolean;\n\n    /**\n     * The font-size to apply to the cell.\n     */\n    fontSize?: number | string;\n}\n\n/**\n * This component displays the associated content of it's children.\n */\nexport class TableCell extends React.PureComponent<TableCellProps> {\n    render() {\n        let content: any;\n\n        if (typeof this.props.children === \"string\") {\n            content = (\n                <Text>{this.props.children}</Text>\n            );\n        } else if(typeof this.props.children === \"number\") {\n            content = (\n                <Text>{this.props.children.toString()}</Text>\n            );\n        } else {\n            content = this.props.children;\n        }\n\n        const {includeRightBorder} = getDefaultBorderIncludes(this.props);\n        const defaultStyle: ReactPDF.Style = {\n            flex: this.props.weighting ?? 1,\n            // @ts-ignore\n            justifyContent: \"stretch\",\n            textAlign: this.props.textAlign ?? \"left\",\n            fontSize: this.props.fontSize ?? (this.props.isHeader === true ? 14 : 12),\n            borderRight: includeRightBorder === true ? \"1pt solid black\" : 0,\n            wordWrap: \"break-word\",\n            whiteSpace: \"pre-wrap\"\n        };\n\n        const mergedStyles: ReactPDF.Style[] = [\n            defaultStyle,\n            ...transformToArray(this.props.style)\n        ];\n\n        return (\n            <View\n                style={mergedStyles}\n                wrap={true}\n            >\n                {content}\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}
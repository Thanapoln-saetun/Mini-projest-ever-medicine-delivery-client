{"ast":null,"code":"import _classCallCheck from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Base } from './Base.js';\nimport * as utils from './utils.js';\nexport var Struct = /*#__PURE__*/function (_Base) {\n  _inherits(Struct, _Base);\n\n  var _super = _createSuper(Struct);\n\n  function Struct() {\n    var _this;\n\n    var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Struct);\n\n    _this = _super.call(this);\n    _this.fields = fields;\n    return _this;\n  }\n\n  _createClass(Struct, [{\n    key: \"decode\",\n    value: function decode(stream, parent) {\n      var length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      var res = this._setup(stream, parent, length);\n\n      this._parseFields(stream, res, this.fields);\n\n      if (this.process != null) {\n        this.process.call(res, stream);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"_setup\",\n    value: function _setup(stream, parent, length) {\n      var res = {}; // define hidden properties\n\n      Object.defineProperties(res, {\n        parent: {\n          value: parent\n        },\n        _startOffset: {\n          value: stream.pos\n        },\n        _currentOffset: {\n          value: 0,\n          writable: true\n        },\n        _length: {\n          value: length\n        }\n      });\n      return res;\n    }\n  }, {\n    key: \"_parseFields\",\n    value: function _parseFields(stream, res, fields) {\n      for (var key in fields) {\n        var val;\n        var type = fields[key];\n\n        if (typeof type === 'function') {\n          val = type.call(res, res);\n        } else {\n          val = type.decode(stream, res);\n        }\n\n        if (val !== undefined) {\n          if (val instanceof utils.PropertyDescriptor) {\n            Object.defineProperty(res, key, val);\n          } else {\n            res[key] = val;\n          }\n        }\n\n        res._currentOffset = stream.pos - res._startOffset;\n      }\n    }\n  }, {\n    key: \"size\",\n    value: function size(val, parent) {\n      var includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (val == null) {\n        val = {};\n      }\n\n      var ctx = {\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n\n      if (this.preEncode != null) {\n        this.preEncode.call(val);\n      }\n\n      var size = 0;\n\n      for (var key in this.fields) {\n        var type = this.fields[key];\n\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n\n      if (includePointers) {\n        size += ctx.pointerSize;\n      }\n\n      return size;\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(stream, val, parent) {\n      var type;\n\n      if (this.preEncode != null) {\n        this.preEncode.call(val, stream);\n      }\n\n      var ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n      for (var key in this.fields) {\n        type = this.fields[key];\n\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n\n      var i = 0;\n\n      while (i < ctx.pointers.length) {\n        var ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    }\n  }]);\n\n  return Struct;\n}(Base);","map":{"version":3,"names":["Base","utils","Struct","fields","stream","parent","length","res","_setup","_parseFields","process","call","Object","defineProperties","value","_startOffset","pos","_currentOffset","writable","_length","key","val","type","decode","undefined","PropertyDescriptor","defineProperty","includePointers","ctx","pointerSize","preEncode","size","pointers","startOffset","pointerOffset","encode","i","ptr"],"sources":["E:/Mern login/client/node_modules/restructure/src/Struct.js"],"sourcesContent":["import {Base} from './Base.js';\nimport * as utils from './utils.js';\n\nexport class Struct extends Base {\n  constructor(fields = {}) {\n    super();\n    this.fields = fields;\n  }\n\n  decode(stream, parent, length = 0) {\n    const res = this._setup(stream, parent, length);\n    this._parseFields(stream, res, this.fields);\n\n    if (this.process != null) {\n      this.process.call(res, stream);\n    }\n    return res;\n  }\n\n  _setup(stream, parent, length) {\n    const res = {};\n\n    // define hidden properties\n    Object.defineProperties(res, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos },\n      _currentOffset: { value: 0, writable: true },\n      _length:        { value: length }\n    });\n\n    return res;\n  }\n\n  _parseFields(stream, res, fields) {\n    for (let key in fields) {\n      var val;\n      const type = fields[key];\n      if (typeof type === 'function') {\n        val = type.call(res, res);\n      } else {\n        val = type.decode(stream, res);\n      }\n\n      if (val !== undefined) {\n        if (val instanceof utils.PropertyDescriptor) {\n          Object.defineProperty(res, key, val);\n        } else {\n          res[key] = val;\n        }\n      }\n\n      res._currentOffset = stream.pos - res._startOffset;\n    }\n\n  }\n\n  size(val, parent, includePointers = true) {\n    if (val == null) { val = {}; }\n    const ctx = {\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    if (this.preEncode != null) {\n      this.preEncode.call(val);\n    }\n\n    let size = 0;\n    for (let key in this.fields) {\n      const type = this.fields[key];\n      if (type.size != null) {\n        size += type.size(val[key], ctx);\n      }\n    }\n\n    if (includePointers) {\n      size += ctx.pointerSize;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let type;\n    if (this.preEncode != null) {\n      this.preEncode.call(val, stream);\n    }\n\n    const ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n\n    for (let key in this.fields) {\n      type = this.fields[key];\n      if (type.encode != null) {\n        type.encode(stream, val[key], ctx);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      const ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformToArray = exports.getDefaultBorderIncludes = void 0;\n\nfunction getDefaultBorderIncludes(border) {\n  var _a, _b, _c, _d;\n\n  return {\n    includeBottomBorder: (_a = border.includeBottomBorder) !== null && _a !== void 0 ? _a : true,\n    includeTopBorder: (_b = border.includeTopBorder) !== null && _b !== void 0 ? _b : true,\n    includeLeftBorder: (_c = border.includeLeftBorder) !== null && _c !== void 0 ? _c : true,\n    includeRightBorder: (_d = border.includeRightBorder) !== null && _d !== void 0 ? _d : true\n  };\n}\n\nexports.getDefaultBorderIncludes = getDefaultBorderIncludes;\n\nfunction transformToArray(items) {\n  if (items === undefined) {\n    return [];\n  }\n\n  if (Array.isArray(items)) {\n    return items;\n  }\n\n  return [items];\n}\n\nexports.transformToArray = transformToArray;","map":{"version":3,"mappings":";;;;;;;AAQA,SAAgBA,wBAAhB,CAAyCC,MAAzC,EAA4D;;;EACxD,OAAO;IACHC,mBAAmB,EAAE,YAAM,CAACA,mBAAP,MAA0B,IAA1B,IAA0BC,aAA1B,GAA0BA,EAA1B,GAA8B,IADhD;IAEHC,gBAAgB,EAAE,YAAM,CAACA,gBAAP,MAAuB,IAAvB,IAAuBC,aAAvB,GAAuBA,EAAvB,GAA2B,IAF1C;IAGHC,iBAAiB,EAAE,YAAM,CAACA,iBAAP,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwBA,EAAxB,GAA4B,IAH5C;IAIHC,kBAAkB,EAAE,YAAM,CAACA,kBAAP,MAAyB,IAAzB,IAAyBC,aAAzB,GAAyBA,EAAzB,GAA6B;EAJ9C,CAAP;AAMH;;AAPDC;;AAgBA,SAAgBC,gBAAhB,CAAoCC,KAApC,EAAmD;EAC/C,IAAGA,KAAK,KAAKC,SAAb,EAAwB;IACpB,OAAO,EAAP;EACH;;EAED,IAAGC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAH,EAAyB;IACrB,OAAOA,KAAP;EACH;;EAED,OAAO,CAACA,KAAD,CAAP;AACH;;AAVDF","names":["getDefaultBorderIncludes","border","includeBottomBorder","_a","includeTopBorder","_b","includeLeftBorder","_c","includeRightBorder","_d","exports","transformToArray","items","undefined","Array","isArray"],"sources":["E:\\Mern login\\client\\node_modules\\@david.kucsai\\react-pdf-table\\src\\Utils.ts"],"sourcesContent":["import {TableBorder} from \"./TableCell\";\n\n/**\n * Return whether particular borders need to be included.\n * If the value is undefined then return true for that border.\n *\n * @param border the border item to parse.\n */\nexport function getDefaultBorderIncludes(border: TableBorder): TableBorder {\n    return {\n        includeBottomBorder: border.includeBottomBorder ?? true,\n        includeTopBorder: border.includeTopBorder ?? true,\n        includeLeftBorder: border.includeLeftBorder ?? true,\n        includeRightBorder: border.includeRightBorder ?? true,\n    }\n}\n\n/**\n * Transform a single item to an array (with one element).\n * Or return the array.\n *\n * @param items the item or items to transform to an array.\n * @return an array of items or an empty array.\n */\nexport function transformToArray<T>(items?: T | T[]): T[] {\n    if(items === undefined) {\n        return [];\n    }\n\n    if(Array.isArray(items)) {\n        return items;\n    }\n\n    return [items];\n}\n"]},"metadata":{},"sourceType":"script"}
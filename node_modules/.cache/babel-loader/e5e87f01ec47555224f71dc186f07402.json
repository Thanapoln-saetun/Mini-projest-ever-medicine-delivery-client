{"ast":null,"code":"import _createForOfIteratorHelper from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"E:/Mern login/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { DecodeStream } from './DecodeStream.js';\nvar textEncoder = new TextEncoder();\nvar isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\nexport var EncodeStream = /*#__PURE__*/function () {\n  function EncodeStream(buffer) {\n    _classCallCheck(this, EncodeStream);\n\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n\n  _createClass(EncodeStream, [{\n    key: \"writeBuffer\",\n    value: function writeBuffer(buffer) {\n      this.buffer.set(buffer, this.pos);\n      this.pos += buffer.length;\n    }\n  }, {\n    key: \"writeString\",\n    value: function writeString(string) {\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n      var buf;\n\n      switch (encoding) {\n        case 'utf16le':\n        case 'utf16-le':\n        case 'ucs2':\n          // node treats this the same as utf16.\n          buf = stringToUtf16(string, isBigEndian);\n          break;\n\n        case 'utf16be':\n        case 'utf16-be':\n          buf = stringToUtf16(string, !isBigEndian);\n          break;\n\n        case 'utf8':\n          buf = textEncoder.encode(string);\n          break;\n\n        case 'ascii':\n          buf = stringToAscii(string);\n          break;\n\n        default:\n          throw new Error(\"Unsupported encoding: \".concat(encoding));\n      }\n\n      this.writeBuffer(buf);\n    }\n  }, {\n    key: \"writeUInt24BE\",\n    value: function writeUInt24BE(val) {\n      this.buffer[this.pos++] = val >>> 16 & 0xff;\n      this.buffer[this.pos++] = val >>> 8 & 0xff;\n      this.buffer[this.pos++] = val & 0xff;\n    }\n  }, {\n    key: \"writeUInt24LE\",\n    value: function writeUInt24LE(val) {\n      this.buffer[this.pos++] = val & 0xff;\n      this.buffer[this.pos++] = val >>> 8 & 0xff;\n      this.buffer[this.pos++] = val >>> 16 & 0xff;\n    }\n  }, {\n    key: \"writeInt24BE\",\n    value: function writeInt24BE(val) {\n      if (val >= 0) {\n        this.writeUInt24BE(val);\n      } else {\n        this.writeUInt24BE(val + 0xffffff + 1);\n      }\n    }\n  }, {\n    key: \"writeInt24LE\",\n    value: function writeInt24LE(val) {\n      if (val >= 0) {\n        this.writeUInt24LE(val);\n      } else {\n        this.writeUInt24LE(val + 0xffffff + 1);\n      }\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(val, length) {\n      if (length < this.buffer.length) {\n        this.buffer.fill(val, this.pos, this.pos + length);\n        this.pos += length;\n      } else {\n        var buf = new Uint8Array(length);\n        buf.fill(val);\n        this.writeBuffer(buf);\n      }\n    }\n  }]);\n\n  return EncodeStream;\n}();\n\nfunction stringToUtf16(string, swap) {\n  var buf = new Uint16Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    var code = string.charCodeAt(i);\n\n    if (swap) {\n      code = code >> 8 | (code & 0xff) << 8;\n    }\n\n    buf[i] = code;\n  }\n\n  return new Uint8Array(buf.buffer);\n}\n\nfunction stringToAscii(string) {\n  var buf = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nvar _iterator = _createForOfIteratorHelper(Object.getOwnPropertyNames(DataView.prototype)),\n    _step;\n\ntry {\n  var _loop = function _loop() {\n    var key = _step.value;\n\n    if (key.slice(0, 3) === 'set') {\n      var type = key.slice(3).replace('Ui', 'UI');\n\n      if (type === 'Float32') {\n        type = 'Float';\n      } else if (type === 'Float64') {\n        type = 'Double';\n      }\n\n      var bytes = DecodeStream.TYPES[type];\n\n      EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n        this.view[key](this.pos, value, false);\n        this.pos += bytes;\n      };\n\n      if (bytes !== 1) {\n        EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n          this.view[key](this.pos, value, true);\n          this.pos += bytes;\n        };\n      }\n    }\n  };\n\n  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n    _loop();\n  }\n} catch (err) {\n  _iterator.e(err);\n} finally {\n  _iterator.f();\n}","map":{"version":3,"names":["DecodeStream","textEncoder","TextEncoder","isBigEndian","Uint8Array","Uint16Array","buffer","EncodeStream","view","DataView","byteOffset","byteLength","pos","set","length","string","encoding","buf","stringToUtf16","encode","stringToAscii","Error","writeBuffer","val","writeUInt24BE","writeUInt24LE","fill","swap","i","code","charCodeAt","Object","getOwnPropertyNames","prototype","key","slice","type","replace","bytes","TYPES","value"],"sources":["E:/Mern login/client/node_modules/restructure/src/EncodeStream.js"],"sourcesContent":["import {DecodeStream} from './DecodeStream.js';\n\nconst textEncoder = new TextEncoder();\nconst isBigEndian = new Uint8Array(new Uint16Array([0x1234]).buffer)[0] == 0x12;\n\nexport class EncodeStream {\n  constructor(buffer) {\n    this.buffer = buffer;\n    this.view = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n    this.pos = 0;\n  }\n\n  writeBuffer(buffer) {\n    this.buffer.set(buffer, this.pos);\n    this.pos += buffer.length;\n  }\n\n  writeString(string, encoding = 'ascii') {\n    let buf;\n    switch (encoding) {\n      case 'utf16le':\n      case 'utf16-le':\n      case 'ucs2': // node treats this the same as utf16.\n        buf = stringToUtf16(string, isBigEndian);\n        break;\n\n      case 'utf16be':\n      case 'utf16-be':\n        buf = stringToUtf16(string, !isBigEndian);\n        break;\n\n      case 'utf8':\n        buf = textEncoder.encode(string);\n        break;\n\n      case 'ascii':\n        buf = stringToAscii(string);\n        break;\n\n      default:\n        throw new Error(`Unsupported encoding: ${encoding}`);\n    }\n\n    this.writeBuffer(buf);\n  }\n\n  writeUInt24BE(val) {\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = val & 0xff;\n  }\n\n  writeUInt24LE(val) {\n    this.buffer[this.pos++] = val & 0xff;\n    this.buffer[this.pos++] = (val >>> 8) & 0xff;\n    this.buffer[this.pos++] = (val >>> 16) & 0xff;\n  }\n\n  writeInt24BE(val) {\n    if (val >= 0) {\n      this.writeUInt24BE(val);\n    } else {\n      this.writeUInt24BE(val + 0xffffff + 1);\n    }\n  }\n\n  writeInt24LE(val) {\n    if (val >= 0) {\n      this.writeUInt24LE(val);\n    } else {\n      this.writeUInt24LE(val + 0xffffff + 1);\n    }\n  }\n\n  fill(val, length) {\n    if (length < this.buffer.length) {\n      this.buffer.fill(val, this.pos, this.pos + length);\n      this.pos += length;\n    } else {\n      const buf = new Uint8Array(length);\n      buf.fill(val);\n      this.writeBuffer(buf);\n    }\n  }\n}\n\nfunction stringToUtf16(string, swap) {\n  let buf = new Uint16Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    let code = string.charCodeAt(i);\n    if (swap) {\n      code = (code >> 8) | ((code & 0xff) << 8);\n    }\n    buf[i] = code;\n  }\n  return new Uint8Array(buf.buffer);\n}\n\nfunction stringToAscii(string) {\n  let buf = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    // Match node.js behavior - encoding allows 8-bit rather than 7-bit.\n    buf[i] = string.charCodeAt(i);\n  }\n  return buf;\n}\n\nfor (let key of Object.getOwnPropertyNames(DataView.prototype)) {\n  if (key.slice(0, 3) === 'set') {\n    let type = key.slice(3).replace('Ui', 'UI');\n    if (type === 'Float32') {\n      type = 'Float';\n    } else if (type === 'Float64') {\n      type = 'Double';\n    }\n    let bytes = DecodeStream.TYPES[type];\n    EncodeStream.prototype['write' + type + (bytes === 1 ? '' : 'BE')] = function (value) {\n      this.view[key](this.pos, value, false);\n      this.pos += bytes;\n    };\n\n    if (bytes !== 1) {\n      EncodeStream.prototype['write' + type + 'LE'] = function (value) {\n        this.view[key](this.pos, value, true);\n        this.pos += bytes;\n      };\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
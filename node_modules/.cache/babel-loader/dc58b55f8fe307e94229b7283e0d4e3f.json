{"ast":null,"code":";\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (hasOwnProp(obj, k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i,\n        arrLen = arr.length;\n\n    for (i = 0; i < arrLen; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidEra: null,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      era: null,\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function (fun) {\n      var t = Object(this),\n          len = t.length >>> 0,\n          i;\n\n      for (i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m),\n          parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      }),\n          isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [],\n      updateInProgress = false;\n\n  function copyConfig(to, from) {\n    var i,\n        prop,\n        val,\n        momentPropertiesLen = momentProperties.length;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentPropertiesLen > 0) {\n      for (i = 0; i < momentPropertiesLen; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  } // Moment prototype object\n\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [],\n            arg,\n            i,\n            key,\n            argLen = arguments.length;\n\n        for (i = 0; i < argLen; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (key in arguments[0]) {\n              if (hasOwnProp(arguments[0], key)) {\n                arg += key + ': ' + arguments[0][key] + ', ';\n              }\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      if (hasOwnProp(config, i)) {\n        prop = config[i];\n\n        if (isFunction(prop)) {\n          this[i] = prop;\n        } else {\n          this['_' + i] = prop;\n        }\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function (obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n      localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n      formatFunctions = {},\n      formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function () {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {\n      if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {\n        return tok.slice(1);\n      }\n\n      return tok;\n    }).join('');\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d',\n      defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    w: 'a week',\n    ww: '%d weeks',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [],\n        u;\n\n    for (u in unitsObj) {\n      if (hasOwnProp(unitsObj, u)) {\n        units.push({\n          unit: u,\n          priority: priorities[u]\n        });\n      }\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        value = toInt(value);\n\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units),\n          i,\n          prioritizedLen = prioritized.length;\n\n      for (i = 0; i < prioritizedLen; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  var match1 = /\\d/,\n      //       0 - 9\n  match2 = /\\d\\d/,\n      //      00 - 99\n  match3 = /\\d{3}/,\n      //     000 - 999\n  match4 = /\\d{4}/,\n      //    0000 - 9999\n  match6 = /[+-]?\\d{6}/,\n      // -999999 - 999999\n  match1to2 = /\\d\\d?/,\n      //       0 - 99\n  match3to4 = /\\d\\d\\d\\d?/,\n      //     999 - 9999\n  match5to6 = /\\d\\d\\d\\d\\d\\d?/,\n      //   99999 - 999999\n  match1to3 = /\\d{1,3}/,\n      //       0 - 999\n  match1to4 = /\\d{1,4}/,\n      //       0 - 9999\n  match1to6 = /[+-]?\\d{1,6}/,\n      // -999999 - 999999\n  matchUnsigned = /\\d+/,\n      //       0 - inf\n  matchSigned = /[+-]?\\d+/,\n      //    -inf - inf\n  matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi,\n      // +00:00 -00:00 +0000 -0000 or Z\n  matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi,\n      // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n  matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/,\n      // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n  matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n      regexes;\n  regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback,\n        tokenLen;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function (input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    tokenLen = token.length;\n\n    for (i = 0; i < tokenLen; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0,\n      MONTH = 1,\n      DATE = 2,\n      HOUR = 3,\n      MINUTE = 4,\n      SECOND = 5,\n      MILLISECOND = 6,\n      WEEK = 7,\n      WEEKDAY = 8;\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function (o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n      defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n      MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n      defaultMonthsShortRegex = matchWord,\n      defaultMonthsRegex = matchWord;\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date, args; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n      defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n      defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n      defaultWeekdaysRegex = matchWord,\n      defaultWeekdaysShortRegex = matchWord,\n      defaultWeekdaysMinRegex = matchWord;\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = regexEscape(this.weekdaysMin(mom, ''));\n      shortp = regexEscape(this.weekdaysShort(mom, ''));\n      longp = regexEscape(this.weekdays(mom, ''));\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n        pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4,\n        pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n      // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n  getSetHour = makeGetSet('Hours', true);\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }\n\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {},\n      localeFamilies = {},\n      globalLocale;\n\n  function commonPrefix(arr1, arr2) {\n    var i,\n        minl = Math.min(arr1.length, arr2.length);\n\n    for (i = 0; i < minl; i += 1) {\n      if (arr1[i] !== arr2[i]) {\n        return i;\n      }\n    }\n\n    return minl;\n  }\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function isLocaleNameSane(name) {\n    // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n    return name.match('^[^/\\\\\\\\]*$') != null;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null,\n        aliasedRequire; // TODO: Find a better way to register and load all the locales in Node\n\n    if (locales[name] === undefined && typeof module !== 'undefined' && module && module.exports && isLocaleNameSane(name)) {\n      try {\n        oldLocale = globalLocale._abbr;\n        aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {\n        // mark as not found to avoid repeating expensive file require call causing high CPU\n        // when trying to find en-US, en_US, en-us for every format call\n        locales[name] = null; // null means not found\n      }\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig;\n\n      if (locales[name] != null && locales[name].parentLocale != null) {\n        // Update existing child locale in-place to avoid memory-leaks\n        locales[name].set(mergeConfigs(locales[name]._config, config));\n      } else {\n        // MERGE\n        tmpLocale = loadLocale(name);\n\n        if (tmpLocale != null) {\n          parentConfig = tmpLocale._config;\n        }\n\n        config = mergeConfigs(parentConfig, config);\n\n        if (tmpLocale == null) {\n          // updateLocale is called for creating a new locale\n          // Set abbr so it will have a name (getters return\n          // undefined otherwise).\n          config.abbr = name;\n        }\n\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n      } // backwards compat for now: also set the locale\n\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n\n          if (name === getSetGlobalLocale()) {\n            getSetGlobalLocale(name);\n          }\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow,\n        a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n      basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n      tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n      isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/], ['YYYYMM', /\\d{6}/, false], ['YYYY', /\\d{4}/, false]],\n      // iso time formats and regexes\n  isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]],\n      aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n      // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n  rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n      obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  }; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat,\n        isoDatesLen = isoDates.length,\n        isoTimesLen = isoTimes.length;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDatesLen; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimesLen; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^()]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10),\n          m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i)),\n        parsedArray;\n\n    if (match) {\n      parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    if (config._strict) {\n      config._isValid = false;\n    } else {\n      // Final attempt, use Input Fallback\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // Pick the first defined of two or three arguments.\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // constant that refers to the ISO standard\n\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0,\n        era,\n        tokenLen;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    tokenLen = tokens.length;\n\n    for (i = 0; i < tokenLen; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem); // handle era\n\n    era = getParsingFlags(config).era;\n\n    if (era !== null) {\n      config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n    }\n\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n        scoreToBeat,\n        i,\n        currentScore,\n        validFormatFound,\n        bestFormatIsValid = false,\n        configfLen = config._f.length;\n\n    if (configfLen === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < configfLen; i++) {\n      currentScore = 0;\n      validFormatFound = false;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (isValid(tempConfig)) {\n        validFormatFound = true;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (!bestFormatIsValid) {\n        if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n\n          if (validFormatFound) {\n            bestFormatIsValid = true;\n          }\n        }\n      } else {\n        if (currentScore < scoreToBeat) {\n          scoreToBeat = currentScore;\n          bestMoment = tempConfig;\n        }\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i),\n        dayOrDate = i.day === undefined ? i.date : i.day;\n    config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (format === true || format === false) {\n      strict = format;\n      format = undefined;\n    }\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }),\n      prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function () {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    var key,\n        unitHasDecimal = false,\n        i,\n        orderLen = ordering.length;\n\n    for (key in m) {\n      if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    for (i = 0; i < orderLen; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset(),\n          sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher),\n        chunk,\n        parts,\n        minutes;\n\n    if (matches === null) {\n      return null;\n    }\n\n    chunk = matches[matches.length - 1] || [];\n    parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset());\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {},\n        other;\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n      // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n  isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input) || !isNaN(+input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = +input;\n      } else {\n        duration.milliseconds = +input;\n      }\n    } else if (match = aspNetRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (match = isoRegex.exec(input)) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n      ret._isValid = input._isValid;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add'),\n      subtract = createAdder(-1, 'subtract');\n\n  function isString(input) {\n    return typeof input === 'string' || input instanceof String;\n  } // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n\n\n  function isMomentInput(input) {\n    return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;\n  }\n\n  function isMomentInputObject(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n        propertyTest = false,\n        properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],\n        i,\n        property,\n        propertyLen = properties.length;\n\n    for (i = 0; i < propertyLen; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n\n    return objectTest && propertyTest;\n  }\n\n  function isNumberOrStringArray(input) {\n    var arrayTest = isArray(input),\n        dataTypeTest = false;\n\n    if (arrayTest) {\n      dataTypeTest = input.filter(function (item) {\n        return !isNumber(item) && isString(input);\n      }).length === 0;\n    }\n\n    return arrayTest && dataTypeTest;\n  }\n\n  function isCalendarSpec(input) {\n    var objectTest = isObject(input) && !isObjectEmpty(input),\n        propertyTest = false,\n        properties = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse'],\n        i,\n        property;\n\n    for (i = 0; i < properties.length; i += 1) {\n      property = properties[i];\n      propertyTest = propertyTest || hasOwnProp(input, property);\n    }\n\n    return objectTest && propertyTest;\n  }\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // Support for single parameter, formats only overload to the calendar function\n    if (arguments.length === 1) {\n      if (!arguments[0]) {\n        time = undefined;\n        formats = undefined;\n      } else if (isMomentInput(arguments[0])) {\n        time = arguments[0];\n        formats = undefined;\n      } else if (isCalendarSpec(arguments[0])) {\n        formats = arguments[0];\n        time = undefined;\n      }\n    } // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n\n\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse',\n        output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    if (a.date() < b.date()) {\n      // end-of-month calculations work correct when the start month has more\n      // days than the end month.\n      return -monthDiff(b, a);\n    } // difference in months\n\n\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true,\n        m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment',\n        zone = '',\n        prefix,\n        year,\n        datetime,\n        suffix;\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    prefix = '[' + func + '(\"]';\n    year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000,\n      MS_PER_MINUTE = 60 * MS_PER_SECOND,\n      MS_PER_HOUR = 60 * MS_PER_MINUTE,\n      MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time, startOfDate;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  }\n\n  addFormatToken('N', 0, 0, 'eraAbbr');\n  addFormatToken('NN', 0, 0, 'eraAbbr');\n  addFormatToken('NNN', 0, 0, 'eraAbbr');\n  addFormatToken('NNNN', 0, 0, 'eraName');\n  addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n  addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n  addFormatToken('y', ['yy', 2], 0, 'eraYear');\n  addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n  addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n  addRegexToken('N', matchEraAbbr);\n  addRegexToken('NN', matchEraAbbr);\n  addRegexToken('NNN', matchEraAbbr);\n  addRegexToken('NNNN', matchEraName);\n  addRegexToken('NNNNN', matchEraNarrow);\n  addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {\n    var era = config._locale.erasParse(input, token, config._strict);\n\n    if (era) {\n      getParsingFlags(config).era = era;\n    } else {\n      getParsingFlags(config).invalidEra = input;\n    }\n  });\n  addRegexToken('y', matchUnsigned);\n  addRegexToken('yy', matchUnsigned);\n  addRegexToken('yyy', matchUnsigned);\n  addRegexToken('yyyy', matchUnsigned);\n  addRegexToken('yo', matchEraYearOrdinal);\n  addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n  addParseToken(['yo'], function (input, array, config, token) {\n    var match;\n\n    if (config._locale._eraYearOrdinalRegex) {\n      match = input.match(config._locale._eraYearOrdinalRegex);\n    }\n\n    if (config._locale.eraYearOrdinalParse) {\n      array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n    } else {\n      array[YEAR] = parseInt(input, 10);\n    }\n  });\n\n  function localeEras(m, format) {\n    var i,\n        l,\n        date,\n        eras = this._eras || getLocale('en')._eras;\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      switch (typeof eras[i].since) {\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].since).startOf('day');\n          eras[i].since = date.valueOf();\n          break;\n      }\n\n      switch (typeof eras[i].until) {\n        case 'undefined':\n          eras[i].until = +Infinity;\n          break;\n\n        case 'string':\n          // truncate time\n          date = hooks(eras[i].until).startOf('day').valueOf();\n          eras[i].until = date.valueOf();\n          break;\n      }\n    }\n\n    return eras;\n  }\n\n  function localeErasParse(eraName, format, strict) {\n    var i,\n        l,\n        eras = this.eras(),\n        name,\n        abbr,\n        narrow;\n    eraName = eraName.toUpperCase();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      name = eras[i].name.toUpperCase();\n      abbr = eras[i].abbr.toUpperCase();\n      narrow = eras[i].narrow.toUpperCase();\n\n      if (strict) {\n        switch (format) {\n          case 'N':\n          case 'NN':\n          case 'NNN':\n            if (abbr === eraName) {\n              return eras[i];\n            }\n\n            break;\n\n          case 'NNNN':\n            if (name === eraName) {\n              return eras[i];\n            }\n\n            break;\n\n          case 'NNNNN':\n            if (narrow === eraName) {\n              return eras[i];\n            }\n\n            break;\n        }\n      } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n        return eras[i];\n      }\n    }\n  }\n\n  function localeErasConvertYear(era, year) {\n    var dir = era.since <= era.until ? +1 : -1;\n\n    if (year === undefined) {\n      return hooks(era.since).year();\n    } else {\n      return hooks(era.since).year() + (year - era.offset) * dir;\n    }\n  }\n\n  function getEraName() {\n    var i,\n        l,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].name;\n      }\n\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].name;\n      }\n    }\n\n    return '';\n  }\n\n  function getEraNarrow() {\n    var i,\n        l,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].narrow;\n      }\n\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].narrow;\n      }\n    }\n\n    return '';\n  }\n\n  function getEraAbbr() {\n    var i,\n        l,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      // truncate time\n      val = this.clone().startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until) {\n        return eras[i].abbr;\n      }\n\n      if (eras[i].until <= val && val <= eras[i].since) {\n        return eras[i].abbr;\n      }\n    }\n\n    return '';\n  }\n\n  function getEraYear() {\n    var i,\n        l,\n        dir,\n        val,\n        eras = this.localeData().eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      dir = eras[i].since <= eras[i].until ? +1 : -1; // truncate time\n\n      val = this.clone().startOf('day').valueOf();\n\n      if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {\n        return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;\n      }\n    }\n\n    return this.year();\n  }\n\n  function erasNameRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNameRegex')) {\n      computeErasParse.call(this);\n    }\n\n    return isStrict ? this._erasNameRegex : this._erasRegex;\n  }\n\n  function erasAbbrRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasAbbrRegex')) {\n      computeErasParse.call(this);\n    }\n\n    return isStrict ? this._erasAbbrRegex : this._erasRegex;\n  }\n\n  function erasNarrowRegex(isStrict) {\n    if (!hasOwnProp(this, '_erasNarrowRegex')) {\n      computeErasParse.call(this);\n    }\n\n    return isStrict ? this._erasNarrowRegex : this._erasRegex;\n  }\n\n  function matchEraAbbr(isStrict, locale) {\n    return locale.erasAbbrRegex(isStrict);\n  }\n\n  function matchEraName(isStrict, locale) {\n    return locale.erasNameRegex(isStrict);\n  }\n\n  function matchEraNarrow(isStrict, locale) {\n    return locale.erasNarrowRegex(isStrict);\n  }\n\n  function matchEraYearOrdinal(isStrict, locale) {\n    return locale._eraYearOrdinalRegex || matchUnsigned;\n  }\n\n  function computeErasParse() {\n    var abbrPieces = [],\n        namePieces = [],\n        narrowPieces = [],\n        mixedPieces = [],\n        i,\n        l,\n        eras = this.eras();\n\n    for (i = 0, l = eras.length; i < l; ++i) {\n      namePieces.push(regexEscape(eras[i].name));\n      abbrPieces.push(regexEscape(eras[i].abbr));\n      narrowPieces.push(regexEscape(eras[i].narrow));\n      mixedPieces.push(regexEscape(eras[i].name));\n      mixedPieces.push(regexEscape(eras[i].abbr));\n      mixedPieces.push(regexEscape(eras[i].narrow));\n    }\n\n    this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n    this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n    this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getISOWeeksInISOWeekYear() {\n    return weeksInYear(this.isoWeekYear(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getWeeksInWeekYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token, getSetMillisecond;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  }\n\n  getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n\n  if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n    proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n      return 'Moment<' + this.format() + '>';\n    };\n  }\n\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.eraName = getEraName;\n  proto.eraNarrow = getEraNarrow;\n  proto.eraAbbr = getEraAbbr;\n  proto.eraYear = getEraYear;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.weeksInWeekYear = getWeeksInWeekYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.eras = localeEras;\n  proto$1.erasParse = localeErasParse;\n  proto$1.erasConvertYear = localeErasConvertYear;\n  proto$1.erasAbbrRegex = erasAbbrRegex;\n  proto$1.erasNameRegex = erasNameRegex;\n  proto$1.erasNarrowRegex = erasNarrowRegex;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale(),\n        utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i,\n        out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0,\n        i,\n        out = [];\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    eras: [{\n      since: '0001-01-01',\n      until: +Infinity,\n      offset: 1,\n      name: 'Anno Domini',\n      narrow: 'AD',\n      abbr: 'AD'\n    }, {\n      since: '0000-12-31',\n      until: -Infinity,\n      offset: 1,\n      name: 'Before Christ',\n      narrow: 'BC',\n      abbr: 'BC'\n    }],\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds,\n        days = this._days,\n        months = this._months,\n        data = this._data,\n        seconds,\n        minutes,\n        hours,\n        years,\n        monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days,\n        months,\n        milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms'),\n      asSeconds = makeAs('s'),\n      asMinutes = makeAs('m'),\n      asHours = makeAs('h'),\n      asDays = makeAs('d'),\n      asWeeks = makeAs('w'),\n      asMonths = makeAs('M'),\n      asQuarters = makeAs('Q'),\n      asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds'),\n      seconds = makeGetter('seconds'),\n      minutes = makeGetter('minutes'),\n      hours = makeGetter('hours'),\n      days = makeGetter('days'),\n      months = makeGetter('months'),\n      years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round,\n      thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month/week\n    w: null,\n    // weeks to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n    var duration = createDuration(posNegDuration).abs(),\n        seconds = round(duration.as('s')),\n        minutes = round(duration.as('m')),\n        hours = round(duration.as('h')),\n        days = round(duration.as('d')),\n        months = round(duration.as('M')),\n        weeks = round(duration.as('w')),\n        years = round(duration.as('y')),\n        a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days];\n\n    if (thresholds.w != null) {\n      a = a || weeks <= 1 && ['w'] || weeks < thresholds.w && ['ww', weeks];\n    }\n\n    a = a || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(argWithSuffix, argThresholds) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var withSuffix = false,\n        th = thresholds,\n        locale,\n        output;\n\n    if (typeof argWithSuffix === 'object') {\n      argThresholds = argWithSuffix;\n      argWithSuffix = false;\n    }\n\n    if (typeof argWithSuffix === 'boolean') {\n      withSuffix = argWithSuffix;\n    }\n\n    if (typeof argThresholds === 'object') {\n      th = Object.assign({}, thresholds, argThresholds);\n\n      if (argThresholds.s != null && argThresholds.ss == null) {\n        th.ss = argThresholds.s - 1;\n      }\n    }\n\n    locale = this.localeData();\n    output = relativeTime$1(this, !withSuffix, th, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000,\n        days = abs$1(this._days),\n        months = abs$1(this._months),\n        minutes,\n        hours,\n        years,\n        s,\n        total = this.asSeconds(),\n        totalSign,\n        ymSign,\n        daysSign,\n        hmsSign;\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    } // 3600 seconds -> 60 minutes -> 1 hour\n\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    totalSign = total < 0 ? '-' : '';\n    ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (years ? ymSign + years + 'Y' : '') + (months ? ymSign + months + 'M' : '') + (days ? daysSign + days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hmsSign + hours + 'H' : '') + (minutes ? hmsSign + minutes + 'M' : '') + (seconds ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); //! moment.js\n\n  hooks.version = '2.29.4';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  }; //! moment.js locale configuration\n\n  hooks.defineLocale('af', {\n    months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n    weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n    weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n    meridiemParse: /vm|nm/i,\n    isPM: function (input) {\n      return /^nm$/i.test(input);\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 12) {\n        return isLower ? 'vm' : 'VM';\n      } else {\n        return isLower ? 'nm' : 'NM';\n      }\n    },\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Vandag om] LT',\n      nextDay: '[Môre om] LT',\n      nextWeek: 'dddd [om] LT',\n      lastDay: '[Gister om] LT',\n      lastWeek: '[Laas] dddd [om] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'oor %s',\n      past: '%s gelede',\n      s: \"'n paar sekondes\",\n      ss: '%d sekondes',\n      m: \"'n minuut\",\n      mm: '%d minute',\n      h: \"'n uur\",\n      hh: '%d ure',\n      d: \"'n dag\",\n      dd: '%d dae',\n      M: \"'n maand\",\n      MM: '%d maande',\n      y: \"'n jaar\",\n      yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal: function (number) {\n      return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n    },\n    week: {\n      dow: 1,\n      // Maandag is die eerste dag van die week.\n      doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n\n    }\n  }); //! moment.js locale configuration\n\n  var pluralForm = function (n) {\n    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n  },\n      plurals = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n  },\n      pluralize = function (u) {\n    return function (number, withoutSuffix, string, isFuture) {\n      var f = pluralForm(number),\n          str = plurals[u][pluralForm(number)];\n\n      if (f === 2) {\n        str = str[withoutSuffix ? 0 : 1];\n      }\n\n      return str.replace(/%d/i, number);\n    };\n  },\n      months$1 = ['جانفي', 'فيفري', 'مارس', 'أفريل', 'ماي', 'جوان', 'جويلية', 'أوت', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n\n  hooks.defineLocale('ar-dz', {\n    months: months$1,\n    monthsShort: months$1,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'D/\\u200FM/\\u200FYYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM: function (input) {\n      return 'م' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ص';\n      } else {\n        return 'م';\n      }\n    },\n    calendar: {\n      sameDay: '[اليوم عند الساعة] LT',\n      nextDay: '[غدًا عند الساعة] LT',\n      nextWeek: 'dddd [عند الساعة] LT',\n      lastDay: '[أمس عند الساعة] LT',\n      lastWeek: 'dddd [عند الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'بعد %s',\n      past: 'منذ %s',\n      s: pluralize('s'),\n      ss: pluralize('s'),\n      m: pluralize('m'),\n      mm: pluralize('m'),\n      h: pluralize('h'),\n      hh: pluralize('h'),\n      d: pluralize('d'),\n      dd: pluralize('d'),\n      M: pluralize('M'),\n      MM: pluralize('M'),\n      y: pluralize('y'),\n      yy: pluralize('y')\n    },\n    postformat: function (string) {\n      return string.replace(/,/g, '،');\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ar-kw', {\n    months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[اليوم على الساعة] LT',\n      nextDay: '[غدا على الساعة] LT',\n      nextWeek: 'dddd [على الساعة] LT',\n      lastDay: '[أمس على الساعة] LT',\n      lastWeek: 'dddd [على الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'في %s',\n      past: 'منذ %s',\n      s: 'ثوان',\n      ss: '%d ثانية',\n      m: 'دقيقة',\n      mm: '%d دقائق',\n      h: 'ساعة',\n      hh: '%d ساعات',\n      d: 'يوم',\n      dd: '%d أيام',\n      M: 'شهر',\n      MM: '%d أشهر',\n      y: 'سنة',\n      yy: '%d سنوات'\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap = {\n    1: '1',\n    2: '2',\n    3: '3',\n    4: '4',\n    5: '5',\n    6: '6',\n    7: '7',\n    8: '8',\n    9: '9',\n    0: '0'\n  },\n      pluralForm$1 = function (n) {\n    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n  },\n      plurals$1 = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n  },\n      pluralize$1 = function (u) {\n    return function (number, withoutSuffix, string, isFuture) {\n      var f = pluralForm$1(number),\n          str = plurals$1[u][pluralForm$1(number)];\n\n      if (f === 2) {\n        str = str[withoutSuffix ? 0 : 1];\n      }\n\n      return str.replace(/%d/i, number);\n    };\n  },\n      months$2 = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n\n  hooks.defineLocale('ar-ly', {\n    months: months$2,\n    monthsShort: months$2,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'D/\\u200FM/\\u200FYYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM: function (input) {\n      return 'م' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ص';\n      } else {\n        return 'م';\n      }\n    },\n    calendar: {\n      sameDay: '[اليوم عند الساعة] LT',\n      nextDay: '[غدًا عند الساعة] LT',\n      nextWeek: 'dddd [عند الساعة] LT',\n      lastDay: '[أمس عند الساعة] LT',\n      lastWeek: 'dddd [عند الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'بعد %s',\n      past: 'منذ %s',\n      s: pluralize$1('s'),\n      ss: pluralize$1('s'),\n      m: pluralize$1('m'),\n      mm: pluralize$1('m'),\n      h: pluralize$1('h'),\n      hh: pluralize$1('h'),\n      d: pluralize$1('d'),\n      dd: pluralize$1('d'),\n      M: pluralize$1('M'),\n      MM: pluralize$1('M'),\n      y: pluralize$1('y'),\n      yy: pluralize$1('y')\n    },\n    preparse: function (string) {\n      return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap[match];\n      }).replace(/,/g, '،');\n    },\n    week: {\n      dow: 6,\n      // Saturday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ar-ma', {\n    months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[اليوم على الساعة] LT',\n      nextDay: '[غدا على الساعة] LT',\n      nextWeek: 'dddd [على الساعة] LT',\n      lastDay: '[أمس على الساعة] LT',\n      lastWeek: 'dddd [على الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'في %s',\n      past: 'منذ %s',\n      s: 'ثوان',\n      ss: '%d ثانية',\n      m: 'دقيقة',\n      mm: '%d دقائق',\n      h: 'ساعة',\n      hh: '%d ساعات',\n      d: 'يوم',\n      dd: '%d أيام',\n      M: 'شهر',\n      MM: '%d أشهر',\n      y: 'سنة',\n      yy: '%d سنوات'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$1 = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n  },\n      numberMap = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n  };\n  hooks.defineLocale('ar-sa', {\n    months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM: function (input) {\n      return 'م' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ص';\n      } else {\n        return 'م';\n      }\n    },\n    calendar: {\n      sameDay: '[اليوم على الساعة] LT',\n      nextDay: '[غدا على الساعة] LT',\n      nextWeek: 'dddd [على الساعة] LT',\n      lastDay: '[أمس على الساعة] LT',\n      lastWeek: 'dddd [على الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'في %s',\n      past: 'منذ %s',\n      s: 'ثوان',\n      ss: '%d ثانية',\n      m: 'دقيقة',\n      mm: '%d دقائق',\n      h: 'ساعة',\n      hh: '%d ساعات',\n      d: 'يوم',\n      dd: '%d أيام',\n      M: 'شهر',\n      MM: '%d أشهر',\n      y: 'سنة',\n      yy: '%d سنوات'\n    },\n    preparse: function (string) {\n      return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n        return numberMap[match];\n      }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$1[match];\n      }).replace(/,/g, '،');\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ar-tn', {\n    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[اليوم على الساعة] LT',\n      nextDay: '[غدا على الساعة] LT',\n      nextWeek: 'dddd [على الساعة] LT',\n      lastDay: '[أمس على الساعة] LT',\n      lastWeek: 'dddd [على الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'في %s',\n      past: 'منذ %s',\n      s: 'ثوان',\n      ss: '%d ثانية',\n      m: 'دقيقة',\n      mm: '%d دقائق',\n      h: 'ساعة',\n      hh: '%d ساعات',\n      d: 'يوم',\n      dd: '%d أيام',\n      M: 'شهر',\n      MM: '%d أشهر',\n      y: 'سنة',\n      yy: '%d سنوات'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$2 = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n  },\n      numberMap$1 = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n  },\n      pluralForm$2 = function (n) {\n    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n  },\n      plurals$2 = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n  },\n      pluralize$2 = function (u) {\n    return function (number, withoutSuffix, string, isFuture) {\n      var f = pluralForm$2(number),\n          str = plurals$2[u][pluralForm$2(number)];\n\n      if (f === 2) {\n        str = str[withoutSuffix ? 0 : 1];\n      }\n\n      return str.replace(/%d/i, number);\n    };\n  },\n      months$3 = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n\n  hooks.defineLocale('ar', {\n    months: months$3,\n    monthsShort: months$3,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'D/\\u200FM/\\u200FYYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM: function (input) {\n      return 'م' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ص';\n      } else {\n        return 'م';\n      }\n    },\n    calendar: {\n      sameDay: '[اليوم عند الساعة] LT',\n      nextDay: '[غدًا عند الساعة] LT',\n      nextWeek: 'dddd [عند الساعة] LT',\n      lastDay: '[أمس عند الساعة] LT',\n      lastWeek: 'dddd [عند الساعة] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'بعد %s',\n      past: 'منذ %s',\n      s: pluralize$2('s'),\n      ss: pluralize$2('s'),\n      m: pluralize$2('m'),\n      mm: pluralize$2('m'),\n      h: pluralize$2('h'),\n      hh: pluralize$2('h'),\n      d: pluralize$2('d'),\n      dd: pluralize$2('d'),\n      M: pluralize$2('M'),\n      MM: pluralize$2('M'),\n      y: pluralize$2('y'),\n      yy: pluralize$2('y')\n    },\n    preparse: function (string) {\n      return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n        return numberMap$1[match];\n      }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$2[match];\n      }).replace(/,/g, '،');\n    },\n    week: {\n      dow: 6,\n      // Saturday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var suffixes = {\n    1: '-inci',\n    5: '-inci',\n    8: '-inci',\n    70: '-inci',\n    80: '-inci',\n    2: '-nci',\n    7: '-nci',\n    20: '-nci',\n    50: '-nci',\n    3: '-üncü',\n    4: '-üncü',\n    100: '-üncü',\n    6: '-ncı',\n    9: '-uncu',\n    10: '-uncu',\n    30: '-uncu',\n    60: '-ıncı',\n    90: '-ıncı'\n  };\n  hooks.defineLocale('az', {\n    months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n    monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n    weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n    weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n    weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[bugün saat] LT',\n      nextDay: '[sabah saat] LT',\n      nextWeek: '[gələn həftə] dddd [saat] LT',\n      lastDay: '[dünən] LT',\n      lastWeek: '[keçən həftə] dddd [saat] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s sonra',\n      past: '%s əvvəl',\n      s: 'bir neçə saniyə',\n      ss: '%d saniyə',\n      m: 'bir dəqiqə',\n      mm: '%d dəqiqə',\n      h: 'bir saat',\n      hh: '%d saat',\n      d: 'bir gün',\n      dd: '%d gün',\n      M: 'bir ay',\n      MM: '%d ay',\n      y: 'bir il',\n      yy: '%d il'\n    },\n    meridiemParse: /gecə|səhər|gündüz|axşam/,\n    isPM: function (input) {\n      return /^(gündüz|axşam)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'gecə';\n      } else if (hour < 12) {\n        return 'səhər';\n      } else if (hour < 17) {\n        return 'gündüz';\n      } else {\n        return 'axşam';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n    ordinal: function (number) {\n      if (number === 0) {\n        // special case for zero\n        return number + '-ıncı';\n      }\n\n      var a = number % 10,\n          b = number % 100 - a,\n          c = number >= 100 ? 100 : null;\n      return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n  }\n\n  function relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n      ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n      mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n      hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n      dd: 'дзень_дні_дзён',\n      MM: 'месяц_месяцы_месяцаў',\n      yy: 'год_гады_гадоў'\n    };\n\n    if (key === 'm') {\n      return withoutSuffix ? 'хвіліна' : 'хвіліну';\n    } else if (key === 'h') {\n      return withoutSuffix ? 'гадзіна' : 'гадзіну';\n    } else {\n      return number + ' ' + plural(format[key], +number);\n    }\n  }\n\n  hooks.defineLocale('be', {\n    months: {\n      format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n      standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n    },\n    monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n    weekdays: {\n      format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n      standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n      isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n    },\n    weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY г.',\n      LLL: 'D MMMM YYYY г., HH:mm',\n      LLLL: 'dddd, D MMMM YYYY г., HH:mm'\n    },\n    calendar: {\n      sameDay: '[Сёння ў] LT',\n      nextDay: '[Заўтра ў] LT',\n      lastDay: '[Учора ў] LT',\n      nextWeek: function () {\n        return '[У] dddd [ў] LT';\n      },\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n          case 3:\n          case 5:\n          case 6:\n            return '[У мінулую] dddd [ў] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[У мінулы] dddd [ў] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'праз %s',\n      past: '%s таму',\n      s: 'некалькі секунд',\n      m: relativeTimeWithPlural,\n      mm: relativeTimeWithPlural,\n      h: relativeTimeWithPlural,\n      hh: relativeTimeWithPlural,\n      d: 'дзень',\n      dd: relativeTimeWithPlural,\n      M: 'месяц',\n      MM: relativeTimeWithPlural,\n      y: 'год',\n      yy: relativeTimeWithPlural\n    },\n    meridiemParse: /ночы|раніцы|дня|вечара/,\n    isPM: function (input) {\n      return /^(дня|вечара)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'ночы';\n      } else if (hour < 12) {\n        return 'раніцы';\n      } else if (hour < 17) {\n        return 'дня';\n      } else {\n        return 'вечара';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'M':\n        case 'd':\n        case 'DDD':\n        case 'w':\n        case 'W':\n          return (number % 10 === 2 || number % 10 === 3) && number % 100 !== 12 && number % 100 !== 13 ? number + '-і' : number + '-ы';\n\n        case 'D':\n          return number + '-га';\n\n        default:\n          return number;\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('bg', {\n    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'D.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY H:mm',\n      LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[Днес в] LT',\n      nextDay: '[Утре в] LT',\n      nextWeek: 'dddd [в] LT',\n      lastDay: '[Вчера в] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n          case 3:\n          case 6:\n            return '[Миналата] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[Миналия] dddd [в] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'след %s',\n      past: 'преди %s',\n      s: 'няколко секунди',\n      ss: '%d секунди',\n      m: 'минута',\n      mm: '%d минути',\n      h: 'час',\n      hh: '%d часа',\n      d: 'ден',\n      dd: '%d дена',\n      w: 'седмица',\n      ww: '%d седмици',\n      M: 'месец',\n      MM: '%d месеца',\n      y: 'година',\n      yy: '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal: function (number) {\n      var lastDigit = number % 10,\n          last2Digits = number % 100;\n\n      if (number === 0) {\n        return number + '-ев';\n      } else if (last2Digits === 0) {\n        return number + '-ен';\n      } else if (last2Digits > 10 && last2Digits < 20) {\n        return number + '-ти';\n      } else if (lastDigit === 1) {\n        return number + '-ви';\n      } else if (lastDigit === 2) {\n        return number + '-ри';\n      } else if (lastDigit === 7 || lastDigit === 8) {\n        return number + '-ми';\n      } else {\n        return number + '-ти';\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('bm', {\n    months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n    monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n    weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n    weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n    weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'MMMM [tile] D [san] YYYY',\n      LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n      LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'\n    },\n    calendar: {\n      sameDay: '[Bi lɛrɛ] LT',\n      nextDay: '[Sini lɛrɛ] LT',\n      nextWeek: 'dddd [don lɛrɛ] LT',\n      lastDay: '[Kunu lɛrɛ] LT',\n      lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s kɔnɔ',\n      past: 'a bɛ %s bɔ',\n      s: 'sanga dama dama',\n      ss: 'sekondi %d',\n      m: 'miniti kelen',\n      mm: 'miniti %d',\n      h: 'lɛrɛ kelen',\n      hh: 'lɛrɛ %d',\n      d: 'tile kelen',\n      dd: 'tile %d',\n      M: 'kalo kelen',\n      MM: 'kalo %d',\n      y: 'san kelen',\n      yy: 'san %d'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$3 = {\n    1: '১',\n    2: '২',\n    3: '৩',\n    4: '৪',\n    5: '৫',\n    6: '৬',\n    7: '৭',\n    8: '৮',\n    9: '৯',\n    0: '০'\n  },\n      numberMap$2 = {\n    '১': '1',\n    '২': '2',\n    '৩': '3',\n    '৪': '4',\n    '৫': '5',\n    '৬': '6',\n    '৭': '7',\n    '৮': '8',\n    '৯': '9',\n    '০': '0'\n  };\n  hooks.defineLocale('bn-bd', {\n    months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n    monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n    weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm সময়',\n      LTS: 'A h:mm:ss সময়',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm সময়',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm সময়'\n    },\n    calendar: {\n      sameDay: '[আজ] LT',\n      nextDay: '[আগামীকাল] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[গতকাল] LT',\n      lastWeek: '[গত] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s পরে',\n      past: '%s আগে',\n      s: 'কয়েক সেকেন্ড',\n      ss: '%d সেকেন্ড',\n      m: 'এক মিনিট',\n      mm: '%d মিনিট',\n      h: 'এক ঘন্টা',\n      hh: '%d ঘন্টা',\n      d: 'এক দিন',\n      dd: '%d দিন',\n      M: 'এক মাস',\n      MM: '%d মাস',\n      y: 'এক বছর',\n      yy: '%d বছর'\n    },\n    preparse: function (string) {\n      return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n        return numberMap$2[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$3[match];\n      });\n    },\n    meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'রাত') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'ভোর') {\n        return hour;\n      } else if (meridiem === 'সকাল') {\n        return hour;\n      } else if (meridiem === 'দুপুর') {\n        return hour >= 3 ? hour : hour + 12;\n      } else if (meridiem === 'বিকাল') {\n        return hour + 12;\n      } else if (meridiem === 'সন্ধ্যা') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'রাত';\n      } else if (hour < 6) {\n        return 'ভোর';\n      } else if (hour < 12) {\n        return 'সকাল';\n      } else if (hour < 15) {\n        return 'দুপুর';\n      } else if (hour < 18) {\n        return 'বিকাল';\n      } else if (hour < 20) {\n        return 'সন্ধ্যা';\n      } else {\n        return 'রাত';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$4 = {\n    1: '১',\n    2: '২',\n    3: '৩',\n    4: '৪',\n    5: '৫',\n    6: '৬',\n    7: '৭',\n    8: '৮',\n    9: '৯',\n    0: '০'\n  },\n      numberMap$3 = {\n    '১': '1',\n    '২': '2',\n    '৩': '3',\n    '৪': '4',\n    '৫': '5',\n    '৬': '6',\n    '৭': '7',\n    '৮': '8',\n    '৯': '9',\n    '০': '0'\n  };\n  hooks.defineLocale('bn', {\n    months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n    monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n    weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n    weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n    weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm সময়',\n      LTS: 'A h:mm:ss সময়',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm সময়',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm সময়'\n    },\n    calendar: {\n      sameDay: '[আজ] LT',\n      nextDay: '[আগামীকাল] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[গতকাল] LT',\n      lastWeek: '[গত] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s পরে',\n      past: '%s আগে',\n      s: 'কয়েক সেকেন্ড',\n      ss: '%d সেকেন্ড',\n      m: 'এক মিনিট',\n      mm: '%d মিনিট',\n      h: 'এক ঘন্টা',\n      hh: '%d ঘন্টা',\n      d: 'এক দিন',\n      dd: '%d দিন',\n      M: 'এক মাস',\n      MM: '%d মাস',\n      y: 'এক বছর',\n      yy: '%d বছর'\n    },\n    preparse: function (string) {\n      return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n        return numberMap$3[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$4[match];\n      });\n    },\n    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'রাত' && hour >= 4 || meridiem === 'দুপুর' && hour < 5 || meridiem === 'বিকাল') {\n        return hour + 12;\n      } else {\n        return hour;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'রাত';\n      } else if (hour < 10) {\n        return 'সকাল';\n      } else if (hour < 17) {\n        return 'দুপুর';\n      } else if (hour < 20) {\n        return 'বিকাল';\n      } else {\n        return 'রাত';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$5 = {\n    1: '༡',\n    2: '༢',\n    3: '༣',\n    4: '༤',\n    5: '༥',\n    6: '༦',\n    7: '༧',\n    8: '༨',\n    9: '༩',\n    0: '༠'\n  },\n      numberMap$4 = {\n    '༡': '1',\n    '༢': '2',\n    '༣': '3',\n    '༤': '4',\n    '༥': '5',\n    '༦': '6',\n    '༧': '7',\n    '༨': '8',\n    '༩': '9',\n    '༠': '0'\n  };\n  hooks.defineLocale('bo', {\n    months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n    monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split('_'),\n    monthsShortRegex: /^(ཟླ་\\d{1,2})/,\n    monthsParseExact: true,\n    weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n    weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n    weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm',\n      LTS: 'A h:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm'\n    },\n    calendar: {\n      sameDay: '[དི་རིང] LT',\n      nextDay: '[སང་ཉིན] LT',\n      nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',\n      lastDay: '[ཁ་སང] LT',\n      lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s ལ་',\n      past: '%s སྔན་ལ',\n      s: 'ལམ་སང',\n      ss: '%d སྐར་ཆ།',\n      m: 'སྐར་མ་གཅིག',\n      mm: '%d སྐར་མ',\n      h: 'ཆུ་ཚོད་གཅིག',\n      hh: '%d ཆུ་ཚོད',\n      d: 'ཉིན་གཅིག',\n      dd: '%d ཉིན་',\n      M: 'ཟླ་བ་གཅིག',\n      MM: '%d ཟླ་བ',\n      y: 'ལོ་གཅིག',\n      yy: '%d ལོ'\n    },\n    preparse: function (string) {\n      return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n        return numberMap$4[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$5[match];\n      });\n    },\n    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'མཚན་མོ' && hour >= 4 || meridiem === 'ཉིན་གུང' && hour < 5 || meridiem === 'དགོང་དག') {\n        return hour + 12;\n      } else {\n        return hour;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'མཚན་མོ';\n      } else if (hour < 10) {\n        return 'ཞོགས་ཀས';\n      } else if (hour < 17) {\n        return 'ཉིན་གུང';\n      } else if (hour < 20) {\n        return 'དགོང་དག';\n      } else {\n        return 'མཚན་མོ';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function relativeTimeWithMutation(number, withoutSuffix, key) {\n    var format = {\n      mm: 'munutenn',\n      MM: 'miz',\n      dd: 'devezh'\n    };\n    return number + ' ' + mutation(format[key], number);\n  }\n\n  function specialMutationForYears(number) {\n    switch (lastNumber(number)) {\n      case 1:\n      case 3:\n      case 4:\n      case 5:\n      case 9:\n        return number + ' bloaz';\n\n      default:\n        return number + ' vloaz';\n    }\n  }\n\n  function lastNumber(number) {\n    if (number > 9) {\n      return lastNumber(number % 10);\n    }\n\n    return number;\n  }\n\n  function mutation(text, number) {\n    if (number === 2) {\n      return softMutation(text);\n    }\n\n    return text;\n  }\n\n  function softMutation(text) {\n    var mutationTable = {\n      m: 'v',\n      b: 'v',\n      d: 'z'\n    };\n\n    if (mutationTable[text.charAt(0)] === undefined) {\n      return text;\n    }\n\n    return mutationTable[text.charAt(0)] + text.substring(1);\n  }\n\n  var monthsParse = [/^gen/i, /^c[ʼ\\']hwe/i, /^meu/i, /^ebr/i, /^mae/i, /^(mez|eve)/i, /^gou/i, /^eos/i, /^gwe/i, /^her/i, /^du/i, /^ker/i],\n      monthsRegex$1 = /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n      monthsStrictRegex = /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,\n      monthsShortStrictRegex = /^(gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n      fullWeekdaysParse = [/^sul/i, /^lun/i, /^meurzh/i, /^merc[ʼ\\']her/i, /^yaou/i, /^gwener/i, /^sadorn/i],\n      shortWeekdaysParse = [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i],\n      minWeekdaysParse = [/^Su/i, /^Lu/i, /^Me([^r]|$)/i, /^Mer/i, /^Ya/i, /^Gw/i, /^Sa/i];\n  hooks.defineLocale('br', {\n    months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n    monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n    weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),\n    weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n    weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n    weekdaysParse: minWeekdaysParse,\n    fullWeekdaysParse: fullWeekdaysParse,\n    shortWeekdaysParse: shortWeekdaysParse,\n    minWeekdaysParse: minWeekdaysParse,\n    monthsRegex: monthsRegex$1,\n    monthsShortRegex: monthsRegex$1,\n    monthsStrictRegex: monthsStrictRegex,\n    monthsShortStrictRegex: monthsShortStrictRegex,\n    monthsParse: monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [a viz] MMMM YYYY',\n      LLL: 'D [a viz] MMMM YYYY HH:mm',\n      LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Hiziv da] LT',\n      nextDay: '[Warcʼhoazh da] LT',\n      nextWeek: 'dddd [da] LT',\n      lastDay: '[Decʼh da] LT',\n      lastWeek: 'dddd [paset da] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'a-benn %s',\n      past: '%s ʼzo',\n      s: 'un nebeud segondennoù',\n      ss: '%d eilenn',\n      m: 'ur vunutenn',\n      mm: relativeTimeWithMutation,\n      h: 'un eur',\n      hh: '%d eur',\n      d: 'un devezh',\n      dd: relativeTimeWithMutation,\n      M: 'ur miz',\n      MM: relativeTimeWithMutation,\n      y: 'ur bloaz',\n      yy: specialMutationForYears\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n    ordinal: function (number) {\n      var output = number === 1 ? 'añ' : 'vet';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    },\n    meridiemParse: /a.m.|g.m./,\n    // goude merenn | a-raok merenn\n    isPM: function (token) {\n      return token === 'g.m.';\n    },\n    meridiem: function (hour, minute, isLower) {\n      return hour < 12 ? 'a.m.' : 'g.m.';\n    }\n  }); //! moment.js locale configuration\n\n  function translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 'ss':\n        if (number === 1) {\n          result += 'sekunda';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'sekunde';\n        } else {\n          result += 'sekundi';\n        }\n\n        return result;\n\n      case 'm':\n        return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n\n      case 'mm':\n        if (number === 1) {\n          result += 'minuta';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'minute';\n        } else {\n          result += 'minuta';\n        }\n\n        return result;\n\n      case 'h':\n        return withoutSuffix ? 'jedan sat' : 'jednog sata';\n\n      case 'hh':\n        if (number === 1) {\n          result += 'sat';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'sata';\n        } else {\n          result += 'sati';\n        }\n\n        return result;\n\n      case 'dd':\n        if (number === 1) {\n          result += 'dan';\n        } else {\n          result += 'dana';\n        }\n\n        return result;\n\n      case 'MM':\n        if (number === 1) {\n          result += 'mjesec';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'mjeseca';\n        } else {\n          result += 'mjeseci';\n        }\n\n        return result;\n\n      case 'yy':\n        if (number === 1) {\n          result += 'godina';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'godine';\n        } else {\n          result += 'godina';\n        }\n\n        return result;\n    }\n  }\n\n  hooks.defineLocale('bs', {\n    months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[danas u] LT',\n      nextDay: '[sutra u] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[u] [nedjelju] [u] LT';\n\n          case 3:\n            return '[u] [srijedu] [u] LT';\n\n          case 6:\n            return '[u] [subotu] [u] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[u] dddd [u] LT';\n        }\n      },\n      lastDay: '[jučer u] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n          case 3:\n            return '[prošlu] dddd [u] LT';\n\n          case 6:\n            return '[prošle] [subote] [u] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[prošli] dddd [u] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'prije %s',\n      s: 'par sekundi',\n      ss: translate,\n      m: translate,\n      mm: translate,\n      h: translate,\n      hh: translate,\n      d: 'dan',\n      dd: translate,\n      M: 'mjesec',\n      MM: translate,\n      y: 'godinu',\n      yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ca', {\n    months: {\n      standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n      format: \"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre\".split('_'),\n      isFormat: /D[oD]?(\\s)+MMMM/\n    },\n    monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n    weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM [de] YYYY',\n      ll: 'D MMM YYYY',\n      LLL: 'D MMMM [de] YYYY [a les] H:mm',\n      lll: 'D MMM YYYY, H:mm',\n      LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',\n      llll: 'ddd D MMM YYYY, H:mm'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n      },\n      nextDay: function () {\n        return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n      },\n      nextWeek: function () {\n        return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n      },\n      lastDay: function () {\n        return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n      },\n      lastWeek: function () {\n        return '[el] dddd [passat a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: \"d'aquí %s\",\n      past: 'fa %s',\n      s: 'uns segons',\n      ss: '%d segons',\n      m: 'un minut',\n      mm: '%d minuts',\n      h: 'una hora',\n      hh: '%d hores',\n      d: 'un dia',\n      dd: '%d dies',\n      M: 'un mes',\n      MM: '%d mesos',\n      y: 'un any',\n      yy: '%d anys'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n    ordinal: function (number, period) {\n      var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';\n\n      if (period === 'w' || period === 'W') {\n        output = 'a';\n      }\n\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var months$4 = {\n    format: 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n    standalone: 'ledna_února_března_dubna_května_června_července_srpna_září_října_listopadu_prosince'.split('_')\n  },\n      monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n      monthsParse$1 = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i],\n      // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n  // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n  monthsRegex$2 = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n  function plural$1(n) {\n    return n > 1 && n < 5 && ~~(n / 10) !== 1;\n  }\n\n  function translate$1(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 's':\n        // a few seconds / in a few seconds / a few seconds ago\n        return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n      case 'ss':\n        // 9 seconds / in 9 seconds / 9 seconds ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$1(number) ? 'sekundy' : 'sekund');\n        } else {\n          return result + 'sekundami';\n        }\n\n      case 'm':\n        // a minute / in a minute / a minute ago\n        return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n      case 'mm':\n        // 9 minutes / in 9 minutes / 9 minutes ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$1(number) ? 'minuty' : 'minut');\n        } else {\n          return result + 'minutami';\n        }\n\n      case 'h':\n        // an hour / in an hour / an hour ago\n        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n      case 'hh':\n        // 9 hours / in 9 hours / 9 hours ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$1(number) ? 'hodiny' : 'hodin');\n        } else {\n          return result + 'hodinami';\n        }\n\n      case 'd':\n        // a day / in a day / a day ago\n        return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n      case 'dd':\n        // 9 days / in 9 days / 9 days ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$1(number) ? 'dny' : 'dní');\n        } else {\n          return result + 'dny';\n        }\n\n      case 'M':\n        // a month / in a month / a month ago\n        return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n      case 'MM':\n        // 9 months / in 9 months / 9 months ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$1(number) ? 'měsíce' : 'měsíců');\n        } else {\n          return result + 'měsíci';\n        }\n\n      case 'y':\n        // a year / in a year / a year ago\n        return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n      case 'yy':\n        // 9 years / in 9 years / 9 years ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$1(number) ? 'roky' : 'let');\n        } else {\n          return result + 'lety';\n        }\n\n    }\n  }\n\n  hooks.defineLocale('cs', {\n    months: months$4,\n    monthsShort: monthsShort,\n    monthsRegex: monthsRegex$2,\n    monthsShortRegex: monthsRegex$2,\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n    monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n    monthsParse: monthsParse$1,\n    longMonthsParse: monthsParse$1,\n    shortMonthsParse: monthsParse$1,\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd D. MMMM YYYY H:mm',\n      l: 'D. M. YYYY'\n    },\n    calendar: {\n      sameDay: '[dnes v] LT',\n      nextDay: '[zítra v] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[v neděli v] LT';\n\n          case 1:\n          case 2:\n            return '[v] dddd [v] LT';\n\n          case 3:\n            return '[ve středu v] LT';\n\n          case 4:\n            return '[ve čtvrtek v] LT';\n\n          case 5:\n            return '[v pátek v] LT';\n\n          case 6:\n            return '[v sobotu v] LT';\n        }\n      },\n      lastDay: '[včera v] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[minulou neděli v] LT';\n\n          case 1:\n          case 2:\n            return '[minulé] dddd [v] LT';\n\n          case 3:\n            return '[minulou středu v] LT';\n\n          case 4:\n          case 5:\n            return '[minulý] dddd [v] LT';\n\n          case 6:\n            return '[minulou sobotu v] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'před %s',\n      s: translate$1,\n      ss: translate$1,\n      m: translate$1,\n      mm: translate$1,\n      h: translate$1,\n      hh: translate$1,\n      d: translate$1,\n      dd: translate$1,\n      M: translate$1,\n      MM: translate$1,\n      y: translate$1,\n      yy: translate$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('cv', {\n    months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n    monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n    weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n    weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n    weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD-MM-YYYY',\n      LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n      LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n      LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n    },\n    calendar: {\n      sameDay: '[Паян] LT [сехетре]',\n      nextDay: '[Ыран] LT [сехетре]',\n      lastDay: '[Ӗнер] LT [сехетре]',\n      nextWeek: '[Ҫитес] dddd LT [сехетре]',\n      lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: function (output) {\n        var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n        return output + affix;\n      },\n      past: '%s каялла',\n      s: 'пӗр-ик ҫеккунт',\n      ss: '%d ҫеккунт',\n      m: 'пӗр минут',\n      mm: '%d минут',\n      h: 'пӗр сехет',\n      hh: '%d сехет',\n      d: 'пӗр кун',\n      dd: '%d кун',\n      M: 'пӗр уйӑх',\n      MM: '%d уйӑх',\n      y: 'пӗр ҫул',\n      yy: '%d ҫул'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n    ordinal: '%d-мӗш',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('cy', {\n    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n    weekdaysParseExact: true,\n    // time formats are the same as en-gb\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Heddiw am] LT',\n      nextDay: '[Yfory am] LT',\n      nextWeek: 'dddd [am] LT',\n      lastDay: '[Ddoe am] LT',\n      lastWeek: 'dddd [diwethaf am] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'mewn %s',\n      past: '%s yn ôl',\n      s: 'ychydig eiliadau',\n      ss: '%d eiliad',\n      m: 'munud',\n      mm: '%d munud',\n      h: 'awr',\n      hh: '%d awr',\n      d: 'diwrnod',\n      dd: '%d diwrnod',\n      M: 'mis',\n      MM: '%d mis',\n      y: 'blwyddyn',\n      yy: '%d flynedd'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n    ordinal: function (number) {\n      var b = number,\n          output = '',\n          lookup = ['', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n      'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n      ];\n\n      if (b > 20) {\n        if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n          output = 'fed'; // not 30ain, 70ain or 90ain\n        } else {\n          output = 'ain';\n        }\n      } else if (b > 0) {\n        output = lookup[b];\n      }\n\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('da', {\n    months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY HH:mm',\n      LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n      sameDay: '[i dag kl.] LT',\n      nextDay: '[i morgen kl.] LT',\n      nextWeek: 'på dddd [kl.] LT',\n      lastDay: '[i går kl.] LT',\n      lastWeek: '[i] dddd[s kl.] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'om %s',\n      past: '%s siden',\n      s: 'få sekunder',\n      ss: '%d sekunder',\n      m: 'et minut',\n      mm: '%d minutter',\n      h: 'en time',\n      hh: '%d timer',\n      d: 'en dag',\n      dd: '%d dage',\n      M: 'en måned',\n      MM: '%d måneder',\n      y: 'et år',\n      yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n      m: ['eine Minute', 'einer Minute'],\n      h: ['eine Stunde', 'einer Stunde'],\n      d: ['ein Tag', 'einem Tag'],\n      dd: [number + ' Tage', number + ' Tagen'],\n      w: ['eine Woche', 'einer Woche'],\n      M: ['ein Monat', 'einem Monat'],\n      MM: [number + ' Monate', number + ' Monaten'],\n      y: ['ein Jahr', 'einem Jahr'],\n      yy: [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n  }\n\n  hooks.defineLocale('de-at', {\n    months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY HH:mm',\n      LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[heute um] LT [Uhr]',\n      sameElse: 'L',\n      nextDay: '[morgen um] LT [Uhr]',\n      nextWeek: 'dddd [um] LT [Uhr]',\n      lastDay: '[gestern um] LT [Uhr]',\n      lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: 'vor %s',\n      s: 'ein paar Sekunden',\n      ss: '%d Sekunden',\n      m: processRelativeTime,\n      mm: '%d Minuten',\n      h: processRelativeTime,\n      hh: '%d Stunden',\n      d: processRelativeTime,\n      dd: processRelativeTime,\n      w: processRelativeTime,\n      ww: '%d Wochen',\n      M: processRelativeTime,\n      MM: processRelativeTime,\n      y: processRelativeTime,\n      yy: processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$1(number, withoutSuffix, key, isFuture) {\n    var format = {\n      m: ['eine Minute', 'einer Minute'],\n      h: ['eine Stunde', 'einer Stunde'],\n      d: ['ein Tag', 'einem Tag'],\n      dd: [number + ' Tage', number + ' Tagen'],\n      w: ['eine Woche', 'einer Woche'],\n      M: ['ein Monat', 'einem Monat'],\n      MM: [number + ' Monate', number + ' Monaten'],\n      y: ['ein Jahr', 'einem Jahr'],\n      yy: [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n  }\n\n  hooks.defineLocale('de-ch', {\n    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY HH:mm',\n      LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[heute um] LT [Uhr]',\n      sameElse: 'L',\n      nextDay: '[morgen um] LT [Uhr]',\n      nextWeek: 'dddd [um] LT [Uhr]',\n      lastDay: '[gestern um] LT [Uhr]',\n      lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: 'vor %s',\n      s: 'ein paar Sekunden',\n      ss: '%d Sekunden',\n      m: processRelativeTime$1,\n      mm: '%d Minuten',\n      h: processRelativeTime$1,\n      hh: '%d Stunden',\n      d: processRelativeTime$1,\n      dd: processRelativeTime$1,\n      w: processRelativeTime$1,\n      ww: '%d Wochen',\n      M: processRelativeTime$1,\n      MM: processRelativeTime$1,\n      y: processRelativeTime$1,\n      yy: processRelativeTime$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n    var format = {\n      m: ['eine Minute', 'einer Minute'],\n      h: ['eine Stunde', 'einer Stunde'],\n      d: ['ein Tag', 'einem Tag'],\n      dd: [number + ' Tage', number + ' Tagen'],\n      w: ['eine Woche', 'einer Woche'],\n      M: ['ein Monat', 'einem Monat'],\n      MM: [number + ' Monate', number + ' Monaten'],\n      y: ['ein Jahr', 'einem Jahr'],\n      yy: [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n  }\n\n  hooks.defineLocale('de', {\n    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY HH:mm',\n      LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[heute um] LT [Uhr]',\n      sameElse: 'L',\n      nextDay: '[morgen um] LT [Uhr]',\n      nextWeek: 'dddd [um] LT [Uhr]',\n      lastDay: '[gestern um] LT [Uhr]',\n      lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: 'vor %s',\n      s: 'ein paar Sekunden',\n      ss: '%d Sekunden',\n      m: processRelativeTime$2,\n      mm: '%d Minuten',\n      h: processRelativeTime$2,\n      hh: '%d Stunden',\n      d: processRelativeTime$2,\n      dd: processRelativeTime$2,\n      w: processRelativeTime$2,\n      ww: '%d Wochen',\n      M: processRelativeTime$2,\n      MM: processRelativeTime$2,\n      y: processRelativeTime$2,\n      yy: processRelativeTime$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var months$5 = ['ޖެނުއަރީ', 'ފެބްރުއަރީ', 'މާރިޗު', 'އޭޕްރީލު', 'މޭ', 'ޖޫން', 'ޖުލައި', 'އޯގަސްޓު', 'ސެޕްޓެމްބަރު', 'އޮކްޓޯބަރު', 'ނޮވެމްބަރު', 'ޑިސެމްބަރު'],\n      weekdays = ['އާދިއްތަ', 'ހޯމަ', 'އަންގާރަ', 'ބުދަ', 'ބުރާސްފަތި', 'ހުކުރު', 'ހޮނިހިރު'];\n  hooks.defineLocale('dv', {\n    months: months$5,\n    monthsShort: months$5,\n    weekdays: weekdays,\n    weekdaysShort: weekdays,\n    weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'D/M/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /މކ|މފ/,\n    isPM: function (input) {\n      return 'މފ' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'މކ';\n      } else {\n        return 'މފ';\n      }\n    },\n    calendar: {\n      sameDay: '[މިއަދު] LT',\n      nextDay: '[މާދަމާ] LT',\n      nextWeek: 'dddd LT',\n      lastDay: '[އިއްޔެ] LT',\n      lastWeek: '[ފާއިތުވި] dddd LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'ތެރޭގައި %s',\n      past: 'ކުރިން %s',\n      s: 'ސިކުންތުކޮޅެއް',\n      ss: 'd% ސިކުންތު',\n      m: 'މިނިޓެއް',\n      mm: 'މިނިޓު %d',\n      h: 'ގަޑިއިރެއް',\n      hh: 'ގަޑިއިރު %d',\n      d: 'ދުވަހެއް',\n      dd: 'ދުވަސް %d',\n      M: 'މަހެއް',\n      MM: 'މަސް %d',\n      y: 'އަހަރެއް',\n      yy: 'އަހަރު %d'\n    },\n    preparse: function (string) {\n      return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/,/g, '،');\n    },\n    week: {\n      dow: 7,\n      // Sunday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function isFunction$1(input) {\n    return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  hooks.defineLocale('el', {\n    monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n    monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n    months: function (momentToFormat, format) {\n      if (!momentToFormat) {\n        return this._monthsNominativeEl;\n      } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) {\n        // if there is a day number before 'MMMM'\n        return this._monthsGenitiveEl[momentToFormat.month()];\n      } else {\n        return this._monthsNominativeEl[momentToFormat.month()];\n      }\n    },\n    monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n    weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n    weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n    weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n    meridiem: function (hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? 'μμ' : 'ΜΜ';\n      } else {\n        return isLower ? 'πμ' : 'ΠΜ';\n      }\n    },\n    isPM: function (input) {\n      return (input + '').toLowerCase()[0] === 'μ';\n    },\n    meridiemParse: /[ΠΜ]\\.?Μ?\\.?/i,\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY h:mm A',\n      LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendarEl: {\n      sameDay: '[Σήμερα {}] LT',\n      nextDay: '[Αύριο {}] LT',\n      nextWeek: 'dddd [{}] LT',\n      lastDay: '[Χθες {}] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 6:\n            return '[το προηγούμενο] dddd [{}] LT';\n\n          default:\n            return '[την προηγούμενη] dddd [{}] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    calendar: function (key, mom) {\n      var output = this._calendarEl[key],\n          hours = mom && mom.hours();\n\n      if (isFunction$1(output)) {\n        output = output.apply(mom);\n      }\n\n      return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');\n    },\n    relativeTime: {\n      future: 'σε %s',\n      past: '%s πριν',\n      s: 'λίγα δευτερόλεπτα',\n      ss: '%d δευτερόλεπτα',\n      m: 'ένα λεπτό',\n      mm: '%d λεπτά',\n      h: 'μία ώρα',\n      hh: '%d ώρες',\n      d: 'μία μέρα',\n      dd: '%d μέρες',\n      M: 'ένας μήνας',\n      MM: '%d μήνες',\n      y: 'ένας χρόνος',\n      yy: '%d χρόνια'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}η/,\n    ordinal: '%dη',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4st is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-au', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY h:mm A',\n      LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-ca', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'YYYY-MM-DD',\n      LL: 'MMMM D, YYYY',\n      LLL: 'MMMM D, YYYY h:mm A',\n      LLLL: 'dddd, MMMM D, YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-gb', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-ie', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-il', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-in', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY h:mm A',\n      LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-nz', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY h:mm A',\n      LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('en-sg', {\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Today at] LT',\n      nextDay: '[Tomorrow at] LT',\n      nextWeek: 'dddd [at] LT',\n      lastDay: '[Yesterday at] LT',\n      lastWeek: '[Last] dddd [at] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('eo', {\n    months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n    monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),\n    weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n    weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: '[la] D[-an de] MMMM, YYYY',\n      LLL: '[la] D[-an de] MMMM, YYYY HH:mm',\n      LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',\n      llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm'\n    },\n    meridiemParse: /[ap]\\.t\\.m/i,\n    isPM: function (input) {\n      return input.charAt(0).toLowerCase() === 'p';\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? 'p.t.m.' : 'P.T.M.';\n      } else {\n        return isLower ? 'a.t.m.' : 'A.T.M.';\n      }\n    },\n    calendar: {\n      sameDay: '[Hodiaŭ je] LT',\n      nextDay: '[Morgaŭ je] LT',\n      nextWeek: 'dddd[n je] LT',\n      lastDay: '[Hieraŭ je] LT',\n      lastWeek: '[pasintan] dddd[n je] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'post %s',\n      past: 'antaŭ %s',\n      s: 'kelkaj sekundoj',\n      ss: '%d sekundoj',\n      m: 'unu minuto',\n      mm: '%d minutoj',\n      h: 'unu horo',\n      hh: '%d horoj',\n      d: 'unu tago',\n      //ne 'diurno', ĉar estas uzita por proksimumo\n      dd: '%d tagoj',\n      M: 'unu monato',\n      MM: '%d monatoj',\n      y: 'unu jaro',\n      yy: '%d jaroj'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}a/,\n    ordinal: '%da',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n      monthsShort$1 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n      monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],\n      monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n  hooks.defineLocale('es-do', {\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortDot;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShort$1[m.month()];\n      } else {\n        return monthsShortDot[m.month()];\n      }\n    },\n    monthsRegex: monthsRegex$3,\n    monthsShortRegex: monthsRegex$3,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$2,\n    longMonthsParse: monthsParse$2,\n    shortMonthsParse: monthsParse$2,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY h:mm A',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextDay: function () {\n        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextWeek: function () {\n        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastDay: function () {\n        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastWeek: function () {\n        return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'en %s',\n      past: 'hace %s',\n      s: 'unos segundos',\n      ss: '%d segundos',\n      m: 'un minuto',\n      mm: '%d minutos',\n      h: 'una hora',\n      hh: '%d horas',\n      d: 'un día',\n      dd: '%d días',\n      w: 'una semana',\n      ww: '%d semanas',\n      M: 'un mes',\n      MM: '%d meses',\n      y: 'un año',\n      yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n      monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n      monthsParse$3 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],\n      monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n  hooks.defineLocale('es-mx', {\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortDot$1;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShort$2[m.month()];\n      } else {\n        return monthsShortDot$1[m.month()];\n      }\n    },\n    monthsRegex: monthsRegex$4,\n    monthsShortRegex: monthsRegex$4,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$3,\n    longMonthsParse: monthsParse$3,\n    shortMonthsParse: monthsParse$3,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY H:mm',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextDay: function () {\n        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextWeek: function () {\n        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastDay: function () {\n        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastWeek: function () {\n        return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'en %s',\n      past: 'hace %s',\n      s: 'unos segundos',\n      ss: '%d segundos',\n      m: 'un minuto',\n      mm: '%d minutos',\n      h: 'una hora',\n      hh: '%d horas',\n      d: 'un día',\n      dd: '%d días',\n      w: 'una semana',\n      ww: '%d semanas',\n      M: 'un mes',\n      MM: '%d meses',\n      y: 'un año',\n      yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    },\n    invalidDate: 'Fecha inválida'\n  }); //! moment.js locale configuration\n\n  var monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n      monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n      monthsParse$4 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],\n      monthsRegex$5 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n  hooks.defineLocale('es-us', {\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortDot$2;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShort$3[m.month()];\n      } else {\n        return monthsShortDot$2[m.month()];\n      }\n    },\n    monthsRegex: monthsRegex$5,\n    monthsShortRegex: monthsRegex$5,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$4,\n    longMonthsParse: monthsParse$4,\n    shortMonthsParse: monthsParse$4,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'MM/DD/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY h:mm A',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextDay: function () {\n        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextWeek: function () {\n        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastDay: function () {\n        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastWeek: function () {\n        return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'en %s',\n      past: 'hace %s',\n      s: 'unos segundos',\n      ss: '%d segundos',\n      m: 'un minuto',\n      mm: '%d minutos',\n      h: 'una hora',\n      hh: '%d horas',\n      d: 'un día',\n      dd: '%d días',\n      w: 'una semana',\n      ww: '%d semanas',\n      M: 'un mes',\n      MM: '%d meses',\n      y: 'un año',\n      yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n      monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n      monthsParse$5 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],\n      monthsRegex$6 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n  hooks.defineLocale('es', {\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortDot$3;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShort$4[m.month()];\n      } else {\n        return monthsShortDot$3[m.month()];\n      }\n    },\n    monthsRegex: monthsRegex$6,\n    monthsShortRegex: monthsRegex$6,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$5,\n    longMonthsParse: monthsParse$5,\n    shortMonthsParse: monthsParse$5,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY H:mm',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextDay: function () {\n        return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      nextWeek: function () {\n        return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastDay: function () {\n        return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      lastWeek: function () {\n        return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'en %s',\n      past: 'hace %s',\n      s: 'unos segundos',\n      ss: '%d segundos',\n      m: 'un minuto',\n      mm: '%d minutos',\n      h: 'una hora',\n      hh: '%d horas',\n      d: 'un día',\n      dd: '%d días',\n      w: 'una semana',\n      ww: '%d semanas',\n      M: 'un mes',\n      MM: '%d meses',\n      y: 'un año',\n      yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    },\n    invalidDate: 'Fecha inválida'\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$3(number, withoutSuffix, key, isFuture) {\n    var format = {\n      s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n      ss: [number + 'sekundi', number + 'sekundit'],\n      m: ['ühe minuti', 'üks minut'],\n      mm: [number + ' minuti', number + ' minutit'],\n      h: ['ühe tunni', 'tund aega', 'üks tund'],\n      hh: [number + ' tunni', number + ' tundi'],\n      d: ['ühe päeva', 'üks päev'],\n      M: ['kuu aja', 'kuu aega', 'üks kuu'],\n      MM: [number + ' kuu', number + ' kuud'],\n      y: ['ühe aasta', 'aasta', 'üks aasta'],\n      yy: [number + ' aasta', number + ' aastat']\n    };\n\n    if (withoutSuffix) {\n      return format[key][2] ? format[key][2] : format[key][1];\n    }\n\n    return isFuture ? format[key][0] : format[key][1];\n  }\n\n  hooks.defineLocale('et', {\n    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[Täna,] LT',\n      nextDay: '[Homme,] LT',\n      nextWeek: '[Järgmine] dddd LT',\n      lastDay: '[Eile,] LT',\n      lastWeek: '[Eelmine] dddd LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s pärast',\n      past: '%s tagasi',\n      s: processRelativeTime$3,\n      ss: processRelativeTime$3,\n      m: processRelativeTime$3,\n      mm: processRelativeTime$3,\n      h: processRelativeTime$3,\n      hh: processRelativeTime$3,\n      d: processRelativeTime$3,\n      dd: '%d päeva',\n      M: processRelativeTime$3,\n      MM: processRelativeTime$3,\n      y: processRelativeTime$3,\n      yy: processRelativeTime$3\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('eu', {\n    months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n    monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n    weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),\n    weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: 'YYYY[ko] MMMM[ren] D[a]',\n      LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n      LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n      l: 'YYYY-M-D',\n      ll: 'YYYY[ko] MMM D[a]',\n      lll: 'YYYY[ko] MMM D[a] HH:mm',\n      llll: 'ddd, YYYY[ko] MMM D[a] HH:mm'\n    },\n    calendar: {\n      sameDay: '[gaur] LT[etan]',\n      nextDay: '[bihar] LT[etan]',\n      nextWeek: 'dddd LT[etan]',\n      lastDay: '[atzo] LT[etan]',\n      lastWeek: '[aurreko] dddd LT[etan]',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s barru',\n      past: 'duela %s',\n      s: 'segundo batzuk',\n      ss: '%d segundo',\n      m: 'minutu bat',\n      mm: '%d minutu',\n      h: 'ordu bat',\n      hh: '%d ordu',\n      d: 'egun bat',\n      dd: '%d egun',\n      M: 'hilabete bat',\n      MM: '%d hilabete',\n      y: 'urte bat',\n      yy: '%d urte'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$6 = {\n    1: '۱',\n    2: '۲',\n    3: '۳',\n    4: '۴',\n    5: '۵',\n    6: '۶',\n    7: '۷',\n    8: '۸',\n    9: '۹',\n    0: '۰'\n  },\n      numberMap$5 = {\n    '۱': '1',\n    '۲': '2',\n    '۳': '3',\n    '۴': '4',\n    '۵': '5',\n    '۶': '6',\n    '۷': '7',\n    '۸': '8',\n    '۹': '9',\n    '۰': '0'\n  };\n  hooks.defineLocale('fa', {\n    months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n    monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n    weekdays: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n    weekdaysShort: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n    weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /قبل از ظهر|بعد از ظهر/,\n    isPM: function (input) {\n      return /بعد از ظهر/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'قبل از ظهر';\n      } else {\n        return 'بعد از ظهر';\n      }\n    },\n    calendar: {\n      sameDay: '[امروز ساعت] LT',\n      nextDay: '[فردا ساعت] LT',\n      nextWeek: 'dddd [ساعت] LT',\n      lastDay: '[دیروز ساعت] LT',\n      lastWeek: 'dddd [پیش] [ساعت] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'در %s',\n      past: '%s پیش',\n      s: 'چند ثانیه',\n      ss: '%d ثانیه',\n      m: 'یک دقیقه',\n      mm: '%d دقیقه',\n      h: 'یک ساعت',\n      hh: '%d ساعت',\n      d: 'یک روز',\n      dd: '%d روز',\n      M: 'یک ماه',\n      MM: '%d ماه',\n      y: 'یک سال',\n      yy: '%d سال'\n    },\n    preparse: function (string) {\n      return string.replace(/[۰-۹]/g, function (match) {\n        return numberMap$5[match];\n      }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$6[match];\n      }).replace(/,/g, '،');\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}م/,\n    ordinal: '%dم',\n    week: {\n      dow: 6,\n      // Saturday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n      numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\n\n  function translate$2(number, withoutSuffix, key, isFuture) {\n    var result = '';\n\n    switch (key) {\n      case 's':\n        return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n\n      case 'ss':\n        result = isFuture ? 'sekunnin' : 'sekuntia';\n        break;\n\n      case 'm':\n        return isFuture ? 'minuutin' : 'minuutti';\n\n      case 'mm':\n        result = isFuture ? 'minuutin' : 'minuuttia';\n        break;\n\n      case 'h':\n        return isFuture ? 'tunnin' : 'tunti';\n\n      case 'hh':\n        result = isFuture ? 'tunnin' : 'tuntia';\n        break;\n\n      case 'd':\n        return isFuture ? 'päivän' : 'päivä';\n\n      case 'dd':\n        result = isFuture ? 'päivän' : 'päivää';\n        break;\n\n      case 'M':\n        return isFuture ? 'kuukauden' : 'kuukausi';\n\n      case 'MM':\n        result = isFuture ? 'kuukauden' : 'kuukautta';\n        break;\n\n      case 'y':\n        return isFuture ? 'vuoden' : 'vuosi';\n\n      case 'yy':\n        result = isFuture ? 'vuoden' : 'vuotta';\n        break;\n    }\n\n    result = verbalNumber(number, isFuture) + ' ' + result;\n    return result;\n  }\n\n  function verbalNumber(number, isFuture) {\n    return number < 10 ? isFuture ? numbersFuture[number] : numbersPast[number] : number;\n  }\n\n  hooks.defineLocale('fi', {\n    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n    monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n    weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    longDateFormat: {\n      LT: 'HH.mm',\n      LTS: 'HH.mm.ss',\n      L: 'DD.MM.YYYY',\n      LL: 'Do MMMM[ta] YYYY',\n      LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n      LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n      l: 'D.M.YYYY',\n      ll: 'Do MMM YYYY',\n      lll: 'Do MMM YYYY, [klo] HH.mm',\n      llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n    },\n    calendar: {\n      sameDay: '[tänään] [klo] LT',\n      nextDay: '[huomenna] [klo] LT',\n      nextWeek: 'dddd [klo] LT',\n      lastDay: '[eilen] [klo] LT',\n      lastWeek: '[viime] dddd[na] [klo] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s päästä',\n      past: '%s sitten',\n      s: translate$2,\n      ss: translate$2,\n      m: translate$2,\n      mm: translate$2,\n      h: translate$2,\n      hh: translate$2,\n      d: translate$2,\n      dd: translate$2,\n      M: translate$2,\n      MM: translate$2,\n      y: translate$2,\n      yy: translate$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('fil', {\n    months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n    monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n    weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n    weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n    weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'MM/D/YYYY',\n      LL: 'MMMM D, YYYY',\n      LLL: 'MMMM D, YYYY HH:mm',\n      LLLL: 'dddd, MMMM DD, YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: 'LT [ngayong araw]',\n      nextDay: '[Bukas ng] LT',\n      nextWeek: 'LT [sa susunod na] dddd',\n      lastDay: 'LT [kahapon]',\n      lastWeek: 'LT [noong nakaraang] dddd',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'sa loob ng %s',\n      past: '%s ang nakalipas',\n      s: 'ilang segundo',\n      ss: '%d segundo',\n      m: 'isang minuto',\n      mm: '%d minuto',\n      h: 'isang oras',\n      hh: '%d oras',\n      d: 'isang araw',\n      dd: '%d araw',\n      M: 'isang buwan',\n      MM: '%d buwan',\n      y: 'isang taon',\n      yy: '%d taon'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal: function (number) {\n      return number;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('fo', {\n    months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n    weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n    weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n    weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D. MMMM, YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Í dag kl.] LT',\n      nextDay: '[Í morgin kl.] LT',\n      nextWeek: 'dddd [kl.] LT',\n      lastDay: '[Í gjár kl.] LT',\n      lastWeek: '[síðstu] dddd [kl] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'um %s',\n      past: '%s síðani',\n      s: 'fá sekund',\n      ss: '%d sekundir',\n      m: 'ein minuttur',\n      mm: '%d minuttir',\n      h: 'ein tími',\n      hh: '%d tímar',\n      d: 'ein dagur',\n      dd: '%d dagar',\n      M: 'ein mánaður',\n      MM: '%d mánaðir',\n      y: 'eitt ár',\n      yy: '%d ár'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('fr-ca', {\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      ss: '%d secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        // Words with masculine grammatical gender: mois, trimestre, jour\n        default:\n        case 'M':\n        case 'Q':\n        case 'D':\n        case 'DDD':\n        case 'd':\n          return number + (number === 1 ? 'er' : 'e');\n        // Words with feminine grammatical gender: semaine\n\n        case 'w':\n        case 'W':\n          return number + (number === 1 ? 're' : 'e');\n      }\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('fr-ch', {\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      ss: '%d secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        // Words with masculine grammatical gender: mois, trimestre, jour\n        default:\n        case 'M':\n        case 'Q':\n        case 'D':\n        case 'DDD':\n        case 'd':\n          return number + (number === 1 ? 'er' : 'e');\n        // Words with feminine grammatical gender: semaine\n\n        case 'w':\n        case 'W':\n          return number + (number === 1 ? 're' : 'e');\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsStrictRegex$1 = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n      monthsShortStrictRegex$1 = /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?)/i,\n      monthsRegex$7 = /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n      monthsParse$6 = [/^janv/i, /^févr/i, /^mars/i, /^avr/i, /^mai/i, /^juin/i, /^juil/i, /^août/i, /^sept/i, /^oct/i, /^nov/i, /^déc/i];\n  hooks.defineLocale('fr', {\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsRegex: monthsRegex$7,\n    monthsShortRegex: monthsRegex$7,\n    monthsStrictRegex: monthsStrictRegex$1,\n    monthsShortStrictRegex: monthsShortStrictRegex$1,\n    monthsParse: monthsParse$6,\n    longMonthsParse: monthsParse$6,\n    shortMonthsParse: monthsParse$6,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      ss: '%d secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      w: 'une semaine',\n      ww: '%d semaines',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        // TODO: Return 'e' when day of month > 1. Move this case inside\n        // block for masculine words below.\n        // See https://github.com/moment/moment/issues/3375\n        case 'D':\n          return number + (number === 1 ? 'er' : '');\n        // Words with masculine grammatical gender: mois, trimestre, jour\n\n        default:\n        case 'M':\n        case 'Q':\n        case 'DDD':\n        case 'd':\n          return number + (number === 1 ? 'er' : 'e');\n        // Words with feminine grammatical gender: semaine\n\n        case 'w':\n        case 'W':\n          return number + (number === 1 ? 're' : 'e');\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n      monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n  hooks.defineLocale('fy', {\n    months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortWithDots;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShortWithoutDots[m.month()];\n      } else {\n        return monthsShortWithDots[m.month()];\n      }\n    },\n    monthsParseExact: true,\n    weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n    weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),\n    weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD-MM-YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[hjoed om] LT',\n      nextDay: '[moarn om] LT',\n      nextWeek: 'dddd [om] LT',\n      lastDay: '[juster om] LT',\n      lastWeek: '[ôfrûne] dddd [om] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'oer %s',\n      past: '%s lyn',\n      s: 'in pear sekonden',\n      ss: '%d sekonden',\n      m: 'ien minút',\n      mm: '%d minuten',\n      h: 'ien oere',\n      hh: '%d oeren',\n      d: 'ien dei',\n      dd: '%d dagen',\n      M: 'ien moanne',\n      MM: '%d moannen',\n      y: 'ien jier',\n      yy: '%d jierren'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal: function (number) {\n      return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var months$6 = ['Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Meitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deireadh Fómhair', 'Samhain', 'Nollaig'],\n      monthsShort$5 = ['Ean', 'Feabh', 'Márt', 'Aib', 'Beal', 'Meith', 'Iúil', 'Lún', 'M.F.', 'D.F.', 'Samh', 'Noll'],\n      weekdays$1 = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Sathairn'],\n      weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],\n      weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];\n  hooks.defineLocale('ga', {\n    months: months$6,\n    monthsShort: monthsShort$5,\n    monthsParseExact: true,\n    weekdays: weekdays$1,\n    weekdaysShort: weekdaysShort,\n    weekdaysMin: weekdaysMin,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Inniu ag] LT',\n      nextDay: '[Amárach ag] LT',\n      nextWeek: 'dddd [ag] LT',\n      lastDay: '[Inné ag] LT',\n      lastWeek: 'dddd [seo caite] [ag] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'i %s',\n      past: '%s ó shin',\n      s: 'cúpla soicind',\n      ss: '%d soicind',\n      m: 'nóiméad',\n      mm: '%d nóiméad',\n      h: 'uair an chloig',\n      hh: '%d uair an chloig',\n      d: 'lá',\n      dd: '%d lá',\n      M: 'mí',\n      MM: '%d míonna',\n      y: 'bliain',\n      yy: '%d bliain'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n    ordinal: function (number) {\n      var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var months$7 = ['Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'],\n      monthsShort$6 = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'],\n      weekdays$2 = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'],\n      weekdaysShort$1 = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],\n      weekdaysMin$1 = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n  hooks.defineLocale('gd', {\n    months: months$7,\n    monthsShort: monthsShort$6,\n    monthsParseExact: true,\n    weekdays: weekdays$2,\n    weekdaysShort: weekdaysShort$1,\n    weekdaysMin: weekdaysMin$1,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[An-diugh aig] LT',\n      nextDay: '[A-màireach aig] LT',\n      nextWeek: 'dddd [aig] LT',\n      lastDay: '[An-dè aig] LT',\n      lastWeek: 'dddd [seo chaidh] [aig] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'ann an %s',\n      past: 'bho chionn %s',\n      s: 'beagan diogan',\n      ss: '%d diogan',\n      m: 'mionaid',\n      mm: '%d mionaidean',\n      h: 'uair',\n      hh: '%d uairean',\n      d: 'latha',\n      dd: '%d latha',\n      M: 'mìos',\n      MM: '%d mìosan',\n      y: 'bliadhna',\n      yy: '%d bliadhna'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n    ordinal: function (number) {\n      var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('gl', {\n    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n    monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY H:mm',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n      },\n      nextDay: function () {\n        return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n      },\n      nextWeek: function () {\n        return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';\n      },\n      lastDay: function () {\n        return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';\n      },\n      lastWeek: function () {\n        return '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: function (str) {\n        if (str.indexOf('un') === 0) {\n          return 'n' + str;\n        }\n\n        return 'en ' + str;\n      },\n      past: 'hai %s',\n      s: 'uns segundos',\n      ss: '%d segundos',\n      m: 'un minuto',\n      mm: '%d minutos',\n      h: 'unha hora',\n      hh: '%d horas',\n      d: 'un día',\n      dd: '%d días',\n      M: 'un mes',\n      MM: '%d meses',\n      y: 'un ano',\n      yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$4(number, withoutSuffix, key, isFuture) {\n    var format = {\n      s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],\n      ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],\n      m: ['एका मिणटान', 'एक मिनूट'],\n      mm: [number + ' मिणटांनी', number + ' मिणटां'],\n      h: ['एका वरान', 'एक वर'],\n      hh: [number + ' वरांनी', number + ' वरां'],\n      d: ['एका दिसान', 'एक दीस'],\n      dd: [number + ' दिसांनी', number + ' दीस'],\n      M: ['एका म्हयन्यान', 'एक म्हयनो'],\n      MM: [number + ' म्हयन्यानी', number + ' म्हयने'],\n      y: ['एका वर्सान', 'एक वर्स'],\n      yy: [number + ' वर्सांनी', number + ' वर्सां']\n    };\n    return isFuture ? format[key][0] : format[key][1];\n  }\n\n  hooks.defineLocale('gom-deva', {\n    months: {\n      standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n      format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split('_'),\n      isFormat: /MMMM(\\s)+D[oD]?/\n    },\n    monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),\n    weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),\n    weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'A h:mm [वाजतां]',\n      LTS: 'A h:mm:ss [वाजतां]',\n      L: 'DD-MM-YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY A h:mm [वाजतां]',\n      LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',\n      llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]'\n    },\n    calendar: {\n      sameDay: '[आयज] LT',\n      nextDay: '[फाल्यां] LT',\n      nextWeek: '[फुडलो] dddd[,] LT',\n      lastDay: '[काल] LT',\n      lastWeek: '[फाटलो] dddd[,] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s',\n      past: '%s आदीं',\n      s: processRelativeTime$4,\n      ss: processRelativeTime$4,\n      m: processRelativeTime$4,\n      mm: processRelativeTime$4,\n      h: processRelativeTime$4,\n      hh: processRelativeTime$4,\n      d: processRelativeTime$4,\n      dd: processRelativeTime$4,\n      M: processRelativeTime$4,\n      MM: processRelativeTime$4,\n      y: processRelativeTime$4,\n      yy: processRelativeTime$4\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(वेर)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        // the ordinal 'वेर' only applies to day of the month\n        case 'D':\n          return number + 'वेर';\n\n        default:\n        case 'M':\n        case 'Q':\n        case 'DDD':\n        case 'd':\n        case 'w':\n        case 'W':\n          return number;\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week\n      doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n\n    },\n    meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'राती') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'सकाळीं') {\n        return hour;\n      } else if (meridiem === 'दनपारां') {\n        return hour > 12 ? hour : hour + 12;\n      } else if (meridiem === 'सांजे') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'राती';\n      } else if (hour < 12) {\n        return 'सकाळीं';\n      } else if (hour < 16) {\n        return 'दनपारां';\n      } else if (hour < 20) {\n        return 'सांजे';\n      } else {\n        return 'राती';\n      }\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$5(number, withoutSuffix, key, isFuture) {\n    var format = {\n      s: ['thoddea sekondamni', 'thodde sekond'],\n      ss: [number + ' sekondamni', number + ' sekond'],\n      m: ['eka mintan', 'ek minut'],\n      mm: [number + ' mintamni', number + ' mintam'],\n      h: ['eka voran', 'ek vor'],\n      hh: [number + ' voramni', number + ' voram'],\n      d: ['eka disan', 'ek dis'],\n      dd: [number + ' disamni', number + ' dis'],\n      M: ['eka mhoinean', 'ek mhoino'],\n      MM: [number + ' mhoineamni', number + ' mhoine'],\n      y: ['eka vorsan', 'ek voros'],\n      yy: [number + ' vorsamni', number + ' vorsam']\n    };\n    return isFuture ? format[key][0] : format[key][1];\n  }\n\n  hooks.defineLocale('gom-latn', {\n    months: {\n      standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n      format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split('_'),\n      isFormat: /MMMM(\\s)+D[oD]?/\n    },\n    monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n    weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n    weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'A h:mm [vazta]',\n      LTS: 'A h:mm:ss [vazta]',\n      L: 'DD-MM-YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY A h:mm [vazta]',\n      LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n      llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n    },\n    calendar: {\n      sameDay: '[Aiz] LT',\n      nextDay: '[Faleam] LT',\n      nextWeek: '[Fuddlo] dddd[,] LT',\n      lastDay: '[Kal] LT',\n      lastWeek: '[Fattlo] dddd[,] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s',\n      past: '%s adim',\n      s: processRelativeTime$5,\n      ss: processRelativeTime$5,\n      m: processRelativeTime$5,\n      mm: processRelativeTime$5,\n      h: processRelativeTime$5,\n      hh: processRelativeTime$5,\n      d: processRelativeTime$5,\n      dd: processRelativeTime$5,\n      M: processRelativeTime$5,\n      MM: processRelativeTime$5,\n      y: processRelativeTime$5,\n      yy: processRelativeTime$5\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        // the ordinal 'er' only applies to day of the month\n        case 'D':\n          return number + 'er';\n\n        default:\n        case 'M':\n        case 'Q':\n        case 'DDD':\n        case 'd':\n        case 'w':\n        case 'W':\n          return number;\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week\n      doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n\n    },\n    meridiemParse: /rati|sokallim|donparam|sanje/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'rati') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'sokallim') {\n        return hour;\n      } else if (meridiem === 'donparam') {\n        return hour > 12 ? hour : hour + 12;\n      } else if (meridiem === 'sanje') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'rati';\n      } else if (hour < 12) {\n        return 'sokallim';\n      } else if (hour < 16) {\n        return 'donparam';\n      } else if (hour < 20) {\n        return 'sanje';\n      } else {\n        return 'rati';\n      }\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$7 = {\n    1: '૧',\n    2: '૨',\n    3: '૩',\n    4: '૪',\n    5: '૫',\n    6: '૬',\n    7: '૭',\n    8: '૮',\n    9: '૯',\n    0: '૦'\n  },\n      numberMap$6 = {\n    '૧': '1',\n    '૨': '2',\n    '૩': '3',\n    '૪': '4',\n    '૫': '5',\n    '૬': '6',\n    '૭': '7',\n    '૮': '8',\n    '૯': '9',\n    '૦': '0'\n  };\n  hooks.defineLocale('gu', {\n    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n    monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm વાગ્યે',\n      LTS: 'A h:mm:ss વાગ્યે',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'\n    },\n    calendar: {\n      sameDay: '[આજ] LT',\n      nextDay: '[કાલે] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[ગઇકાલે] LT',\n      lastWeek: '[પાછલા] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s મા',\n      past: '%s પહેલા',\n      s: 'અમુક પળો',\n      ss: '%d સેકંડ',\n      m: 'એક મિનિટ',\n      mm: '%d મિનિટ',\n      h: 'એક કલાક',\n      hh: '%d કલાક',\n      d: 'એક દિવસ',\n      dd: '%d દિવસ',\n      M: 'એક મહિનો',\n      MM: '%d મહિનો',\n      y: 'એક વર્ષ',\n      yy: '%d વર્ષ'\n    },\n    preparse: function (string) {\n      return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n        return numberMap$6[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$7[match];\n      });\n    },\n    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'રાત') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'સવાર') {\n        return hour;\n      } else if (meridiem === 'બપોર') {\n        return hour >= 10 ? hour : hour + 12;\n      } else if (meridiem === 'સાંજ') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'રાત';\n      } else if (hour < 10) {\n        return 'સવાર';\n      } else if (hour < 17) {\n        return 'બપોર';\n      } else if (hour < 20) {\n        return 'સાંજ';\n      } else {\n        return 'રાત';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('he', {\n    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n    monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [ב]MMMM YYYY',\n      LLL: 'D [ב]MMMM YYYY HH:mm',\n      LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n      l: 'D/M/YYYY',\n      ll: 'D MMM YYYY',\n      lll: 'D MMM YYYY HH:mm',\n      llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[היום ב־]LT',\n      nextDay: '[מחר ב־]LT',\n      nextWeek: 'dddd [בשעה] LT',\n      lastDay: '[אתמול ב־]LT',\n      lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'בעוד %s',\n      past: 'לפני %s',\n      s: 'מספר שניות',\n      ss: '%d שניות',\n      m: 'דקה',\n      mm: '%d דקות',\n      h: 'שעה',\n      hh: function (number) {\n        if (number === 2) {\n          return 'שעתיים';\n        }\n\n        return number + ' שעות';\n      },\n      d: 'יום',\n      dd: function (number) {\n        if (number === 2) {\n          return 'יומיים';\n        }\n\n        return number + ' ימים';\n      },\n      M: 'חודש',\n      MM: function (number) {\n        if (number === 2) {\n          return 'חודשיים';\n        }\n\n        return number + ' חודשים';\n      },\n      y: 'שנה',\n      yy: function (number) {\n        if (number === 2) {\n          return 'שנתיים';\n        } else if (number % 10 === 0 && number !== 10) {\n          return number + ' שנה';\n        }\n\n        return number + ' שנים';\n      }\n    },\n    meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n    isPM: function (input) {\n      return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 5) {\n        return 'לפנות בוקר';\n      } else if (hour < 10) {\n        return 'בבוקר';\n      } else if (hour < 12) {\n        return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n      } else if (hour < 18) {\n        return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n      } else {\n        return 'בערב';\n      }\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$8 = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n  },\n      numberMap$7 = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n  },\n      monthsParse$7 = [/^जन/i, /^फ़र|फर/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सितं|सित/i, /^अक्टू/i, /^नव|नवं/i, /^दिसं|दिस/i],\n      shortMonthsParse = [/^जन/i, /^फ़र/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सित/i, /^अक्टू/i, /^नव/i, /^दिस/i];\n  hooks.defineLocale('hi', {\n    months: {\n      format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n      standalone: 'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split('_')\n    },\n    monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm बजे',\n      LTS: 'A h:mm:ss बजे',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm बजे',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n    },\n    monthsParse: monthsParse$7,\n    longMonthsParse: monthsParse$7,\n    shortMonthsParse: shortMonthsParse,\n    monthsRegex: /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n    monthsShortRegex: /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n    monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,\n    monthsShortStrictRegex: /^(जन\\.?|फ़र\\.?|मार्च?|अप्रै\\.?|मई?|जून?|जुल\\.?|अग\\.?|सित\\.?|अक्टू\\.?|नव\\.?|दिस\\.?)/i,\n    calendar: {\n      sameDay: '[आज] LT',\n      nextDay: '[कल] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[कल] LT',\n      lastWeek: '[पिछले] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s में',\n      past: '%s पहले',\n      s: 'कुछ ही क्षण',\n      ss: '%d सेकंड',\n      m: 'एक मिनट',\n      mm: '%d मिनट',\n      h: 'एक घंटा',\n      hh: '%d घंटे',\n      d: 'एक दिन',\n      dd: '%d दिन',\n      M: 'एक महीने',\n      MM: '%d महीने',\n      y: 'एक वर्ष',\n      yy: '%d वर्ष'\n    },\n    preparse: function (string) {\n      return string.replace(/[१२३४५६७८९०]/g, function (match) {\n        return numberMap$7[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$8[match];\n      });\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'रात') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'सुबह') {\n        return hour;\n      } else if (meridiem === 'दोपहर') {\n        return hour >= 10 ? hour : hour + 12;\n      } else if (meridiem === 'शाम') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'रात';\n      } else if (hour < 10) {\n        return 'सुबह';\n      } else if (hour < 17) {\n        return 'दोपहर';\n      } else if (hour < 20) {\n        return 'शाम';\n      } else {\n        return 'रात';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function translate$3(number, withoutSuffix, key) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 'ss':\n        if (number === 1) {\n          result += 'sekunda';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'sekunde';\n        } else {\n          result += 'sekundi';\n        }\n\n        return result;\n\n      case 'm':\n        return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n\n      case 'mm':\n        if (number === 1) {\n          result += 'minuta';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'minute';\n        } else {\n          result += 'minuta';\n        }\n\n        return result;\n\n      case 'h':\n        return withoutSuffix ? 'jedan sat' : 'jednog sata';\n\n      case 'hh':\n        if (number === 1) {\n          result += 'sat';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'sata';\n        } else {\n          result += 'sati';\n        }\n\n        return result;\n\n      case 'dd':\n        if (number === 1) {\n          result += 'dan';\n        } else {\n          result += 'dana';\n        }\n\n        return result;\n\n      case 'MM':\n        if (number === 1) {\n          result += 'mjesec';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'mjeseca';\n        } else {\n          result += 'mjeseci';\n        }\n\n        return result;\n\n      case 'yy':\n        if (number === 1) {\n          result += 'godina';\n        } else if (number === 2 || number === 3 || number === 4) {\n          result += 'godine';\n        } else {\n          result += 'godina';\n        }\n\n        return result;\n    }\n  }\n\n  hooks.defineLocale('hr', {\n    months: {\n      format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n      standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n    },\n    monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'Do MMMM YYYY',\n      LLL: 'Do MMMM YYYY H:mm',\n      LLLL: 'dddd, Do MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[danas u] LT',\n      nextDay: '[sutra u] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[u] [nedjelju] [u] LT';\n\n          case 3:\n            return '[u] [srijedu] [u] LT';\n\n          case 6:\n            return '[u] [subotu] [u] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[u] dddd [u] LT';\n        }\n      },\n      lastDay: '[jučer u] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[prošlu] [nedjelju] [u] LT';\n\n          case 3:\n            return '[prošlu] [srijedu] [u] LT';\n\n          case 6:\n            return '[prošle] [subote] [u] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[prošli] dddd [u] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'prije %s',\n      s: 'par sekundi',\n      ss: translate$3,\n      m: translate$3,\n      mm: translate$3,\n      h: translate$3,\n      hh: translate$3,\n      d: 'dan',\n      dd: translate$3,\n      M: 'mjesec',\n      MM: translate$3,\n      y: 'godinu',\n      yy: translate$3\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\n  function translate$4(number, withoutSuffix, key, isFuture) {\n    var num = number;\n\n    switch (key) {\n      case 's':\n        return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n\n      case 'ss':\n        return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';\n\n      case 'm':\n        return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n      case 'mm':\n        return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n      case 'h':\n        return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n      case 'hh':\n        return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n      case 'd':\n        return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n      case 'dd':\n        return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n      case 'M':\n        return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n      case 'MM':\n        return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n      case 'y':\n        return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n\n      case 'yy':\n        return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n    }\n\n    return '';\n  }\n\n  function week(isFuture) {\n    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n  }\n\n  hooks.defineLocale('hu', {\n    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n    monthsShort: 'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'YYYY.MM.DD.',\n      LL: 'YYYY. MMMM D.',\n      LLL: 'YYYY. MMMM D. H:mm',\n      LLLL: 'YYYY. MMMM D., dddd H:mm'\n    },\n    meridiemParse: /de|du/i,\n    isPM: function (input) {\n      return input.charAt(1).toLowerCase() === 'u';\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 12) {\n        return isLower === true ? 'de' : 'DE';\n      } else {\n        return isLower === true ? 'du' : 'DU';\n      }\n    },\n    calendar: {\n      sameDay: '[ma] LT[-kor]',\n      nextDay: '[holnap] LT[-kor]',\n      nextWeek: function () {\n        return week.call(this, true);\n      },\n      lastDay: '[tegnap] LT[-kor]',\n      lastWeek: function () {\n        return week.call(this, false);\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s múlva',\n      past: '%s',\n      s: translate$4,\n      ss: translate$4,\n      m: translate$4,\n      mm: translate$4,\n      h: translate$4,\n      hh: translate$4,\n      d: translate$4,\n      dd: translate$4,\n      M: translate$4,\n      MM: translate$4,\n      y: translate$4,\n      yy: translate$4\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('hy-am', {\n    months: {\n      format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n      standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n    },\n    monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n    weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n    weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n    weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY թ.',\n      LLL: 'D MMMM YYYY թ., HH:mm',\n      LLLL: 'dddd, D MMMM YYYY թ., HH:mm'\n    },\n    calendar: {\n      sameDay: '[այսօր] LT',\n      nextDay: '[վաղը] LT',\n      lastDay: '[երեկ] LT',\n      nextWeek: function () {\n        return 'dddd [օրը ժամը] LT';\n      },\n      lastWeek: function () {\n        return '[անցած] dddd [օրը ժամը] LT';\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s հետո',\n      past: '%s առաջ',\n      s: 'մի քանի վայրկյան',\n      ss: '%d վայրկյան',\n      m: 'րոպե',\n      mm: '%d րոպե',\n      h: 'ժամ',\n      hh: '%d ժամ',\n      d: 'օր',\n      dd: '%d օր',\n      M: 'ամիս',\n      MM: '%d ամիս',\n      y: 'տարի',\n      yy: '%d տարի'\n    },\n    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n    isPM: function (input) {\n      return /^(ցերեկվա|երեկոյան)$/.test(input);\n    },\n    meridiem: function (hour) {\n      if (hour < 4) {\n        return 'գիշերվա';\n      } else if (hour < 12) {\n        return 'առավոտվա';\n      } else if (hour < 17) {\n        return 'ցերեկվա';\n      } else {\n        return 'երեկոյան';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'DDD':\n        case 'w':\n        case 'W':\n        case 'DDDo':\n          if (number === 1) {\n            return number + '-ին';\n          }\n\n          return number + '-րդ';\n\n        default:\n          return number;\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('id', {\n    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n      LT: 'HH.mm',\n      LTS: 'HH.mm.ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY [pukul] HH.mm',\n      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|siang|sore|malam/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'pagi') {\n        return hour;\n      } else if (meridiem === 'siang') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === 'sore' || meridiem === 'malam') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 11) {\n        return 'pagi';\n      } else if (hours < 15) {\n        return 'siang';\n      } else if (hours < 19) {\n        return 'sore';\n      } else {\n        return 'malam';\n      }\n    },\n    calendar: {\n      sameDay: '[Hari ini pukul] LT',\n      nextDay: '[Besok pukul] LT',\n      nextWeek: 'dddd [pukul] LT',\n      lastDay: '[Kemarin pukul] LT',\n      lastWeek: 'dddd [lalu pukul] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dalam %s',\n      past: '%s yang lalu',\n      s: 'beberapa detik',\n      ss: '%d detik',\n      m: 'semenit',\n      mm: '%d menit',\n      h: 'sejam',\n      hh: '%d jam',\n      d: 'sehari',\n      dd: '%d hari',\n      M: 'sebulan',\n      MM: '%d bulan',\n      y: 'setahun',\n      yy: '%d tahun'\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function plural$2(n) {\n    if (n % 100 === 11) {\n      return true;\n    } else if (n % 10 === 1) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function translate$5(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 's':\n        return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n\n      case 'ss':\n        if (plural$2(number)) {\n          return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');\n        }\n\n        return result + 'sekúnda';\n\n      case 'm':\n        return withoutSuffix ? 'mínúta' : 'mínútu';\n\n      case 'mm':\n        if (plural$2(number)) {\n          return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n        } else if (withoutSuffix) {\n          return result + 'mínúta';\n        }\n\n        return result + 'mínútu';\n\n      case 'hh':\n        if (plural$2(number)) {\n          return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n        }\n\n        return result + 'klukkustund';\n\n      case 'd':\n        if (withoutSuffix) {\n          return 'dagur';\n        }\n\n        return isFuture ? 'dag' : 'degi';\n\n      case 'dd':\n        if (plural$2(number)) {\n          if (withoutSuffix) {\n            return result + 'dagar';\n          }\n\n          return result + (isFuture ? 'daga' : 'dögum');\n        } else if (withoutSuffix) {\n          return result + 'dagur';\n        }\n\n        return result + (isFuture ? 'dag' : 'degi');\n\n      case 'M':\n        if (withoutSuffix) {\n          return 'mánuður';\n        }\n\n        return isFuture ? 'mánuð' : 'mánuði';\n\n      case 'MM':\n        if (plural$2(number)) {\n          if (withoutSuffix) {\n            return result + 'mánuðir';\n          }\n\n          return result + (isFuture ? 'mánuði' : 'mánuðum');\n        } else if (withoutSuffix) {\n          return result + 'mánuður';\n        }\n\n        return result + (isFuture ? 'mánuð' : 'mánuði');\n\n      case 'y':\n        return withoutSuffix || isFuture ? 'ár' : 'ári';\n\n      case 'yy':\n        if (plural$2(number)) {\n          return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n        }\n\n        return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n    }\n  }\n\n  hooks.defineLocale('is', {\n    months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n    weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n    weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n    weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY [kl.] H:mm',\n      LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm'\n    },\n    calendar: {\n      sameDay: '[í dag kl.] LT',\n      nextDay: '[á morgun kl.] LT',\n      nextWeek: 'dddd [kl.] LT',\n      lastDay: '[í gær kl.] LT',\n      lastWeek: '[síðasta] dddd [kl.] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'eftir %s',\n      past: 'fyrir %s síðan',\n      s: translate$5,\n      ss: translate$5,\n      m: translate$5,\n      mm: translate$5,\n      h: 'klukkustund',\n      hh: translate$5,\n      d: translate$5,\n      dd: translate$5,\n      M: translate$5,\n      MM: translate$5,\n      y: translate$5,\n      yy: translate$5\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('it-ch', {\n    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Oggi alle] LT',\n      nextDay: '[Domani alle] LT',\n      nextWeek: 'dddd [alle] LT',\n      lastDay: '[Ieri alle] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[la scorsa] dddd [alle] LT';\n\n          default:\n            return '[lo scorso] dddd [alle] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: function (s) {\n        return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;\n      },\n      past: '%s fa',\n      s: 'alcuni secondi',\n      ss: '%d secondi',\n      m: 'un minuto',\n      mm: '%d minuti',\n      h: \"un'ora\",\n      hh: '%d ore',\n      d: 'un giorno',\n      dd: '%d giorni',\n      M: 'un mese',\n      MM: '%d mesi',\n      y: 'un anno',\n      yy: '%d anni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('it', {\n    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: function () {\n        return '[Oggi a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") + ']LT';\n      },\n      nextDay: function () {\n        return '[Domani a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") + ']LT';\n      },\n      nextWeek: function () {\n        return 'dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") + ']LT';\n      },\n      lastDay: function () {\n        return '[Ieri a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") + ']LT';\n      },\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[La scorsa] dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") + ']LT';\n\n          default:\n            return '[Lo scorso] dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") + ']LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'tra %s',\n      past: '%s fa',\n      s: 'alcuni secondi',\n      ss: '%d secondi',\n      m: 'un minuto',\n      mm: '%d minuti',\n      h: \"un'ora\",\n      hh: '%d ore',\n      d: 'un giorno',\n      dd: '%d giorni',\n      w: 'una settimana',\n      ww: '%d settimane',\n      M: 'un mese',\n      MM: '%d mesi',\n      y: 'un anno',\n      yy: '%d anni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ja', {\n    eras: [{\n      since: '2019-05-01',\n      offset: 1,\n      name: '令和',\n      narrow: '㋿',\n      abbr: 'R'\n    }, {\n      since: '1989-01-08',\n      until: '2019-04-30',\n      offset: 1,\n      name: '平成',\n      narrow: '㍻',\n      abbr: 'H'\n    }, {\n      since: '1926-12-25',\n      until: '1989-01-07',\n      offset: 1,\n      name: '昭和',\n      narrow: '㍼',\n      abbr: 'S'\n    }, {\n      since: '1912-07-30',\n      until: '1926-12-24',\n      offset: 1,\n      name: '大正',\n      narrow: '㍽',\n      abbr: 'T'\n    }, {\n      since: '1873-01-01',\n      until: '1912-07-29',\n      offset: 6,\n      name: '明治',\n      narrow: '㍾',\n      abbr: 'M'\n    }, {\n      since: '0001-01-01',\n      until: '1873-12-31',\n      offset: 1,\n      name: '西暦',\n      narrow: 'AD',\n      abbr: 'AD'\n    }, {\n      since: '0000-12-31',\n      until: -Infinity,\n      offset: 1,\n      name: '紀元前',\n      narrow: 'BC',\n      abbr: 'BC'\n    }],\n    eraYearOrdinalRegex: /(元|\\d+)年/,\n    eraYearOrdinalParse: function (input, match) {\n      return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);\n    },\n    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY/MM/DD',\n      LL: 'YYYY年M月D日',\n      LLL: 'YYYY年M月D日 HH:mm',\n      LLLL: 'YYYY年M月D日 dddd HH:mm',\n      l: 'YYYY/MM/DD',\n      ll: 'YYYY年M月D日',\n      lll: 'YYYY年M月D日 HH:mm',\n      llll: 'YYYY年M月D日(ddd) HH:mm'\n    },\n    meridiemParse: /午前|午後/i,\n    isPM: function (input) {\n      return input === '午後';\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return '午前';\n      } else {\n        return '午後';\n      }\n    },\n    calendar: {\n      sameDay: '[今日] LT',\n      nextDay: '[明日] LT',\n      nextWeek: function (now) {\n        if (now.week() !== this.week()) {\n          return '[来週]dddd LT';\n        } else {\n          return 'dddd LT';\n        }\n      },\n      lastDay: '[昨日] LT',\n      lastWeek: function (now) {\n        if (this.week() !== now.week()) {\n          return '[先週]dddd LT';\n        } else {\n          return 'dddd LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}日/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'y':\n          return number === 1 ? '元年' : number + '年';\n\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '日';\n\n        default:\n          return number;\n      }\n    },\n    relativeTime: {\n      future: '%s後',\n      past: '%s前',\n      s: '数秒',\n      ss: '%d秒',\n      m: '1分',\n      mm: '%d分',\n      h: '1時間',\n      hh: '%d時間',\n      d: '1日',\n      dd: '%d日',\n      M: '1ヶ月',\n      MM: '%dヶ月',\n      y: '1年',\n      yy: '%d年'\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('jv', {\n    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n    weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n    weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n    longDateFormat: {\n      LT: 'HH.mm',\n      LTS: 'HH.mm.ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY [pukul] HH.mm',\n      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /enjing|siyang|sonten|ndalu/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'enjing') {\n        return hour;\n      } else if (meridiem === 'siyang') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 11) {\n        return 'enjing';\n      } else if (hours < 15) {\n        return 'siyang';\n      } else if (hours < 19) {\n        return 'sonten';\n      } else {\n        return 'ndalu';\n      }\n    },\n    calendar: {\n      sameDay: '[Dinten puniko pukul] LT',\n      nextDay: '[Mbenjang pukul] LT',\n      nextWeek: 'dddd [pukul] LT',\n      lastDay: '[Kala wingi pukul] LT',\n      lastWeek: 'dddd [kepengker pukul] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'wonten ing %s',\n      past: '%s ingkang kepengker',\n      s: 'sawetawis detik',\n      ss: '%d detik',\n      m: 'setunggal menit',\n      mm: '%d menit',\n      h: 'setunggal jam',\n      hh: '%d jam',\n      d: 'sedinten',\n      dd: '%d dinten',\n      M: 'sewulan',\n      MM: '%d wulan',\n      y: 'setaun',\n      yy: '%d taun'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ka', {\n    months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n    weekdays: {\n      standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n      format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n      isFormat: /(წინა|შემდეგ)/\n    },\n    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[დღეს] LT[-ზე]',\n      nextDay: '[ხვალ] LT[-ზე]',\n      lastDay: '[გუშინ] LT[-ზე]',\n      nextWeek: '[შემდეგ] dddd LT[-ზე]',\n      lastWeek: '[წინა] dddd LT-ზე',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: function (s) {\n        return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function ($0, $1, $2) {\n          return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';\n        });\n      },\n      past: function (s) {\n        if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n          return s.replace(/(ი|ე)$/, 'ის წინ');\n        }\n\n        if (/წელი/.test(s)) {\n          return s.replace(/წელი$/, 'წლის წინ');\n        }\n\n        return s;\n      },\n      s: 'რამდენიმე წამი',\n      ss: '%d წამი',\n      m: 'წუთი',\n      mm: '%d წუთი',\n      h: 'საათი',\n      hh: '%d საათი',\n      d: 'დღე',\n      dd: '%d დღე',\n      M: 'თვე',\n      MM: '%d თვე',\n      y: 'წელი',\n      yy: '%d წელი'\n    },\n    dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n    ordinal: function (number) {\n      if (number === 0) {\n        return number;\n      }\n\n      if (number === 1) {\n        return number + '-ლი';\n      }\n\n      if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {\n        return 'მე-' + number;\n      }\n\n      return number + '-ე';\n    },\n    week: {\n      dow: 1,\n      doy: 7\n    }\n  }); //! moment.js locale configuration\n\n  var suffixes$1 = {\n    0: '-ші',\n    1: '-ші',\n    2: '-ші',\n    3: '-ші',\n    4: '-ші',\n    5: '-ші',\n    6: '-шы',\n    7: '-ші',\n    8: '-ші',\n    9: '-шы',\n    10: '-шы',\n    20: '-шы',\n    30: '-шы',\n    40: '-шы',\n    50: '-ші',\n    60: '-шы',\n    70: '-ші',\n    80: '-ші',\n    90: '-шы',\n    100: '-ші'\n  };\n  hooks.defineLocale('kk', {\n    months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n    monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n    weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n    weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n    weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Бүгін сағат] LT',\n      nextDay: '[Ертең сағат] LT',\n      nextWeek: 'dddd [сағат] LT',\n      lastDay: '[Кеше сағат] LT',\n      lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s ішінде',\n      past: '%s бұрын',\n      s: 'бірнеше секунд',\n      ss: '%d секунд',\n      m: 'бір минут',\n      mm: '%d минут',\n      h: 'бір сағат',\n      hh: '%d сағат',\n      d: 'бір күн',\n      dd: '%d күн',\n      M: 'бір ай',\n      MM: '%d ай',\n      y: 'бір жыл',\n      yy: '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n    ordinal: function (number) {\n      var a = number % 10,\n          b = number >= 100 ? 100 : null;\n      return number + (suffixes$1[number] || suffixes$1[a] || suffixes$1[b]);\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$9 = {\n    1: '១',\n    2: '២',\n    3: '៣',\n    4: '៤',\n    5: '៥',\n    6: '៦',\n    7: '៧',\n    8: '៨',\n    9: '៩',\n    0: '០'\n  },\n      numberMap$8 = {\n    '១': '1',\n    '២': '2',\n    '៣': '3',\n    '៤': '4',\n    '៥': '5',\n    '៦': '6',\n    '៧': '7',\n    '៨': '8',\n    '៩': '9',\n    '០': '0'\n  };\n  hooks.defineLocale('km', {\n    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n    weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n    weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ព្រឹក|ល្ងាច/,\n    isPM: function (input) {\n      return input === 'ល្ងាច';\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ព្រឹក';\n      } else {\n        return 'ល្ងាច';\n      }\n    },\n    calendar: {\n      sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n      nextDay: '[ស្អែក ម៉ោង] LT',\n      nextWeek: 'dddd [ម៉ោង] LT',\n      lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n      lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%sទៀត',\n      past: '%sមុន',\n      s: 'ប៉ុន្មានវិនាទី',\n      ss: '%d វិនាទី',\n      m: 'មួយនាទី',\n      mm: '%d នាទី',\n      h: 'មួយម៉ោង',\n      hh: '%d ម៉ោង',\n      d: 'មួយថ្ងៃ',\n      dd: '%d ថ្ងៃ',\n      M: 'មួយខែ',\n      MM: '%d ខែ',\n      y: 'មួយឆ្នាំ',\n      yy: '%d ឆ្នាំ'\n    },\n    dayOfMonthOrdinalParse: /ទី\\d{1,2}/,\n    ordinal: 'ទី%d',\n    preparse: function (string) {\n      return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n        return numberMap$8[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$9[match];\n      });\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$a = {\n    1: '೧',\n    2: '೨',\n    3: '೩',\n    4: '೪',\n    5: '೫',\n    6: '೬',\n    7: '೭',\n    8: '೮',\n    9: '೯',\n    0: '೦'\n  },\n      numberMap$9 = {\n    '೧': '1',\n    '೨': '2',\n    '೩': '3',\n    '೪': '4',\n    '೫': '5',\n    '೬': '6',\n    '೭': '7',\n    '೮': '8',\n    '೯': '9',\n    '೦': '0'\n  };\n  hooks.defineLocale('kn', {\n    months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n    monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n    weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n    weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm',\n      LTS: 'A h:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm'\n    },\n    calendar: {\n      sameDay: '[ಇಂದು] LT',\n      nextDay: '[ನಾಳೆ] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[ನಿನ್ನೆ] LT',\n      lastWeek: '[ಕೊನೆಯ] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s ನಂತರ',\n      past: '%s ಹಿಂದೆ',\n      s: 'ಕೆಲವು ಕ್ಷಣಗಳು',\n      ss: '%d ಸೆಕೆಂಡುಗಳು',\n      m: 'ಒಂದು ನಿಮಿಷ',\n      mm: '%d ನಿಮಿಷ',\n      h: 'ಒಂದು ಗಂಟೆ',\n      hh: '%d ಗಂಟೆ',\n      d: 'ಒಂದು ದಿನ',\n      dd: '%d ದಿನ',\n      M: 'ಒಂದು ತಿಂಗಳು',\n      MM: '%d ತಿಂಗಳು',\n      y: 'ಒಂದು ವರ್ಷ',\n      yy: '%d ವರ್ಷ'\n    },\n    preparse: function (string) {\n      return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n        return numberMap$9[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$a[match];\n      });\n    },\n    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'ರಾತ್ರಿ') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n        return hour;\n      } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n        return hour >= 10 ? hour : hour + 12;\n      } else if (meridiem === 'ಸಂಜೆ') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'ರಾತ್ರಿ';\n      } else if (hour < 10) {\n        return 'ಬೆಳಿಗ್ಗೆ';\n      } else if (hour < 17) {\n        return 'ಮಧ್ಯಾಹ್ನ';\n      } else if (hour < 20) {\n        return 'ಸಂಜೆ';\n      } else {\n        return 'ರಾತ್ರಿ';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n    ordinal: function (number) {\n      return number + 'ನೇ';\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ko', {\n    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm',\n      LTS: 'A h:mm:ss',\n      L: 'YYYY.MM.DD.',\n      LL: 'YYYY년 MMMM D일',\n      LLL: 'YYYY년 MMMM D일 A h:mm',\n      LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n      l: 'YYYY.MM.DD.',\n      ll: 'YYYY년 MMMM D일',\n      lll: 'YYYY년 MMMM D일 A h:mm',\n      llll: 'YYYY년 MMMM D일 dddd A h:mm'\n    },\n    calendar: {\n      sameDay: '오늘 LT',\n      nextDay: '내일 LT',\n      nextWeek: 'dddd LT',\n      lastDay: '어제 LT',\n      lastWeek: '지난주 dddd LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s 후',\n      past: '%s 전',\n      s: '몇 초',\n      ss: '%d초',\n      m: '1분',\n      mm: '%d분',\n      h: '한 시간',\n      hh: '%d시간',\n      d: '하루',\n      dd: '%d일',\n      M: '한 달',\n      MM: '%d달',\n      y: '일 년',\n      yy: '%d년'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '일';\n\n        case 'M':\n          return number + '월';\n\n        case 'w':\n        case 'W':\n          return number + '주';\n\n        default:\n          return number;\n      }\n    },\n    meridiemParse: /오전|오후/,\n    isPM: function (token) {\n      return token === '오후';\n    },\n    meridiem: function (hour, minute, isUpper) {\n      return hour < 12 ? '오전' : '오후';\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$b = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n  },\n      numberMap$a = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n  },\n      months$8 = ['کانونی دووەم', 'شوبات', 'ئازار', 'نیسان', 'ئایار', 'حوزەیران', 'تەمموز', 'ئاب', 'ئەیلوول', 'تشرینی یەكەم', 'تشرینی دووەم', 'كانونی یەکەم'];\n  hooks.defineLocale('ku', {\n    months: months$8,\n    monthsShort: months$8,\n    weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),\n    weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),\n    weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ئێواره‌|به‌یانی/,\n    isPM: function (input) {\n      return /ئێواره‌/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'به‌یانی';\n      } else {\n        return 'ئێواره‌';\n      }\n    },\n    calendar: {\n      sameDay: '[ئه‌مرۆ كاتژمێر] LT',\n      nextDay: '[به‌یانی كاتژمێر] LT',\n      nextWeek: 'dddd [كاتژمێر] LT',\n      lastDay: '[دوێنێ كاتژمێر] LT',\n      lastWeek: 'dddd [كاتژمێر] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'له‌ %s',\n      past: '%s',\n      s: 'چه‌ند چركه‌یه‌ك',\n      ss: 'چركه‌ %d',\n      m: 'یه‌ك خوله‌ك',\n      mm: '%d خوله‌ك',\n      h: 'یه‌ك كاتژمێر',\n      hh: '%d كاتژمێر',\n      d: 'یه‌ك ڕۆژ',\n      dd: '%d ڕۆژ',\n      M: 'یه‌ك مانگ',\n      MM: '%d مانگ',\n      y: 'یه‌ك ساڵ',\n      yy: '%d ساڵ'\n    },\n    preparse: function (string) {\n      return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n        return numberMap$a[match];\n      }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$b[match];\n      }).replace(/,/g, '،');\n    },\n    week: {\n      dow: 6,\n      // Saturday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var suffixes$2 = {\n    0: '-чү',\n    1: '-чи',\n    2: '-чи',\n    3: '-чү',\n    4: '-чү',\n    5: '-чи',\n    6: '-чы',\n    7: '-чи',\n    8: '-чи',\n    9: '-чу',\n    10: '-чу',\n    20: '-чы',\n    30: '-чу',\n    40: '-чы',\n    50: '-чү',\n    60: '-чы',\n    70: '-чи',\n    80: '-чи',\n    90: '-чу',\n    100: '-чү'\n  };\n  hooks.defineLocale('ky', {\n    months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n    monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n    weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n    weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n    weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Бүгүн саат] LT',\n      nextDay: '[Эртең саат] LT',\n      nextWeek: 'dddd [саат] LT',\n      lastDay: '[Кечээ саат] LT',\n      lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s ичинде',\n      past: '%s мурун',\n      s: 'бирнече секунд',\n      ss: '%d секунд',\n      m: 'бир мүнөт',\n      mm: '%d мүнөт',\n      h: 'бир саат',\n      hh: '%d саат',\n      d: 'бир күн',\n      dd: '%d күн',\n      M: 'бир ай',\n      MM: '%d ай',\n      y: 'бир жыл',\n      yy: '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n    ordinal: function (number) {\n      var a = number % 10,\n          b = number >= 100 ? 100 : null;\n      return number + (suffixes$2[number] || suffixes$2[a] || suffixes$2[b]);\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$6(number, withoutSuffix, key, isFuture) {\n    var format = {\n      m: ['eng Minutt', 'enger Minutt'],\n      h: ['eng Stonn', 'enger Stonn'],\n      d: ['een Dag', 'engem Dag'],\n      M: ['ee Mount', 'engem Mount'],\n      y: ['ee Joer', 'engem Joer']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n  }\n\n  function processFutureTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n\n    if (eifelerRegelAppliesToNumber(number)) {\n      return 'a ' + string;\n    }\n\n    return 'an ' + string;\n  }\n\n  function processPastTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n\n    if (eifelerRegelAppliesToNumber(number)) {\n      return 'viru ' + string;\n    }\n\n    return 'virun ' + string;\n  }\n  /**\n   * Returns true if the word before the given number loses the '-n' ending.\n   * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n   *\n   * @param number {integer}\n   * @returns {boolean}\n   */\n\n\n  function eifelerRegelAppliesToNumber(number) {\n    number = parseInt(number, 10);\n\n    if (isNaN(number)) {\n      return false;\n    }\n\n    if (number < 0) {\n      // Negative Number --> always true\n      return true;\n    } else if (number < 10) {\n      // Only 1 digit\n      if (4 <= number && number <= 7) {\n        return true;\n      }\n\n      return false;\n    } else if (number < 100) {\n      // 2 digits\n      var lastDigit = number % 10,\n          firstDigit = number / 10;\n\n      if (lastDigit === 0) {\n        return eifelerRegelAppliesToNumber(firstDigit);\n      }\n\n      return eifelerRegelAppliesToNumber(lastDigit);\n    } else if (number < 10000) {\n      // 3 or 4 digits --> recursively check first digit\n      while (number >= 10) {\n        number = number / 10;\n      }\n\n      return eifelerRegelAppliesToNumber(number);\n    } else {\n      // Anything larger than 4 digits: recursively check first n-3 digits\n      number = number / 1000;\n      return eifelerRegelAppliesToNumber(number);\n    }\n  }\n\n  hooks.defineLocale('lb', {\n    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm [Auer]',\n      LTS: 'H:mm:ss [Auer]',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm [Auer]',\n      LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n    },\n    calendar: {\n      sameDay: '[Haut um] LT',\n      sameElse: 'L',\n      nextDay: '[Muer um] LT',\n      nextWeek: 'dddd [um] LT',\n      lastDay: '[Gëschter um] LT',\n      lastWeek: function () {\n        // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n        switch (this.day()) {\n          case 2:\n          case 4:\n            return '[Leschten] dddd [um] LT';\n\n          default:\n            return '[Leschte] dddd [um] LT';\n        }\n      }\n    },\n    relativeTime: {\n      future: processFutureTime,\n      past: processPastTime,\n      s: 'e puer Sekonnen',\n      ss: '%d Sekonnen',\n      m: processRelativeTime$6,\n      mm: '%d Minutten',\n      h: processRelativeTime$6,\n      hh: '%d Stonnen',\n      d: processRelativeTime$6,\n      dd: '%d Deeg',\n      M: processRelativeTime$6,\n      MM: '%d Méint',\n      y: processRelativeTime$6,\n      yy: '%d Joer'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('lo', {\n    months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n    monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n    weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n    weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n    weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'ວັນdddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n    isPM: function (input) {\n      return input === 'ຕອນແລງ';\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ຕອນເຊົ້າ';\n      } else {\n        return 'ຕອນແລງ';\n      }\n    },\n    calendar: {\n      sameDay: '[ມື້ນີ້ເວລາ] LT',\n      nextDay: '[ມື້ອື່ນເວລາ] LT',\n      nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',\n      lastDay: '[ມື້ວານນີ້ເວລາ] LT',\n      lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'ອີກ %s',\n      past: '%sຜ່ານມາ',\n      s: 'ບໍ່ເທົ່າໃດວິນາທີ',\n      ss: '%d ວິນາທີ',\n      m: '1 ນາທີ',\n      mm: '%d ນາທີ',\n      h: '1 ຊົ່ວໂມງ',\n      hh: '%d ຊົ່ວໂມງ',\n      d: '1 ມື້',\n      dd: '%d ມື້',\n      M: '1 ເດືອນ',\n      MM: '%d ເດືອນ',\n      y: '1 ປີ',\n      yy: '%d ປີ'\n    },\n    dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n    ordinal: function (number) {\n      return 'ທີ່' + number;\n    }\n  }); //! moment.js locale configuration\n\n  var units = {\n    ss: 'sekundė_sekundžių_sekundes',\n    m: 'minutė_minutės_minutę',\n    mm: 'minutės_minučių_minutes',\n    h: 'valanda_valandos_valandą',\n    hh: 'valandos_valandų_valandas',\n    d: 'diena_dienos_dieną',\n    dd: 'dienos_dienų_dienas',\n    M: 'mėnuo_mėnesio_mėnesį',\n    MM: 'mėnesiai_mėnesių_mėnesius',\n    y: 'metai_metų_metus',\n    yy: 'metai_metų_metus'\n  };\n\n  function translateSeconds(number, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n      return 'kelios sekundės';\n    } else {\n      return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n    }\n  }\n\n  function translateSingular(number, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n  }\n\n  function special(number) {\n    return number % 10 === 0 || number > 10 && number < 20;\n  }\n\n  function forms(key) {\n    return units[key].split('_');\n  }\n\n  function translate$6(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    if (number === 1) {\n      return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n    } else if (withoutSuffix) {\n      return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n    } else {\n      if (isFuture) {\n        return result + forms(key)[1];\n      } else {\n        return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n      }\n    }\n  }\n\n  hooks.defineLocale('lt', {\n    months: {\n      format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n      standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n      isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n    },\n    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n    weekdays: {\n      format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n      standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n      isFormat: /dddd HH:mm/\n    },\n    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: 'YYYY [m.] MMMM D [d.]',\n      LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n      l: 'YYYY-MM-DD',\n      ll: 'YYYY [m.] MMMM D [d.]',\n      lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n      llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n    },\n    calendar: {\n      sameDay: '[Šiandien] LT',\n      nextDay: '[Rytoj] LT',\n      nextWeek: 'dddd LT',\n      lastDay: '[Vakar] LT',\n      lastWeek: '[Praėjusį] dddd LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'po %s',\n      past: 'prieš %s',\n      s: translateSeconds,\n      ss: translate$6,\n      m: translateSingular,\n      mm: translate$6,\n      h: translateSingular,\n      hh: translate$6,\n      d: translateSingular,\n      dd: translate$6,\n      M: translateSingular,\n      MM: translate$6,\n      y: translateSingular,\n      yy: translate$6\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n    ordinal: function (number) {\n      return number + '-oji';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var units$1 = {\n    ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n    m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n    mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n    h: 'stundas_stundām_stunda_stundas'.split('_'),\n    hh: 'stundas_stundām_stunda_stundas'.split('_'),\n    d: 'dienas_dienām_diena_dienas'.split('_'),\n    dd: 'dienas_dienām_diena_dienas'.split('_'),\n    M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n    MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n    y: 'gada_gadiem_gads_gadi'.split('_'),\n    yy: 'gada_gadiem_gads_gadi'.split('_')\n  };\n  /**\n   * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n   */\n\n  function format$1(forms, number, withoutSuffix) {\n    if (withoutSuffix) {\n      // E.g. \"21 minūte\", \"3 minūtes\".\n      return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n    } else {\n      // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n      // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n      return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n    }\n  }\n\n  function relativeTimeWithPlural$1(number, withoutSuffix, key) {\n    return number + ' ' + format$1(units$1[key], number, withoutSuffix);\n  }\n\n  function relativeTimeWithSingular(number, withoutSuffix, key) {\n    return format$1(units$1[key], number, withoutSuffix);\n  }\n\n  function relativeSeconds(number, withoutSuffix) {\n    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n  }\n\n  hooks.defineLocale('lv', {\n    months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n    weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),\n    weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY.',\n      LL: 'YYYY. [gada] D. MMMM',\n      LLL: 'YYYY. [gada] D. MMMM, HH:mm',\n      LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n    },\n    calendar: {\n      sameDay: '[Šodien pulksten] LT',\n      nextDay: '[Rīt pulksten] LT',\n      nextWeek: 'dddd [pulksten] LT',\n      lastDay: '[Vakar pulksten] LT',\n      lastWeek: '[Pagājušā] dddd [pulksten] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'pēc %s',\n      past: 'pirms %s',\n      s: relativeSeconds,\n      ss: relativeTimeWithPlural$1,\n      m: relativeTimeWithSingular,\n      mm: relativeTimeWithPlural$1,\n      h: relativeTimeWithSingular,\n      hh: relativeTimeWithPlural$1,\n      d: relativeTimeWithSingular,\n      dd: relativeTimeWithPlural$1,\n      M: relativeTimeWithSingular,\n      MM: relativeTimeWithPlural$1,\n      y: relativeTimeWithSingular,\n      yy: relativeTimeWithPlural$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var translator = {\n    words: {\n      //Different grammatical cases\n      ss: ['sekund', 'sekunda', 'sekundi'],\n      m: ['jedan minut', 'jednog minuta'],\n      mm: ['minut', 'minuta', 'minuta'],\n      h: ['jedan sat', 'jednog sata'],\n      hh: ['sat', 'sata', 'sati'],\n      dd: ['dan', 'dana', 'dana'],\n      MM: ['mjesec', 'mjeseca', 'mjeseci'],\n      yy: ['godina', 'godine', 'godina']\n    },\n    correctGrammaticalCase: function (number, wordKey) {\n      return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];\n    },\n    translate: function (number, withoutSuffix, key) {\n      var wordKey = translator.words[key];\n\n      if (key.length === 1) {\n        return withoutSuffix ? wordKey[0] : wordKey[1];\n      } else {\n        return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n      }\n    }\n  };\n  hooks.defineLocale('me', {\n    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[danas u] LT',\n      nextDay: '[sjutra u] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[u] [nedjelju] [u] LT';\n\n          case 3:\n            return '[u] [srijedu] [u] LT';\n\n          case 6:\n            return '[u] [subotu] [u] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[u] dddd [u] LT';\n        }\n      },\n      lastDay: '[juče u] LT',\n      lastWeek: function () {\n        var lastWeekDays = ['[prošle] [nedjelje] [u] LT', '[prošlog] [ponedjeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srijede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];\n        return lastWeekDays[this.day()];\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'prije %s',\n      s: 'nekoliko sekundi',\n      ss: translator.translate,\n      m: translator.translate,\n      mm: translator.translate,\n      h: translator.translate,\n      hh: translator.translate,\n      d: 'dan',\n      dd: translator.translate,\n      M: 'mjesec',\n      MM: translator.translate,\n      y: 'godinu',\n      yy: translator.translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('mi', {\n    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n    monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n    monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n    monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n    monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY [i] HH:mm',\n      LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n    },\n    calendar: {\n      sameDay: '[i teie mahana, i] LT',\n      nextDay: '[apopo i] LT',\n      nextWeek: 'dddd [i] LT',\n      lastDay: '[inanahi i] LT',\n      lastWeek: 'dddd [whakamutunga i] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'i roto i %s',\n      past: '%s i mua',\n      s: 'te hēkona ruarua',\n      ss: '%d hēkona',\n      m: 'he meneti',\n      mm: '%d meneti',\n      h: 'te haora',\n      hh: '%d haora',\n      d: 'he ra',\n      dd: '%d ra',\n      M: 'he marama',\n      MM: '%d marama',\n      y: 'he tau',\n      yy: '%d tau'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('mk', {\n    months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n    weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n    weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'D.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY H:mm',\n      LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[Денес во] LT',\n      nextDay: '[Утре во] LT',\n      nextWeek: '[Во] dddd [во] LT',\n      lastDay: '[Вчера во] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n          case 3:\n          case 6:\n            return '[Изминатата] dddd [во] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[Изминатиот] dddd [во] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'за %s',\n      past: 'пред %s',\n      s: 'неколку секунди',\n      ss: '%d секунди',\n      m: 'една минута',\n      mm: '%d минути',\n      h: 'еден час',\n      hh: '%d часа',\n      d: 'еден ден',\n      dd: '%d дена',\n      M: 'еден месец',\n      MM: '%d месеци',\n      y: 'една година',\n      yy: '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal: function (number) {\n      var lastDigit = number % 10,\n          last2Digits = number % 100;\n\n      if (number === 0) {\n        return number + '-ев';\n      } else if (last2Digits === 0) {\n        return number + '-ен';\n      } else if (last2Digits > 10 && last2Digits < 20) {\n        return number + '-ти';\n      } else if (lastDigit === 1) {\n        return number + '-ви';\n      } else if (lastDigit === 2) {\n        return number + '-ри';\n      } else if (lastDigit === 7 || lastDigit === 8) {\n        return number + '-ми';\n      } else {\n        return number + '-ти';\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ml', {\n    months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n    monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n    weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n    weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm -നു',\n      LTS: 'A h:mm:ss -നു',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm -നു',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm -നു'\n    },\n    calendar: {\n      sameDay: '[ഇന്ന്] LT',\n      nextDay: '[നാളെ] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[ഇന്നലെ] LT',\n      lastWeek: '[കഴിഞ്ഞ] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s കഴിഞ്ഞ്',\n      past: '%s മുൻപ്',\n      s: 'അൽപ നിമിഷങ്ങൾ',\n      ss: '%d സെക്കൻഡ്',\n      m: 'ഒരു മിനിറ്റ്',\n      mm: '%d മിനിറ്റ്',\n      h: 'ഒരു മണിക്കൂർ',\n      hh: '%d മണിക്കൂർ',\n      d: 'ഒരു ദിവസം',\n      dd: '%d ദിവസം',\n      M: 'ഒരു മാസം',\n      MM: '%d മാസം',\n      y: 'ഒരു വർഷം',\n      yy: '%d വർഷം'\n    },\n    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'രാത്രി' && hour >= 4 || meridiem === 'ഉച്ച കഴിഞ്ഞ്' || meridiem === 'വൈകുന്നേരം') {\n        return hour + 12;\n      } else {\n        return hour;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'രാത്രി';\n      } else if (hour < 12) {\n        return 'രാവിലെ';\n      } else if (hour < 17) {\n        return 'ഉച്ച കഴിഞ്ഞ്';\n      } else if (hour < 20) {\n        return 'വൈകുന്നേരം';\n      } else {\n        return 'രാത്രി';\n      }\n    }\n  }); //! moment.js locale configuration\n\n  function translate$7(number, withoutSuffix, key, isFuture) {\n    switch (key) {\n      case 's':\n        return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n\n      case 'ss':\n        return number + (withoutSuffix ? ' секунд' : ' секундын');\n\n      case 'm':\n      case 'mm':\n        return number + (withoutSuffix ? ' минут' : ' минутын');\n\n      case 'h':\n      case 'hh':\n        return number + (withoutSuffix ? ' цаг' : ' цагийн');\n\n      case 'd':\n      case 'dd':\n        return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n\n      case 'M':\n      case 'MM':\n        return number + (withoutSuffix ? ' сар' : ' сарын');\n\n      case 'y':\n      case 'yy':\n        return number + (withoutSuffix ? ' жил' : ' жилийн');\n\n      default:\n        return number;\n    }\n  }\n\n  hooks.defineLocale('mn', {\n    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n    monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: 'YYYY оны MMMMын D',\n      LLL: 'YYYY оны MMMMын D HH:mm',\n      LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n    },\n    meridiemParse: /ҮӨ|ҮХ/i,\n    isPM: function (input) {\n      return input === 'ҮХ';\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ҮӨ';\n      } else {\n        return 'ҮХ';\n      }\n    },\n    calendar: {\n      sameDay: '[Өнөөдөр] LT',\n      nextDay: '[Маргааш] LT',\n      nextWeek: '[Ирэх] dddd LT',\n      lastDay: '[Өчигдөр] LT',\n      lastWeek: '[Өнгөрсөн] dddd LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s дараа',\n      past: '%s өмнө',\n      s: translate$7,\n      ss: translate$7,\n      m: translate$7,\n      mm: translate$7,\n      h: translate$7,\n      hh: translate$7,\n      d: translate$7,\n      dd: translate$7,\n      M: translate$7,\n      MM: translate$7,\n      y: translate$7,\n      yy: translate$7\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + ' өдөр';\n\n        default:\n          return number;\n      }\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$c = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n  },\n      numberMap$b = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n  };\n\n  function relativeTimeMr(number, withoutSuffix, string, isFuture) {\n    var output = '';\n\n    if (withoutSuffix) {\n      switch (string) {\n        case 's':\n          output = 'काही सेकंद';\n          break;\n\n        case 'ss':\n          output = '%d सेकंद';\n          break;\n\n        case 'm':\n          output = 'एक मिनिट';\n          break;\n\n        case 'mm':\n          output = '%d मिनिटे';\n          break;\n\n        case 'h':\n          output = 'एक तास';\n          break;\n\n        case 'hh':\n          output = '%d तास';\n          break;\n\n        case 'd':\n          output = 'एक दिवस';\n          break;\n\n        case 'dd':\n          output = '%d दिवस';\n          break;\n\n        case 'M':\n          output = 'एक महिना';\n          break;\n\n        case 'MM':\n          output = '%d महिने';\n          break;\n\n        case 'y':\n          output = 'एक वर्ष';\n          break;\n\n        case 'yy':\n          output = '%d वर्षे';\n          break;\n      }\n    } else {\n      switch (string) {\n        case 's':\n          output = 'काही सेकंदां';\n          break;\n\n        case 'ss':\n          output = '%d सेकंदां';\n          break;\n\n        case 'm':\n          output = 'एका मिनिटा';\n          break;\n\n        case 'mm':\n          output = '%d मिनिटां';\n          break;\n\n        case 'h':\n          output = 'एका तासा';\n          break;\n\n        case 'hh':\n          output = '%d तासां';\n          break;\n\n        case 'd':\n          output = 'एका दिवसा';\n          break;\n\n        case 'dd':\n          output = '%d दिवसां';\n          break;\n\n        case 'M':\n          output = 'एका महिन्या';\n          break;\n\n        case 'MM':\n          output = '%d महिन्यां';\n          break;\n\n        case 'y':\n          output = 'एका वर्षा';\n          break;\n\n        case 'yy':\n          output = '%d वर्षां';\n          break;\n      }\n    }\n\n    return output.replace(/%d/i, number);\n  }\n\n  hooks.defineLocale('mr', {\n    months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm वाजता',\n      LTS: 'A h:mm:ss वाजता',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm वाजता',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता'\n    },\n    calendar: {\n      sameDay: '[आज] LT',\n      nextDay: '[उद्या] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[काल] LT',\n      lastWeek: '[मागील] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%sमध्ये',\n      past: '%sपूर्वी',\n      s: relativeTimeMr,\n      ss: relativeTimeMr,\n      m: relativeTimeMr,\n      mm: relativeTimeMr,\n      h: relativeTimeMr,\n      hh: relativeTimeMr,\n      d: relativeTimeMr,\n      dd: relativeTimeMr,\n      M: relativeTimeMr,\n      MM: relativeTimeMr,\n      y: relativeTimeMr,\n      yy: relativeTimeMr\n    },\n    preparse: function (string) {\n      return string.replace(/[१२३४५६७८९०]/g, function (match) {\n        return numberMap$b[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$c[match];\n      });\n    },\n    meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {\n        return hour;\n      } else if (meridiem === 'दुपारी' || meridiem === 'सायंकाळी' || meridiem === 'रात्री') {\n        return hour >= 12 ? hour : hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour >= 0 && hour < 6) {\n        return 'पहाटे';\n      } else if (hour < 12) {\n        return 'सकाळी';\n      } else if (hour < 17) {\n        return 'दुपारी';\n      } else if (hour < 20) {\n        return 'सायंकाळी';\n      } else {\n        return 'रात्री';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ms-my', {\n    months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n    weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n    weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n    weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n      LT: 'HH.mm',\n      LTS: 'HH.mm.ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY [pukul] HH.mm',\n      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|tengahari|petang|malam/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'pagi') {\n        return hour;\n      } else if (meridiem === 'tengahari') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === 'petang' || meridiem === 'malam') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 11) {\n        return 'pagi';\n      } else if (hours < 15) {\n        return 'tengahari';\n      } else if (hours < 19) {\n        return 'petang';\n      } else {\n        return 'malam';\n      }\n    },\n    calendar: {\n      sameDay: '[Hari ini pukul] LT',\n      nextDay: '[Esok pukul] LT',\n      nextWeek: 'dddd [pukul] LT',\n      lastDay: '[Kelmarin pukul] LT',\n      lastWeek: 'dddd [lepas pukul] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dalam %s',\n      past: '%s yang lepas',\n      s: 'beberapa saat',\n      ss: '%d saat',\n      m: 'seminit',\n      mm: '%d minit',\n      h: 'sejam',\n      hh: '%d jam',\n      d: 'sehari',\n      dd: '%d hari',\n      M: 'sebulan',\n      MM: '%d bulan',\n      y: 'setahun',\n      yy: '%d tahun'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ms', {\n    months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n    weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n    weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n    weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n      LT: 'HH.mm',\n      LTS: 'HH.mm.ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY [pukul] HH.mm',\n      LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|tengahari|petang|malam/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'pagi') {\n        return hour;\n      } else if (meridiem === 'tengahari') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === 'petang' || meridiem === 'malam') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 11) {\n        return 'pagi';\n      } else if (hours < 15) {\n        return 'tengahari';\n      } else if (hours < 19) {\n        return 'petang';\n      } else {\n        return 'malam';\n      }\n    },\n    calendar: {\n      sameDay: '[Hari ini pukul] LT',\n      nextDay: '[Esok pukul] LT',\n      nextWeek: 'dddd [pukul] LT',\n      lastDay: '[Kelmarin pukul] LT',\n      lastWeek: 'dddd [lepas pukul] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dalam %s',\n      past: '%s yang lepas',\n      s: 'beberapa saat',\n      ss: '%d saat',\n      m: 'seminit',\n      mm: '%d minit',\n      h: 'sejam',\n      hh: '%d jam',\n      d: 'sehari',\n      dd: '%d hari',\n      M: 'sebulan',\n      MM: '%d bulan',\n      y: 'setahun',\n      yy: '%d tahun'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('mt', {\n    months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),\n    monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n    weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),\n    weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n    weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Illum fil-]LT',\n      nextDay: '[Għada fil-]LT',\n      nextWeek: 'dddd [fil-]LT',\n      lastDay: '[Il-bieraħ fil-]LT',\n      lastWeek: 'dddd [li għadda] [fil-]LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'f’ %s',\n      past: '%s ilu',\n      s: 'ftit sekondi',\n      ss: '%d sekondi',\n      m: 'minuta',\n      mm: '%d minuti',\n      h: 'siegħa',\n      hh: '%d siegħat',\n      d: 'ġurnata',\n      dd: '%d ġranet',\n      M: 'xahar',\n      MM: '%d xhur',\n      y: 'sena',\n      yy: '%d sni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$d = {\n    1: '၁',\n    2: '၂',\n    3: '၃',\n    4: '၄',\n    5: '၅',\n    6: '၆',\n    7: '၇',\n    8: '၈',\n    9: '၉',\n    0: '၀'\n  },\n      numberMap$c = {\n    '၁': '1',\n    '၂': '2',\n    '၃': '3',\n    '၄': '4',\n    '၅': '5',\n    '၆': '6',\n    '၇': '7',\n    '၈': '8',\n    '၉': '9',\n    '၀': '0'\n  };\n  hooks.defineLocale('my', {\n    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[ယနေ.] LT [မှာ]',\n      nextDay: '[မနက်ဖြန်] LT [မှာ]',\n      nextWeek: 'dddd LT [မှာ]',\n      lastDay: '[မနေ.က] LT [မှာ]',\n      lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'လာမည့် %s မှာ',\n      past: 'လွန်ခဲ့သော %s က',\n      s: 'စက္ကန်.အနည်းငယ်',\n      ss: '%d စက္ကန့်',\n      m: 'တစ်မိနစ်',\n      mm: '%d မိနစ်',\n      h: 'တစ်နာရီ',\n      hh: '%d နာရီ',\n      d: 'တစ်ရက်',\n      dd: '%d ရက်',\n      M: 'တစ်လ',\n      MM: '%d လ',\n      y: 'တစ်နှစ်',\n      yy: '%d နှစ်'\n    },\n    preparse: function (string) {\n      return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n        return numberMap$c[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$d[match];\n      });\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('nb', {\n    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY [kl.] HH:mm',\n      LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n      sameDay: '[i dag kl.] LT',\n      nextDay: '[i morgen kl.] LT',\n      nextWeek: 'dddd [kl.] LT',\n      lastDay: '[i går kl.] LT',\n      lastWeek: '[forrige] dddd [kl.] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'om %s',\n      past: '%s siden',\n      s: 'noen sekunder',\n      ss: '%d sekunder',\n      m: 'ett minutt',\n      mm: '%d minutter',\n      h: 'en time',\n      hh: '%d timer',\n      d: 'en dag',\n      dd: '%d dager',\n      w: 'en uke',\n      ww: '%d uker',\n      M: 'en måned',\n      MM: '%d måneder',\n      y: 'ett år',\n      yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$e = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n  },\n      numberMap$d = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n  };\n  hooks.defineLocale('ne', {\n    months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n    monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n    weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n    weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'Aको h:mm बजे',\n      LTS: 'Aको h:mm:ss बजे',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, Aको h:mm बजे',\n      LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे'\n    },\n    preparse: function (string) {\n      return string.replace(/[१२३४५६७८९०]/g, function (match) {\n        return numberMap$d[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$e[match];\n      });\n    },\n    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'राति') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'बिहान') {\n        return hour;\n      } else if (meridiem === 'दिउँसो') {\n        return hour >= 10 ? hour : hour + 12;\n      } else if (meridiem === 'साँझ') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 3) {\n        return 'राति';\n      } else if (hour < 12) {\n        return 'बिहान';\n      } else if (hour < 16) {\n        return 'दिउँसो';\n      } else if (hour < 20) {\n        return 'साँझ';\n      } else {\n        return 'राति';\n      }\n    },\n    calendar: {\n      sameDay: '[आज] LT',\n      nextDay: '[भोलि] LT',\n      nextWeek: '[आउँदो] dddd[,] LT',\n      lastDay: '[हिजो] LT',\n      lastWeek: '[गएको] dddd[,] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%sमा',\n      past: '%s अगाडि',\n      s: 'केही क्षण',\n      ss: '%d सेकेण्ड',\n      m: 'एक मिनेट',\n      mm: '%d मिनेट',\n      h: 'एक घण्टा',\n      hh: '%d घण्टा',\n      d: 'एक दिन',\n      dd: '%d दिन',\n      M: 'एक महिना',\n      MM: '%d महिना',\n      y: 'एक बर्ष',\n      yy: '%d बर्ष'\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n      monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n      monthsParse$8 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i],\n      monthsRegex$8 = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n  hooks.defineLocale('nl-be', {\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortWithDots$1;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShortWithoutDots$1[m.month()];\n      } else {\n        return monthsShortWithDots$1[m.month()];\n      }\n    },\n    monthsRegex: monthsRegex$8,\n    monthsShortRegex: monthsRegex$8,\n    monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$8,\n    longMonthsParse: monthsParse$8,\n    shortMonthsParse: monthsParse$8,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[vandaag om] LT',\n      nextDay: '[morgen om] LT',\n      nextWeek: 'dddd [om] LT',\n      lastDay: '[gisteren om] LT',\n      lastWeek: '[afgelopen] dddd [om] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'over %s',\n      past: '%s geleden',\n      s: 'een paar seconden',\n      ss: '%d seconden',\n      m: 'één minuut',\n      mm: '%d minuten',\n      h: 'één uur',\n      hh: '%d uur',\n      d: 'één dag',\n      dd: '%d dagen',\n      M: 'één maand',\n      MM: '%d maanden',\n      y: 'één jaar',\n      yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal: function (number) {\n      return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsShortWithDots$2 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n      monthsShortWithoutDots$2 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n      monthsParse$9 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i],\n      monthsRegex$9 = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n  hooks.defineLocale('nl', {\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort: function (m, format) {\n      if (!m) {\n        return monthsShortWithDots$2;\n      } else if (/-MMM-/.test(format)) {\n        return monthsShortWithoutDots$2[m.month()];\n      } else {\n        return monthsShortWithDots$2[m.month()];\n      }\n    },\n    monthsRegex: monthsRegex$9,\n    monthsShortRegex: monthsRegex$9,\n    monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$9,\n    longMonthsParse: monthsParse$9,\n    shortMonthsParse: monthsParse$9,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD-MM-YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[vandaag om] LT',\n      nextDay: '[morgen om] LT',\n      nextWeek: 'dddd [om] LT',\n      lastDay: '[gisteren om] LT',\n      lastWeek: '[afgelopen] dddd [om] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'over %s',\n      past: '%s geleden',\n      s: 'een paar seconden',\n      ss: '%d seconden',\n      m: 'één minuut',\n      mm: '%d minuten',\n      h: 'één uur',\n      hh: '%d uur',\n      d: 'één dag',\n      dd: '%d dagen',\n      w: 'één week',\n      ww: '%d weken',\n      M: 'één maand',\n      MM: '%d maanden',\n      y: 'één jaar',\n      yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal: function (number) {\n      return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('nn', {\n    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n    weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),\n    weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY [kl.] H:mm',\n      LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n      sameDay: '[I dag klokka] LT',\n      nextDay: '[I morgon klokka] LT',\n      nextWeek: 'dddd [klokka] LT',\n      lastDay: '[I går klokka] LT',\n      lastWeek: '[Føregåande] dddd [klokka] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'om %s',\n      past: '%s sidan',\n      s: 'nokre sekund',\n      ss: '%d sekund',\n      m: 'eit minutt',\n      mm: '%d minutt',\n      h: 'ein time',\n      hh: '%d timar',\n      d: 'ein dag',\n      dd: '%d dagar',\n      w: 'ei veke',\n      ww: '%d veker',\n      M: 'ein månad',\n      MM: '%d månader',\n      y: 'eit år',\n      yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('oc-lnc', {\n    months: {\n      standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split('_'),\n      format: \"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre\".split('_'),\n      isFormat: /D[oD]?(\\s)+MMMM/\n    },\n    monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split('_'),\n    weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),\n    weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM [de] YYYY',\n      ll: 'D MMM YYYY',\n      LLL: 'D MMMM [de] YYYY [a] H:mm',\n      lll: 'D MMM YYYY, H:mm',\n      LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',\n      llll: 'ddd D MMM YYYY, H:mm'\n    },\n    calendar: {\n      sameDay: '[uèi a] LT',\n      nextDay: '[deman a] LT',\n      nextWeek: 'dddd [a] LT',\n      lastDay: '[ièr a] LT',\n      lastWeek: 'dddd [passat a] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: \"d'aquí %s\",\n      past: 'fa %s',\n      s: 'unas segondas',\n      ss: '%d segondas',\n      m: 'una minuta',\n      mm: '%d minutas',\n      h: 'una ora',\n      hh: '%d oras',\n      d: 'un jorn',\n      dd: '%d jorns',\n      M: 'un mes',\n      MM: '%d meses',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n    ordinal: function (number, period) {\n      var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';\n\n      if (period === 'w' || period === 'W') {\n        output = 'a';\n      }\n\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$f = {\n    1: '੧',\n    2: '੨',\n    3: '੩',\n    4: '੪',\n    5: '੫',\n    6: '੬',\n    7: '੭',\n    8: '੮',\n    9: '੯',\n    0: '੦'\n  },\n      numberMap$e = {\n    '੧': '1',\n    '੨': '2',\n    '੩': '3',\n    '੪': '4',\n    '੫': '5',\n    '੬': '6',\n    '੭': '7',\n    '੮': '8',\n    '੯': '9',\n    '੦': '0'\n  };\n  hooks.defineLocale('pa-in', {\n    // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n    months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n    monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n    weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n    weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n    weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm ਵਜੇ',\n      LTS: 'A h:mm:ss ਵਜੇ',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n    },\n    calendar: {\n      sameDay: '[ਅਜ] LT',\n      nextDay: '[ਕਲ] LT',\n      nextWeek: '[ਅਗਲਾ] dddd, LT',\n      lastDay: '[ਕਲ] LT',\n      lastWeek: '[ਪਿਛਲੇ] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s ਵਿੱਚ',\n      past: '%s ਪਿਛਲੇ',\n      s: 'ਕੁਝ ਸਕਿੰਟ',\n      ss: '%d ਸਕਿੰਟ',\n      m: 'ਇਕ ਮਿੰਟ',\n      mm: '%d ਮਿੰਟ',\n      h: 'ਇੱਕ ਘੰਟਾ',\n      hh: '%d ਘੰਟੇ',\n      d: 'ਇੱਕ ਦਿਨ',\n      dd: '%d ਦਿਨ',\n      M: 'ਇੱਕ ਮਹੀਨਾ',\n      MM: '%d ਮਹੀਨੇ',\n      y: 'ਇੱਕ ਸਾਲ',\n      yy: '%d ਸਾਲ'\n    },\n    preparse: function (string) {\n      return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n        return numberMap$e[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$f[match];\n      });\n    },\n    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'ਰਾਤ') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'ਸਵੇਰ') {\n        return hour;\n      } else if (meridiem === 'ਦੁਪਹਿਰ') {\n        return hour >= 10 ? hour : hour + 12;\n      } else if (meridiem === 'ਸ਼ਾਮ') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'ਰਾਤ';\n      } else if (hour < 10) {\n        return 'ਸਵੇਰ';\n      } else if (hour < 17) {\n        return 'ਦੁਪਹਿਰ';\n      } else if (hour < 20) {\n        return 'ਸ਼ਾਮ';\n      } else {\n        return 'ਰਾਤ';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n      monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_'),\n      monthsParse$a = [/^sty/i, /^lut/i, /^mar/i, /^kwi/i, /^maj/i, /^cze/i, /^lip/i, /^sie/i, /^wrz/i, /^paź/i, /^lis/i, /^gru/i];\n\n  function plural$3(n) {\n    return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n  }\n\n  function translate$8(number, withoutSuffix, key) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 'ss':\n        return result + (plural$3(number) ? 'sekundy' : 'sekund');\n\n      case 'm':\n        return withoutSuffix ? 'minuta' : 'minutę';\n\n      case 'mm':\n        return result + (plural$3(number) ? 'minuty' : 'minut');\n\n      case 'h':\n        return withoutSuffix ? 'godzina' : 'godzinę';\n\n      case 'hh':\n        return result + (plural$3(number) ? 'godziny' : 'godzin');\n\n      case 'ww':\n        return result + (plural$3(number) ? 'tygodnie' : 'tygodni');\n\n      case 'MM':\n        return result + (plural$3(number) ? 'miesiące' : 'miesięcy');\n\n      case 'yy':\n        return result + (plural$3(number) ? 'lata' : 'lat');\n    }\n  }\n\n  hooks.defineLocale('pl', {\n    months: function (momentToFormat, format) {\n      if (!momentToFormat) {\n        return monthsNominative;\n      } else if (/D MMMM/.test(format)) {\n        return monthsSubjective[momentToFormat.month()];\n      } else {\n        return monthsNominative[momentToFormat.month()];\n      }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    monthsParse: monthsParse$a,\n    longMonthsParse: monthsParse$a,\n    shortMonthsParse: monthsParse$a,\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Dziś o] LT',\n      nextDay: '[Jutro o] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[W niedzielę o] LT';\n\n          case 2:\n            return '[We wtorek o] LT';\n\n          case 3:\n            return '[W środę o] LT';\n\n          case 6:\n            return '[W sobotę o] LT';\n\n          default:\n            return '[W] dddd [o] LT';\n        }\n      },\n      lastDay: '[Wczoraj o] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[W zeszłą niedzielę o] LT';\n\n          case 3:\n            return '[W zeszłą środę o] LT';\n\n          case 6:\n            return '[W zeszłą sobotę o] LT';\n\n          default:\n            return '[W zeszły] dddd [o] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: '%s temu',\n      s: 'kilka sekund',\n      ss: translate$8,\n      m: translate$8,\n      mm: translate$8,\n      h: translate$8,\n      hh: translate$8,\n      d: '1 dzień',\n      dd: '%d dni',\n      w: 'tydzień',\n      ww: translate$8,\n      M: 'miesiąc',\n      MM: translate$8,\n      y: 'rok',\n      yy: translate$8\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('pt-br', {\n    months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n    monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n    weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n    weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n    weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n    },\n    calendar: {\n      sameDay: '[Hoje às] LT',\n      nextDay: '[Amanhã às] LT',\n      nextWeek: 'dddd [às] LT',\n      lastDay: '[Ontem às] LT',\n      lastWeek: function () {\n        return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' // Saturday + Sunday\n        : '[Última] dddd [às] LT'; // Monday - Friday\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'em %s',\n      past: 'há %s',\n      s: 'poucos segundos',\n      ss: '%d segundos',\n      m: 'um minuto',\n      mm: '%d minutos',\n      h: 'uma hora',\n      hh: '%d horas',\n      d: 'um dia',\n      dd: '%d dias',\n      M: 'um mês',\n      MM: '%d meses',\n      y: 'um ano',\n      yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    invalidDate: 'Data inválida'\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('pt', {\n    months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n    monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n    weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D [de] MMMM [de] YYYY',\n      LLL: 'D [de] MMMM [de] YYYY HH:mm',\n      LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Hoje às] LT',\n      nextDay: '[Amanhã às] LT',\n      nextWeek: 'dddd [às] LT',\n      lastDay: '[Ontem às] LT',\n      lastWeek: function () {\n        return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' // Saturday + Sunday\n        : '[Última] dddd [às] LT'; // Monday - Friday\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'em %s',\n      past: 'há %s',\n      s: 'segundos',\n      ss: '%d segundos',\n      m: 'um minuto',\n      mm: '%d minutos',\n      h: 'uma hora',\n      hh: '%d horas',\n      d: 'um dia',\n      dd: '%d dias',\n      w: 'uma semana',\n      ww: '%d semanas',\n      M: 'um mês',\n      MM: '%d meses',\n      y: 'um ano',\n      yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function relativeTimeWithPlural$2(number, withoutSuffix, key) {\n    var format = {\n      ss: 'secunde',\n      mm: 'minute',\n      hh: 'ore',\n      dd: 'zile',\n      ww: 'săptămâni',\n      MM: 'luni',\n      yy: 'ani'\n    },\n        separator = ' ';\n\n    if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {\n      separator = ' de ';\n    }\n\n    return number + separator + format[key];\n  }\n\n  hooks.defineLocale('ro', {\n    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n    monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY H:mm',\n      LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[azi la] LT',\n      nextDay: '[mâine la] LT',\n      nextWeek: 'dddd [la] LT',\n      lastDay: '[ieri la] LT',\n      lastWeek: '[fosta] dddd [la] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'peste %s',\n      past: '%s în urmă',\n      s: 'câteva secunde',\n      ss: relativeTimeWithPlural$2,\n      m: 'un minut',\n      mm: relativeTimeWithPlural$2,\n      h: 'o oră',\n      hh: relativeTimeWithPlural$2,\n      d: 'o zi',\n      dd: relativeTimeWithPlural$2,\n      w: 'o săptămână',\n      ww: relativeTimeWithPlural$2,\n      M: 'o lună',\n      MM: relativeTimeWithPlural$2,\n      y: 'un an',\n      yy: relativeTimeWithPlural$2\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function plural$4(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n  }\n\n  function relativeTimeWithPlural$3(number, withoutSuffix, key) {\n    var format = {\n      ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n      mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n      hh: 'час_часа_часов',\n      dd: 'день_дня_дней',\n      ww: 'неделя_недели_недель',\n      MM: 'месяц_месяца_месяцев',\n      yy: 'год_года_лет'\n    };\n\n    if (key === 'm') {\n      return withoutSuffix ? 'минута' : 'минуту';\n    } else {\n      return number + ' ' + plural$4(format[key], +number);\n    }\n  }\n\n  var monthsParse$b = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103\n  // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n  // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\n  hooks.defineLocale('ru', {\n    months: {\n      format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n      standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n    },\n    monthsShort: {\n      // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку?\n      format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n      standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n    },\n    weekdays: {\n      standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n      format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n      isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse: monthsParse$b,\n    longMonthsParse: monthsParse$b,\n    shortMonthsParse: monthsParse$b,\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n    // Выражение, которое соответствует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY г.',\n      LLL: 'D MMMM YYYY г., H:mm',\n      LLLL: 'dddd, D MMMM YYYY г., H:mm'\n    },\n    calendar: {\n      sameDay: '[Сегодня, в] LT',\n      nextDay: '[Завтра, в] LT',\n      lastDay: '[Вчера, в] LT',\n      nextWeek: function (now) {\n        if (now.week() !== this.week()) {\n          switch (this.day()) {\n            case 0:\n              return '[В следующее] dddd, [в] LT';\n\n            case 1:\n            case 2:\n            case 4:\n              return '[В следующий] dddd, [в] LT';\n\n            case 3:\n            case 5:\n            case 6:\n              return '[В следующую] dddd, [в] LT';\n          }\n        } else {\n          if (this.day() === 2) {\n            return '[Во] dddd, [в] LT';\n          } else {\n            return '[В] dddd, [в] LT';\n          }\n        }\n      },\n      lastWeek: function (now) {\n        if (now.week() !== this.week()) {\n          switch (this.day()) {\n            case 0:\n              return '[В прошлое] dddd, [в] LT';\n\n            case 1:\n            case 2:\n            case 4:\n              return '[В прошлый] dddd, [в] LT';\n\n            case 3:\n            case 5:\n            case 6:\n              return '[В прошлую] dddd, [в] LT';\n          }\n        } else {\n          if (this.day() === 2) {\n            return '[Во] dddd, [в] LT';\n          } else {\n            return '[В] dddd, [в] LT';\n          }\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'через %s',\n      past: '%s назад',\n      s: 'несколько секунд',\n      ss: relativeTimeWithPlural$3,\n      m: relativeTimeWithPlural$3,\n      mm: relativeTimeWithPlural$3,\n      h: 'час',\n      hh: relativeTimeWithPlural$3,\n      d: 'день',\n      dd: relativeTimeWithPlural$3,\n      w: 'неделя',\n      ww: relativeTimeWithPlural$3,\n      M: 'месяц',\n      MM: relativeTimeWithPlural$3,\n      y: 'год',\n      yy: relativeTimeWithPlural$3\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    isPM: function (input) {\n      return /^(дня|вечера)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'ночи';\n      } else if (hour < 12) {\n        return 'утра';\n      } else if (hour < 17) {\n        return 'дня';\n      } else {\n        return 'вечера';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'M':\n        case 'd':\n        case 'DDD':\n          return number + '-й';\n\n        case 'D':\n          return number + '-го';\n\n        case 'w':\n        case 'W':\n          return number + '-я';\n\n        default:\n          return number;\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var months$9 = ['جنوري', 'فيبروري', 'مارچ', 'اپريل', 'مئي', 'جون', 'جولاءِ', 'آگسٽ', 'سيپٽمبر', 'آڪٽوبر', 'نومبر', 'ڊسمبر'],\n      days$1 = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];\n  hooks.defineLocale('sd', {\n    months: months$9,\n    monthsShort: months$9,\n    weekdays: days$1,\n    weekdaysShort: days$1,\n    weekdaysMin: days$1,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd، D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /صبح|شام/,\n    isPM: function (input) {\n      return 'شام' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'صبح';\n      }\n\n      return 'شام';\n    },\n    calendar: {\n      sameDay: '[اڄ] LT',\n      nextDay: '[سڀاڻي] LT',\n      nextWeek: 'dddd [اڳين هفتي تي] LT',\n      lastDay: '[ڪالهه] LT',\n      lastWeek: '[گزريل هفتي] dddd [تي] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s پوء',\n      past: '%s اڳ',\n      s: 'چند سيڪنڊ',\n      ss: '%d سيڪنڊ',\n      m: 'هڪ منٽ',\n      mm: '%d منٽ',\n      h: 'هڪ ڪلاڪ',\n      hh: '%d ڪلاڪ',\n      d: 'هڪ ڏينهن',\n      dd: '%d ڏينهن',\n      M: 'هڪ مهينو',\n      MM: '%d مهينا',\n      y: 'هڪ سال',\n      yy: '%d سال'\n    },\n    preparse: function (string) {\n      return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/,/g, '،');\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('se', {\n    months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n    monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n    weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n    weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n    weekdaysMin: 's_v_m_g_d_b_L'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'MMMM D. [b.] YYYY',\n      LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',\n      LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n    },\n    calendar: {\n      sameDay: '[otne ti] LT',\n      nextDay: '[ihttin ti] LT',\n      nextWeek: 'dddd [ti] LT',\n      lastDay: '[ikte ti] LT',\n      lastWeek: '[ovddit] dddd [ti] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s geažes',\n      past: 'maŋit %s',\n      s: 'moadde sekunddat',\n      ss: '%d sekunddat',\n      m: 'okta minuhta',\n      mm: '%d minuhtat',\n      h: 'okta diimmu',\n      hh: '%d diimmut',\n      d: 'okta beaivi',\n      dd: '%d beaivvit',\n      M: 'okta mánnu',\n      MM: '%d mánut',\n      y: 'okta jahki',\n      yy: '%d jagit'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  /*jshint -W100*/\n\n  hooks.defineLocale('si', {\n    months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n    monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n    weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n    weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n    weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'a h:mm',\n      LTS: 'a h:mm:ss',\n      L: 'YYYY/MM/DD',\n      LL: 'YYYY MMMM D',\n      LLL: 'YYYY MMMM D, a h:mm',\n      LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n    },\n    calendar: {\n      sameDay: '[අද] LT[ට]',\n      nextDay: '[හෙට] LT[ට]',\n      nextWeek: 'dddd LT[ට]',\n      lastDay: '[ඊයේ] LT[ට]',\n      lastWeek: '[පසුගිය] dddd LT[ට]',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%sකින්',\n      past: '%sකට පෙර',\n      s: 'තත්පර කිහිපය',\n      ss: 'තත්පර %d',\n      m: 'මිනිත්තුව',\n      mm: 'මිනිත්තු %d',\n      h: 'පැය',\n      hh: 'පැය %d',\n      d: 'දිනය',\n      dd: 'දින %d',\n      M: 'මාසය',\n      MM: 'මාස %d',\n      y: 'වසර',\n      yy: 'වසර %d'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n    ordinal: function (number) {\n      return number + ' වැනි';\n    },\n    meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n    isPM: function (input) {\n      return input === 'ප.ව.' || input === 'පස් වරු';\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? 'ප.ව.' : 'පස් වරු';\n      } else {\n        return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n      }\n    }\n  }); //! moment.js locale configuration\n\n  var months$a = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n      monthsShort$7 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\n  function plural$5(n) {\n    return n > 1 && n < 5;\n  }\n\n  function translate$9(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 's':\n        // a few seconds / in a few seconds / a few seconds ago\n        return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n\n      case 'ss':\n        // 9 seconds / in 9 seconds / 9 seconds ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$5(number) ? 'sekundy' : 'sekúnd');\n        } else {\n          return result + 'sekundami';\n        }\n\n      case 'm':\n        // a minute / in a minute / a minute ago\n        return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n\n      case 'mm':\n        // 9 minutes / in 9 minutes / 9 minutes ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$5(number) ? 'minúty' : 'minút');\n        } else {\n          return result + 'minútami';\n        }\n\n      case 'h':\n        // an hour / in an hour / an hour ago\n        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n      case 'hh':\n        // 9 hours / in 9 hours / 9 hours ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$5(number) ? 'hodiny' : 'hodín');\n        } else {\n          return result + 'hodinami';\n        }\n\n      case 'd':\n        // a day / in a day / a day ago\n        return withoutSuffix || isFuture ? 'deň' : 'dňom';\n\n      case 'dd':\n        // 9 days / in 9 days / 9 days ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$5(number) ? 'dni' : 'dní');\n        } else {\n          return result + 'dňami';\n        }\n\n      case 'M':\n        // a month / in a month / a month ago\n        return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n\n      case 'MM':\n        // 9 months / in 9 months / 9 months ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$5(number) ? 'mesiace' : 'mesiacov');\n        } else {\n          return result + 'mesiacmi';\n        }\n\n      case 'y':\n        // a year / in a year / a year ago\n        return withoutSuffix || isFuture ? 'rok' : 'rokom';\n\n      case 'yy':\n        // 9 years / in 9 years / 9 years ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural$5(number) ? 'roky' : 'rokov');\n        } else {\n          return result + 'rokmi';\n        }\n\n    }\n  }\n\n  hooks.defineLocale('sk', {\n    months: months$a,\n    monthsShort: monthsShort$7,\n    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd D. MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[dnes o] LT',\n      nextDay: '[zajtra o] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[v nedeľu o] LT';\n\n          case 1:\n          case 2:\n            return '[v] dddd [o] LT';\n\n          case 3:\n            return '[v stredu o] LT';\n\n          case 4:\n            return '[vo štvrtok o] LT';\n\n          case 5:\n            return '[v piatok o] LT';\n\n          case 6:\n            return '[v sobotu o] LT';\n        }\n      },\n      lastDay: '[včera o] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[minulú nedeľu o] LT';\n\n          case 1:\n          case 2:\n            return '[minulý] dddd [o] LT';\n\n          case 3:\n            return '[minulú stredu o] LT';\n\n          case 4:\n          case 5:\n            return '[minulý] dddd [o] LT';\n\n          case 6:\n            return '[minulú sobotu o] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'pred %s',\n      s: translate$9,\n      ss: translate$9,\n      m: translate$9,\n      mm: translate$9,\n      h: translate$9,\n      hh: translate$9,\n      d: translate$9,\n      dd: translate$9,\n      M: translate$9,\n      MM: translate$9,\n      y: translate$9,\n      yy: translate$9\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function processRelativeTime$7(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 's':\n        return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n\n      case 'ss':\n        if (number === 1) {\n          result += withoutSuffix ? 'sekundo' : 'sekundi';\n        } else if (number === 2) {\n          result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n        } else if (number < 5) {\n          result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n        } else {\n          result += 'sekund';\n        }\n\n        return result;\n\n      case 'm':\n        return withoutSuffix ? 'ena minuta' : 'eno minuto';\n\n      case 'mm':\n        if (number === 1) {\n          result += withoutSuffix ? 'minuta' : 'minuto';\n        } else if (number === 2) {\n          result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n        } else if (number < 5) {\n          result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n        } else {\n          result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n        }\n\n        return result;\n\n      case 'h':\n        return withoutSuffix ? 'ena ura' : 'eno uro';\n\n      case 'hh':\n        if (number === 1) {\n          result += withoutSuffix ? 'ura' : 'uro';\n        } else if (number === 2) {\n          result += withoutSuffix || isFuture ? 'uri' : 'urama';\n        } else if (number < 5) {\n          result += withoutSuffix || isFuture ? 'ure' : 'urami';\n        } else {\n          result += withoutSuffix || isFuture ? 'ur' : 'urami';\n        }\n\n        return result;\n\n      case 'd':\n        return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n\n      case 'dd':\n        if (number === 1) {\n          result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n        } else if (number === 2) {\n          result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n        } else {\n          result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n        }\n\n        return result;\n\n      case 'M':\n        return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n\n      case 'MM':\n        if (number === 1) {\n          result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n        } else if (number === 2) {\n          result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n        } else if (number < 5) {\n          result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n        } else {\n          result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n        }\n\n        return result;\n\n      case 'y':\n        return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n\n      case 'yy':\n        if (number === 1) {\n          result += withoutSuffix || isFuture ? 'leto' : 'letom';\n        } else if (number === 2) {\n          result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n        } else if (number < 5) {\n          result += withoutSuffix || isFuture ? 'leta' : 'leti';\n        } else {\n          result += withoutSuffix || isFuture ? 'let' : 'leti';\n        }\n\n        return result;\n    }\n  }\n\n  hooks.defineLocale('sl', {\n    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD. MM. YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n      sameDay: '[danes ob] LT',\n      nextDay: '[jutri ob] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[v] [nedeljo] [ob] LT';\n\n          case 3:\n            return '[v] [sredo] [ob] LT';\n\n          case 6:\n            return '[v] [soboto] [ob] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[v] dddd [ob] LT';\n        }\n      },\n      lastDay: '[včeraj ob] LT',\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[prejšnjo] [nedeljo] [ob] LT';\n\n          case 3:\n            return '[prejšnjo] [sredo] [ob] LT';\n\n          case 6:\n            return '[prejšnjo] [soboto] [ob] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[prejšnji] dddd [ob] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'čez %s',\n      past: 'pred %s',\n      s: processRelativeTime$7,\n      ss: processRelativeTime$7,\n      m: processRelativeTime$7,\n      mm: processRelativeTime$7,\n      h: processRelativeTime$7,\n      hh: processRelativeTime$7,\n      d: processRelativeTime$7,\n      dd: processRelativeTime$7,\n      M: processRelativeTime$7,\n      MM: processRelativeTime$7,\n      y: processRelativeTime$7,\n      yy: processRelativeTime$7\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('sq', {\n    months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n    monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n    weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n    weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n    weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),\n    weekdaysParseExact: true,\n    meridiemParse: /PD|MD/,\n    isPM: function (input) {\n      return input.charAt(0) === 'M';\n    },\n    meridiem: function (hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Sot në] LT',\n      nextDay: '[Nesër në] LT',\n      nextWeek: 'dddd [në] LT',\n      lastDay: '[Dje në] LT',\n      lastWeek: 'dddd [e kaluar në] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'në %s',\n      past: '%s më parë',\n      s: 'disa sekonda',\n      ss: '%d sekonda',\n      m: 'një minutë',\n      mm: '%d minuta',\n      h: 'një orë',\n      hh: '%d orë',\n      d: 'një ditë',\n      dd: '%d ditë',\n      M: 'një muaj',\n      MM: '%d muaj',\n      y: 'një vit',\n      yy: '%d vite'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var translator$1 = {\n    words: {\n      //Different grammatical cases\n      ss: ['секунда', 'секунде', 'секунди'],\n      m: ['један минут', 'једног минута'],\n      mm: ['минут', 'минута', 'минута'],\n      h: ['један сат', 'једног сата'],\n      hh: ['сат', 'сата', 'сати'],\n      d: ['један дан', 'једног дана'],\n      dd: ['дан', 'дана', 'дана'],\n      M: ['један месец', 'једног месеца'],\n      MM: ['месец', 'месеца', 'месеци'],\n      y: ['једну годину', 'једне године'],\n      yy: ['годину', 'године', 'година']\n    },\n    correctGrammaticalCase: function (number, wordKey) {\n      if (number % 10 >= 1 && number % 10 <= 4 && (number % 100 < 10 || number % 100 >= 20)) {\n        return number % 10 === 1 ? wordKey[0] : wordKey[1];\n      }\n\n      return wordKey[2];\n    },\n    translate: function (number, withoutSuffix, key, isFuture) {\n      var wordKey = translator$1.words[key],\n          word;\n\n      if (key.length === 1) {\n        // Nominativ\n        if (key === 'y' && withoutSuffix) return 'једна година';\n        return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];\n      }\n\n      word = translator$1.correctGrammaticalCase(number, wordKey); // Nominativ\n\n      if (key === 'yy' && withoutSuffix && word === 'годину') {\n        return number + ' година';\n      }\n\n      return number + ' ' + word;\n    }\n  };\n  hooks.defineLocale('sr-cyrl', {\n    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'D. M. YYYY.',\n      LL: 'D. MMMM YYYY.',\n      LLL: 'D. MMMM YYYY. H:mm',\n      LLLL: 'dddd, D. MMMM YYYY. H:mm'\n    },\n    calendar: {\n      sameDay: '[данас у] LT',\n      nextDay: '[сутра у] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[у] [недељу] [у] LT';\n\n          case 3:\n            return '[у] [среду] [у] LT';\n\n          case 6:\n            return '[у] [суботу] [у] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[у] dddd [у] LT';\n        }\n      },\n      lastDay: '[јуче у] LT',\n      lastWeek: function () {\n        var lastWeekDays = ['[прошле] [недеље] [у] LT', '[прошлог] [понедељка] [у] LT', '[прошлог] [уторка] [у] LT', '[прошле] [среде] [у] LT', '[прошлог] [четвртка] [у] LT', '[прошлог] [петка] [у] LT', '[прошле] [суботе] [у] LT'];\n        return lastWeekDays[this.day()];\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'за %s',\n      past: 'пре %s',\n      s: 'неколико секунди',\n      ss: translator$1.translate,\n      m: translator$1.translate,\n      mm: translator$1.translate,\n      h: translator$1.translate,\n      hh: translator$1.translate,\n      d: translator$1.translate,\n      dd: translator$1.translate,\n      M: translator$1.translate,\n      MM: translator$1.translate,\n      y: translator$1.translate,\n      yy: translator$1.translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var translator$2 = {\n    words: {\n      //Different grammatical cases\n      ss: ['sekunda', 'sekunde', 'sekundi'],\n      m: ['jedan minut', 'jednog minuta'],\n      mm: ['minut', 'minuta', 'minuta'],\n      h: ['jedan sat', 'jednog sata'],\n      hh: ['sat', 'sata', 'sati'],\n      d: ['jedan dan', 'jednog dana'],\n      dd: ['dan', 'dana', 'dana'],\n      M: ['jedan mesec', 'jednog meseca'],\n      MM: ['mesec', 'meseca', 'meseci'],\n      y: ['jednu godinu', 'jedne godine'],\n      yy: ['godinu', 'godine', 'godina']\n    },\n    correctGrammaticalCase: function (number, wordKey) {\n      if (number % 10 >= 1 && number % 10 <= 4 && (number % 100 < 10 || number % 100 >= 20)) {\n        return number % 10 === 1 ? wordKey[0] : wordKey[1];\n      }\n\n      return wordKey[2];\n    },\n    translate: function (number, withoutSuffix, key, isFuture) {\n      var wordKey = translator$2.words[key],\n          word;\n\n      if (key.length === 1) {\n        // Nominativ\n        if (key === 'y' && withoutSuffix) return 'jedna godina';\n        return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];\n      }\n\n      word = translator$2.correctGrammaticalCase(number, wordKey); // Nominativ\n\n      if (key === 'yy' && withoutSuffix && word === 'godinu') {\n        return number + ' godina';\n      }\n\n      return number + ' ' + word;\n    }\n  };\n  hooks.defineLocale('sr', {\n    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'D. M. YYYY.',\n      LL: 'D. MMMM YYYY.',\n      LLL: 'D. MMMM YYYY. H:mm',\n      LLLL: 'dddd, D. MMMM YYYY. H:mm'\n    },\n    calendar: {\n      sameDay: '[danas u] LT',\n      nextDay: '[sutra u] LT',\n      nextWeek: function () {\n        switch (this.day()) {\n          case 0:\n            return '[u] [nedelju] [u] LT';\n\n          case 3:\n            return '[u] [sredu] [u] LT';\n\n          case 6:\n            return '[u] [subotu] [u] LT';\n\n          case 1:\n          case 2:\n          case 4:\n          case 5:\n            return '[u] dddd [u] LT';\n        }\n      },\n      lastDay: '[juče u] LT',\n      lastWeek: function () {\n        var lastWeekDays = ['[prošle] [nedelje] [u] LT', '[prošlog] [ponedeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];\n        return lastWeekDays[this.day()];\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'pre %s',\n      s: 'nekoliko sekundi',\n      ss: translator$2.translate,\n      m: translator$2.translate,\n      mm: translator$2.translate,\n      h: translator$2.translate,\n      hh: translator$2.translate,\n      d: translator$2.translate,\n      dd: translator$2.translate,\n      M: translator$2.translate,\n      MM: translator$2.translate,\n      y: translator$2.translate,\n      yy: translator$2.translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ss', {\n    months: \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n    monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n    weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n    weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n    weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY h:mm A',\n      LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: '[Namuhla nga] LT',\n      nextDay: '[Kusasa nga] LT',\n      nextWeek: 'dddd [nga] LT',\n      lastDay: '[Itolo nga] LT',\n      lastWeek: 'dddd [leliphelile] [nga] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'nga %s',\n      past: 'wenteka nga %s',\n      s: 'emizuzwana lomcane',\n      ss: '%d mzuzwana',\n      m: 'umzuzu',\n      mm: '%d emizuzu',\n      h: 'lihora',\n      hh: '%d emahora',\n      d: 'lilanga',\n      dd: '%d emalanga',\n      M: 'inyanga',\n      MM: '%d tinyanga',\n      y: 'umnyaka',\n      yy: '%d iminyaka'\n    },\n    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 11) {\n        return 'ekuseni';\n      } else if (hours < 15) {\n        return 'emini';\n      } else if (hours < 19) {\n        return 'entsambama';\n      } else {\n        return 'ebusuku';\n      }\n    },\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'ekuseni') {\n        return hour;\n      } else if (meridiem === 'emini') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n        if (hour === 0) {\n          return 0;\n        }\n\n        return hour + 12;\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal: '%d',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('sv', {\n    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY [kl.] HH:mm',\n      LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n      lll: 'D MMM YYYY HH:mm',\n      llll: 'ddd D MMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Idag] LT',\n      nextDay: '[Imorgon] LT',\n      lastDay: '[Igår] LT',\n      nextWeek: '[På] dddd LT',\n      lastWeek: '[I] dddd[s] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'om %s',\n      past: 'för %s sedan',\n      s: 'några sekunder',\n      ss: '%d sekunder',\n      m: 'en minut',\n      mm: '%d minuter',\n      h: 'en timme',\n      hh: '%d timmar',\n      d: 'en dag',\n      dd: '%d dagar',\n      M: 'en månad',\n      MM: '%d månader',\n      y: 'ett år',\n      yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(\\:e|\\:a)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? ':e' : b === 1 ? ':a' : b === 2 ? ':a' : b === 3 ? ':e' : ':e';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('sw', {\n    months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n    monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n    weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n    weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'hh:mm A',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[leo saa] LT',\n      nextDay: '[kesho saa] LT',\n      nextWeek: '[wiki ijayo] dddd [saat] LT',\n      lastDay: '[jana] LT',\n      lastWeek: '[wiki iliyopita] dddd [saat] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s baadaye',\n      past: 'tokea %s',\n      s: 'hivi punde',\n      ss: 'sekunde %d',\n      m: 'dakika moja',\n      mm: 'dakika %d',\n      h: 'saa limoja',\n      hh: 'masaa %d',\n      d: 'siku moja',\n      dd: 'siku %d',\n      M: 'mwezi mmoja',\n      MM: 'miezi %d',\n      y: 'mwaka mmoja',\n      yy: 'miaka %d'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var symbolMap$g = {\n    1: '௧',\n    2: '௨',\n    3: '௩',\n    4: '௪',\n    5: '௫',\n    6: '௬',\n    7: '௭',\n    8: '௮',\n    9: '௯',\n    0: '௦'\n  },\n      numberMap$f = {\n    '௧': '1',\n    '௨': '2',\n    '௩': '3',\n    '௪': '4',\n    '௫': '5',\n    '௬': '6',\n    '௭': '7',\n    '௮': '8',\n    '௯': '9',\n    '௦': '0'\n  };\n  hooks.defineLocale('ta', {\n    months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n    monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n    weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n    weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n    weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, HH:mm',\n      LLLL: 'dddd, D MMMM YYYY, HH:mm'\n    },\n    calendar: {\n      sameDay: '[இன்று] LT',\n      nextDay: '[நாளை] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[நேற்று] LT',\n      lastWeek: '[கடந்த வாரம்] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s இல்',\n      past: '%s முன்',\n      s: 'ஒரு சில விநாடிகள்',\n      ss: '%d விநாடிகள்',\n      m: 'ஒரு நிமிடம்',\n      mm: '%d நிமிடங்கள்',\n      h: 'ஒரு மணி நேரம்',\n      hh: '%d மணி நேரம்',\n      d: 'ஒரு நாள்',\n      dd: '%d நாட்கள்',\n      M: 'ஒரு மாதம்',\n      MM: '%d மாதங்கள்',\n      y: 'ஒரு வருடம்',\n      yy: '%d ஆண்டுகள்'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n    ordinal: function (number) {\n      return number + 'வது';\n    },\n    preparse: function (string) {\n      return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n        return numberMap$f[match];\n      });\n    },\n    postformat: function (string) {\n      return string.replace(/\\d/g, function (match) {\n        return symbolMap$g[match];\n      });\n    },\n    // refer http://ta.wikipedia.org/s/1er1\n    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 2) {\n        return ' யாமம்';\n      } else if (hour < 6) {\n        return ' வைகறை'; // வைகறை\n      } else if (hour < 10) {\n        return ' காலை'; // காலை\n      } else if (hour < 14) {\n        return ' நண்பகல்'; // நண்பகல்\n      } else if (hour < 18) {\n        return ' எற்பாடு'; // எற்பாடு\n      } else if (hour < 22) {\n        return ' மாலை'; // மாலை\n      } else {\n        return ' யாமம்';\n      }\n    },\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'யாமம்') {\n        return hour < 2 ? hour : hour + 12;\n      } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n        return hour;\n      } else if (meridiem === 'நண்பகல்') {\n        return hour >= 10 ? hour : hour + 12;\n      } else {\n        return hour + 12;\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('te', {\n    months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n    monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n    weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n    weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n    longDateFormat: {\n      LT: 'A h:mm',\n      LTS: 'A h:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY, A h:mm',\n      LLLL: 'dddd, D MMMM YYYY, A h:mm'\n    },\n    calendar: {\n      sameDay: '[నేడు] LT',\n      nextDay: '[రేపు] LT',\n      nextWeek: 'dddd, LT',\n      lastDay: '[నిన్న] LT',\n      lastWeek: '[గత] dddd, LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s లో',\n      past: '%s క్రితం',\n      s: 'కొన్ని క్షణాలు',\n      ss: '%d సెకన్లు',\n      m: 'ఒక నిమిషం',\n      mm: '%d నిమిషాలు',\n      h: 'ఒక గంట',\n      hh: '%d గంటలు',\n      d: 'ఒక రోజు',\n      dd: '%d రోజులు',\n      M: 'ఒక నెల',\n      MM: '%d నెలలు',\n      y: 'ఒక సంవత్సరం',\n      yy: '%d సంవత్సరాలు'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}వ/,\n    ordinal: '%dవ',\n    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'రాత్రి') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'ఉదయం') {\n        return hour;\n      } else if (meridiem === 'మధ్యాహ్నం') {\n        return hour >= 10 ? hour : hour + 12;\n      } else if (meridiem === 'సాయంత్రం') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'రాత్రి';\n      } else if (hour < 10) {\n        return 'ఉదయం';\n      } else if (hour < 17) {\n        return 'మధ్యాహ్నం';\n      } else if (hour < 20) {\n        return 'సాయంత్రం';\n      } else {\n        return 'రాత్రి';\n      }\n    },\n    week: {\n      dow: 0,\n      // Sunday is the first day of the week.\n      doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('tet', {\n    months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n    weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n    weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Ohin iha] LT',\n      nextDay: '[Aban iha] LT',\n      nextWeek: 'dddd [iha] LT',\n      lastDay: '[Horiseik iha] LT',\n      lastWeek: 'dddd [semana kotuk] [iha] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'iha %s',\n      past: '%s liuba',\n      s: 'segundu balun',\n      ss: 'segundu %d',\n      m: 'minutu ida',\n      mm: 'minutu %d',\n      h: 'oras ida',\n      hh: 'oras %d',\n      d: 'loron ida',\n      dd: 'loron %d',\n      M: 'fulan ida',\n      MM: 'fulan %d',\n      y: 'tinan ida',\n      yy: 'tinan %d'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var suffixes$3 = {\n    0: '-ум',\n    1: '-ум',\n    2: '-юм',\n    3: '-юм',\n    4: '-ум',\n    5: '-ум',\n    6: '-ум',\n    7: '-ум',\n    8: '-ум',\n    9: '-ум',\n    10: '-ум',\n    12: '-ум',\n    13: '-ум',\n    20: '-ум',\n    30: '-юм',\n    40: '-ум',\n    50: '-ум',\n    60: '-ум',\n    70: '-ум',\n    80: '-ум',\n    90: '-ум',\n    100: '-ум'\n  };\n  hooks.defineLocale('tg', {\n    months: {\n      format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split('_'),\n      standalone: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_')\n    },\n    monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n    weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),\n    weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n    weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Имрӯз соати] LT',\n      nextDay: '[Фардо соати] LT',\n      lastDay: '[Дирӯз соати] LT',\n      nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',\n      lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'баъди %s',\n      past: '%s пеш',\n      s: 'якчанд сония',\n      m: 'як дақиқа',\n      mm: '%d дақиқа',\n      h: 'як соат',\n      hh: '%d соат',\n      d: 'як рӯз',\n      dd: '%d рӯз',\n      M: 'як моҳ',\n      MM: '%d моҳ',\n      y: 'як сол',\n      yy: '%d сол'\n    },\n    meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'шаб') {\n        return hour < 4 ? hour : hour + 12;\n      } else if (meridiem === 'субҳ') {\n        return hour;\n      } else if (meridiem === 'рӯз') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === 'бегоҳ') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'шаб';\n      } else if (hour < 11) {\n        return 'субҳ';\n      } else if (hour < 16) {\n        return 'рӯз';\n      } else if (hour < 19) {\n        return 'бегоҳ';\n      } else {\n        return 'шаб';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n    ordinal: function (number) {\n      var a = number % 10,\n          b = number >= 100 ? 100 : null;\n      return number + (suffixes$3[number] || suffixes$3[a] || suffixes$3[b]);\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 1th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('th', {\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'),\n    // yes, three characters difference\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY เวลา H:mm',\n      LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    isPM: function (input) {\n      return input === 'หลังเที่ยง';\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'ก่อนเที่ยง';\n      } else {\n        return 'หลังเที่ยง';\n      }\n    },\n    calendar: {\n      sameDay: '[วันนี้ เวลา] LT',\n      nextDay: '[พรุ่งนี้ เวลา] LT',\n      nextWeek: 'dddd[หน้า เวลา] LT',\n      lastDay: '[เมื่อวานนี้ เวลา] LT',\n      lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'อีก %s',\n      past: '%sที่แล้ว',\n      s: 'ไม่กี่วินาที',\n      ss: '%d วินาที',\n      m: '1 นาที',\n      mm: '%d นาที',\n      h: '1 ชั่วโมง',\n      hh: '%d ชั่วโมง',\n      d: '1 วัน',\n      dd: '%d วัน',\n      w: '1 สัปดาห์',\n      ww: '%d สัปดาห์',\n      M: '1 เดือน',\n      MM: '%d เดือน',\n      y: '1 ปี',\n      yy: '%d ปี'\n    }\n  }); //! moment.js locale configuration\n\n  var suffixes$4 = {\n    1: \"'inji\",\n    5: \"'inji\",\n    8: \"'inji\",\n    70: \"'inji\",\n    80: \"'inji\",\n    2: \"'nji\",\n    7: \"'nji\",\n    20: \"'nji\",\n    50: \"'nji\",\n    3: \"'ünji\",\n    4: \"'ünji\",\n    100: \"'ünji\",\n    6: \"'njy\",\n    9: \"'unjy\",\n    10: \"'unjy\",\n    30: \"'unjy\",\n    60: \"'ynjy\",\n    90: \"'ynjy\"\n  };\n  hooks.defineLocale('tk', {\n    months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split('_'),\n    monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),\n    weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split('_'),\n    weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),\n    weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[bugün sagat] LT',\n      nextDay: '[ertir sagat] LT',\n      nextWeek: '[indiki] dddd [sagat] LT',\n      lastDay: '[düýn] LT',\n      lastWeek: '[geçen] dddd [sagat] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s soň',\n      past: '%s öň',\n      s: 'birnäçe sekunt',\n      m: 'bir minut',\n      mm: '%d minut',\n      h: 'bir sagat',\n      hh: '%d sagat',\n      d: 'bir gün',\n      dd: '%d gün',\n      M: 'bir aý',\n      MM: '%d aý',\n      y: 'bir ýyl',\n      yy: '%d ýyl'\n    },\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'Do':\n        case 'DD':\n          return number;\n\n        default:\n          if (number === 0) {\n            // special case for zero\n            return number + \"'unjy\";\n          }\n\n          var a = number % 10,\n              b = number % 100 - a,\n              c = number >= 100 ? 100 : null;\n          return number + (suffixes$4[a] || suffixes$4[b] || suffixes$4[c]);\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('tl-ph', {\n    months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n    monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n    weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n    weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n    weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'MM/D/YYYY',\n      LL: 'MMMM D, YYYY',\n      LLL: 'MMMM D, YYYY HH:mm',\n      LLLL: 'dddd, MMMM DD, YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: 'LT [ngayong araw]',\n      nextDay: '[Bukas ng] LT',\n      nextWeek: 'LT [sa susunod na] dddd',\n      lastDay: 'LT [kahapon]',\n      lastWeek: 'LT [noong nakaraang] dddd',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'sa loob ng %s',\n      past: '%s ang nakalipas',\n      s: 'ilang segundo',\n      ss: '%d segundo',\n      m: 'isang minuto',\n      mm: '%d minuto',\n      h: 'isang oras',\n      hh: '%d oras',\n      d: 'isang araw',\n      dd: '%d araw',\n      M: 'isang buwan',\n      MM: '%d buwan',\n      y: 'isang taon',\n      yy: '%d taon'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal: function (number) {\n      return number;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n  function translateFuture(output) {\n    var time = output;\n    time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'leS' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'waQ' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'nem' : time + ' pIq';\n    return time;\n  }\n\n  function translatePast(output) {\n    var time = output;\n    time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'Hu’' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'wen' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'ben' : time + ' ret';\n    return time;\n  }\n\n  function translate$a(number, withoutSuffix, string, isFuture) {\n    var numberNoun = numberAsNoun(number);\n\n    switch (string) {\n      case 'ss':\n        return numberNoun + ' lup';\n\n      case 'mm':\n        return numberNoun + ' tup';\n\n      case 'hh':\n        return numberNoun + ' rep';\n\n      case 'dd':\n        return numberNoun + ' jaj';\n\n      case 'MM':\n        return numberNoun + ' jar';\n\n      case 'yy':\n        return numberNoun + ' DIS';\n    }\n  }\n\n  function numberAsNoun(number) {\n    var hundred = Math.floor(number % 1000 / 100),\n        ten = Math.floor(number % 100 / 10),\n        one = number % 10,\n        word = '';\n\n    if (hundred > 0) {\n      word += numbersNouns[hundred] + 'vatlh';\n    }\n\n    if (ten > 0) {\n      word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n    }\n\n    if (one > 0) {\n      word += (word !== '' ? ' ' : '') + numbersNouns[one];\n    }\n\n    return word === '' ? 'pagh' : word;\n  }\n\n  hooks.defineLocale('tlh', {\n    months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n    monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[DaHjaj] LT',\n      nextDay: '[wa’leS] LT',\n      nextWeek: 'LLL',\n      lastDay: '[wa’Hu’] LT',\n      lastWeek: 'LLL',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: translateFuture,\n      past: translatePast,\n      s: 'puS lup',\n      ss: translate$a,\n      m: 'wa’ tup',\n      mm: translate$a,\n      h: 'wa’ rep',\n      hh: translate$a,\n      d: 'wa’ jaj',\n      dd: translate$a,\n      M: 'wa’ jar',\n      MM: translate$a,\n      y: 'wa’ DIS',\n      yy: translate$a\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var suffixes$5 = {\n    1: \"'inci\",\n    5: \"'inci\",\n    8: \"'inci\",\n    70: \"'inci\",\n    80: \"'inci\",\n    2: \"'nci\",\n    7: \"'nci\",\n    20: \"'nci\",\n    50: \"'nci\",\n    3: \"'üncü\",\n    4: \"'üncü\",\n    100: \"'üncü\",\n    6: \"'ncı\",\n    9: \"'uncu\",\n    10: \"'uncu\",\n    30: \"'uncu\",\n    60: \"'ıncı\",\n    90: \"'ıncı\"\n  };\n  hooks.defineLocale('tr', {\n    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n    weekdaysShort: 'Paz_Pzt_Sal_Çar_Per_Cum_Cmt'.split('_'),\n    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 12) {\n        return isLower ? 'öö' : 'ÖÖ';\n      } else {\n        return isLower ? 'ös' : 'ÖS';\n      }\n    },\n    meridiemParse: /öö|ÖÖ|ös|ÖS/,\n    isPM: function (input) {\n      return input === 'ös' || input === 'ÖS';\n    },\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[bugün saat] LT',\n      nextDay: '[yarın saat] LT',\n      nextWeek: '[gelecek] dddd [saat] LT',\n      lastDay: '[dün] LT',\n      lastWeek: '[geçen] dddd [saat] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s sonra',\n      past: '%s önce',\n      s: 'birkaç saniye',\n      ss: '%d saniye',\n      m: 'bir dakika',\n      mm: '%d dakika',\n      h: 'bir saat',\n      hh: '%d saat',\n      d: 'bir gün',\n      dd: '%d gün',\n      w: 'bir hafta',\n      ww: '%d hafta',\n      M: 'bir ay',\n      MM: '%d ay',\n      y: 'bir yıl',\n      yy: '%d yıl'\n    },\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'Do':\n        case 'DD':\n          return number;\n\n        default:\n          if (number === 0) {\n            // special case for zero\n            return number + \"'ıncı\";\n          }\n\n          var a = number % 10,\n              b = number % 100 - a,\n              c = number >= 100 ? 100 : null;\n          return number + (suffixes$5[a] || suffixes$5[b] || suffixes$5[c]);\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n  // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n  // This is currently too difficult (maybe even impossible) to add.\n\n  hooks.defineLocale('tzl', {\n    months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n    monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n    weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n    weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n    weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n    longDateFormat: {\n      LT: 'HH.mm',\n      LTS: 'HH.mm.ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM [dallas] YYYY',\n      LLL: 'D. MMMM [dallas] YYYY HH.mm',\n      LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n    },\n    meridiemParse: /d\\'o|d\\'a/i,\n    isPM: function (input) {\n      return \"d'o\" === input.toLowerCase();\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours > 11) {\n        return isLower ? \"d'o\" : \"D'O\";\n      } else {\n        return isLower ? \"d'a\" : \"D'A\";\n      }\n    },\n    calendar: {\n      sameDay: '[oxhi à] LT',\n      nextDay: '[demà à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[ieiri à] LT',\n      lastWeek: '[sür el] dddd [lasteu à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'osprei %s',\n      past: 'ja%s',\n      s: processRelativeTime$8,\n      ss: processRelativeTime$8,\n      m: processRelativeTime$8,\n      mm: processRelativeTime$8,\n      h: processRelativeTime$8,\n      hh: processRelativeTime$8,\n      d: processRelativeTime$8,\n      dd: processRelativeTime$8,\n      M: processRelativeTime$8,\n      MM: processRelativeTime$8,\n      y: processRelativeTime$8,\n      yy: processRelativeTime$8\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n\n  function processRelativeTime$8(number, withoutSuffix, key, isFuture) {\n    var format = {\n      s: ['viensas secunds', \"'iensas secunds\"],\n      ss: [number + ' secunds', '' + number + ' secunds'],\n      m: [\"'n míut\", \"'iens míut\"],\n      mm: [number + ' míuts', '' + number + ' míuts'],\n      h: [\"'n þora\", \"'iensa þora\"],\n      hh: [number + ' þoras', '' + number + ' þoras'],\n      d: [\"'n ziua\", \"'iensa ziua\"],\n      dd: [number + ' ziuas', '' + number + ' ziuas'],\n      M: [\"'n mes\", \"'iens mes\"],\n      MM: [number + ' mesen', '' + number + ' mesen'],\n      y: [\"'n ar\", \"'iens ar\"],\n      yy: [number + ' ars', '' + number + ' ars']\n    };\n    return isFuture ? format[key][0] : withoutSuffix ? format[key][0] : format[key][1];\n  } //! moment.js locale configuration\n\n\n  hooks.defineLocale('tzm-latn', {\n    months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n    monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n    weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n    weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n    weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[asdkh g] LT',\n      nextDay: '[aska g] LT',\n      nextWeek: 'dddd [g] LT',\n      lastDay: '[assant g] LT',\n      lastWeek: 'dddd [g] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dadkh s yan %s',\n      past: 'yan %s',\n      s: 'imik',\n      ss: '%d imik',\n      m: 'minuḍ',\n      mm: '%d minuḍ',\n      h: 'saɛa',\n      hh: '%d tassaɛin',\n      d: 'ass',\n      dd: '%d ossan',\n      M: 'ayowr',\n      MM: '%d iyyirn',\n      y: 'asgas',\n      yy: '%d isgasn'\n    },\n    week: {\n      dow: 6,\n      // Saturday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('tzm', {\n    months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n    monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n    weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n    weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n    weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n      nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n      nextWeek: 'dddd [ⴴ] LT',\n      lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n      lastWeek: 'dddd [ⴴ] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n      past: 'ⵢⴰⵏ %s',\n      s: 'ⵉⵎⵉⴽ',\n      ss: '%d ⵉⵎⵉⴽ',\n      m: 'ⵎⵉⵏⵓⴺ',\n      mm: '%d ⵎⵉⵏⵓⴺ',\n      h: 'ⵙⴰⵄⴰ',\n      hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n      d: 'ⴰⵙⵙ',\n      dd: '%d oⵙⵙⴰⵏ',\n      M: 'ⴰⵢoⵓⵔ',\n      MM: '%d ⵉⵢⵢⵉⵔⵏ',\n      y: 'ⴰⵙⴳⴰⵙ',\n      yy: '%d ⵉⵙⴳⴰⵙⵏ'\n    },\n    week: {\n      dow: 6,\n      // Saturday is the first day of the week.\n      doy: 12 // The week that contains Jan 12th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('ug-cn', {\n    months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'),\n    monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'),\n    weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split('_'),\n    weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n    weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY-MM-DD',\n      LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n      LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n      LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'\n    },\n    meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === 'يېرىم كېچە' || meridiem === 'سەھەر' || meridiem === 'چۈشتىن بۇرۇن') {\n        return hour;\n      } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n        return hour + 12;\n      } else {\n        return hour >= 11 ? hour : hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      var hm = hour * 100 + minute;\n\n      if (hm < 600) {\n        return 'يېرىم كېچە';\n      } else if (hm < 900) {\n        return 'سەھەر';\n      } else if (hm < 1130) {\n        return 'چۈشتىن بۇرۇن';\n      } else if (hm < 1230) {\n        return 'چۈش';\n      } else if (hm < 1800) {\n        return 'چۈشتىن كېيىن';\n      } else {\n        return 'كەچ';\n      }\n    },\n    calendar: {\n      sameDay: '[بۈگۈن سائەت] LT',\n      nextDay: '[ئەتە سائەت] LT',\n      nextWeek: '[كېلەركى] dddd [سائەت] LT',\n      lastDay: '[تۆنۈگۈن] LT',\n      lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s كېيىن',\n      past: '%s بۇرۇن',\n      s: 'نەچچە سېكونت',\n      ss: '%d سېكونت',\n      m: 'بىر مىنۇت',\n      mm: '%d مىنۇت',\n      h: 'بىر سائەت',\n      hh: '%d سائەت',\n      d: 'بىر كۈن',\n      dd: '%d كۈن',\n      M: 'بىر ئاي',\n      MM: '%d ئاي',\n      y: 'بىر يىل',\n      yy: '%d يىل'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '-كۈنى';\n\n        case 'w':\n        case 'W':\n          return number + '-ھەپتە';\n\n        default:\n          return number;\n      }\n    },\n    preparse: function (string) {\n      return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/,/g, '،');\n    },\n    week: {\n      // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  function plural$6(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n  }\n\n  function relativeTimeWithPlural$4(number, withoutSuffix, key) {\n    var format = {\n      ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n      mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n      hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n      dd: 'день_дні_днів',\n      MM: 'місяць_місяці_місяців',\n      yy: 'рік_роки_років'\n    };\n\n    if (key === 'm') {\n      return withoutSuffix ? 'хвилина' : 'хвилину';\n    } else if (key === 'h') {\n      return withoutSuffix ? 'година' : 'годину';\n    } else {\n      return number + ' ' + plural$6(format[key], +number);\n    }\n  }\n\n  function weekdaysCaseReplace(m, format) {\n    var weekdays = {\n      nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n      accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n      genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    },\n        nounCase;\n\n    if (m === true) {\n      return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n    }\n\n    if (!m) {\n      return weekdays['nominative'];\n    }\n\n    nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n    return weekdays[nounCase][m.day()];\n  }\n\n  function processHoursFunction(str) {\n    return function () {\n      return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n    };\n  }\n\n  hooks.defineLocale('uk', {\n    months: {\n      format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n      standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY р.',\n      LLL: 'D MMMM YYYY р., HH:mm',\n      LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar: {\n      sameDay: processHoursFunction('[Сьогодні '),\n      nextDay: processHoursFunction('[Завтра '),\n      lastDay: processHoursFunction('[Вчора '),\n      nextWeek: processHoursFunction('[У] dddd ['),\n      lastWeek: function () {\n        switch (this.day()) {\n          case 0:\n          case 3:\n          case 5:\n          case 6:\n            return processHoursFunction('[Минулої] dddd [').call(this);\n\n          case 1:\n          case 2:\n          case 4:\n            return processHoursFunction('[Минулого] dddd [').call(this);\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'за %s',\n      past: '%s тому',\n      s: 'декілька секунд',\n      ss: relativeTimeWithPlural$4,\n      m: relativeTimeWithPlural$4,\n      mm: relativeTimeWithPlural$4,\n      h: 'годину',\n      hh: relativeTimeWithPlural$4,\n      d: 'день',\n      dd: relativeTimeWithPlural$4,\n      M: 'місяць',\n      MM: relativeTimeWithPlural$4,\n      y: 'рік',\n      yy: relativeTimeWithPlural$4\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM: function (input) {\n      return /^(дня|вечора)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 4) {\n        return 'ночі';\n      } else if (hour < 12) {\n        return 'ранку';\n      } else if (hour < 17) {\n        return 'дня';\n      } else {\n        return 'вечора';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'M':\n        case 'd':\n        case 'DDD':\n        case 'w':\n        case 'W':\n          return number + '-й';\n\n        case 'D':\n          return number + '-го';\n\n        default:\n          return number;\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  var months$b = ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],\n      days$2 = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];\n  hooks.defineLocale('ur', {\n    months: months$b,\n    monthsShort: months$b,\n    weekdays: days$2,\n    weekdaysShort: days$2,\n    weekdaysMin: days$2,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd، D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /صبح|شام/,\n    isPM: function (input) {\n      return 'شام' === input;\n    },\n    meridiem: function (hour, minute, isLower) {\n      if (hour < 12) {\n        return 'صبح';\n      }\n\n      return 'شام';\n    },\n    calendar: {\n      sameDay: '[آج بوقت] LT',\n      nextDay: '[کل بوقت] LT',\n      nextWeek: 'dddd [بوقت] LT',\n      lastDay: '[گذشتہ روز بوقت] LT',\n      lastWeek: '[گذشتہ] dddd [بوقت] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s بعد',\n      past: '%s قبل',\n      s: 'چند سیکنڈ',\n      ss: '%d سیکنڈ',\n      m: 'ایک منٹ',\n      mm: '%d منٹ',\n      h: 'ایک گھنٹہ',\n      hh: '%d گھنٹے',\n      d: 'ایک دن',\n      dd: '%d دن',\n      M: 'ایک ماہ',\n      MM: '%d ماہ',\n      y: 'ایک سال',\n      yy: '%d سال'\n    },\n    preparse: function (string) {\n      return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n      return string.replace(/,/g, '،');\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('uz-latn', {\n    months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n    monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n    weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n    weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n    weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'D MMMM YYYY, dddd HH:mm'\n    },\n    calendar: {\n      sameDay: '[Bugun soat] LT [da]',\n      nextDay: '[Ertaga] LT [da]',\n      nextWeek: 'dddd [kuni soat] LT [da]',\n      lastDay: '[Kecha soat] LT [da]',\n      lastWeek: \"[O'tgan] dddd [kuni soat] LT [da]\",\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'Yaqin %s ichida',\n      past: 'Bir necha %s oldin',\n      s: 'soniya',\n      ss: '%d soniya',\n      m: 'bir daqiqa',\n      mm: '%d daqiqa',\n      h: 'bir soat',\n      hh: '%d soat',\n      d: 'bir kun',\n      dd: '%d kun',\n      M: 'bir oy',\n      MM: '%d oy',\n      y: 'bir yil',\n      yy: '%d yil'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('uz', {\n    months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n    monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n    weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n    weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n    weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'D MMMM YYYY, dddd HH:mm'\n    },\n    calendar: {\n      sameDay: '[Бугун соат] LT [да]',\n      nextDay: '[Эртага] LT [да]',\n      nextWeek: 'dddd [куни соат] LT [да]',\n      lastDay: '[Кеча соат] LT [да]',\n      lastWeek: '[Утган] dddd [куни соат] LT [да]',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'Якин %s ичида',\n      past: 'Бир неча %s олдин',\n      s: 'фурсат',\n      ss: '%d фурсат',\n      m: 'бир дакика',\n      mm: '%d дакика',\n      h: 'бир соат',\n      hh: '%d соат',\n      d: 'бир кун',\n      dd: '%d кун',\n      M: 'бир ой',\n      MM: '%d ой',\n      y: 'бир йил',\n      yy: '%d йил'\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('vi', {\n    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n    monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysParseExact: true,\n    meridiemParse: /sa|ch/i,\n    isPM: function (input) {\n      return /^ch$/i.test(input);\n    },\n    meridiem: function (hours, minutes, isLower) {\n      if (hours < 12) {\n        return isLower ? 'sa' : 'SA';\n      } else {\n        return isLower ? 'ch' : 'CH';\n      }\n    },\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM [năm] YYYY',\n      LLL: 'D MMMM [năm] YYYY HH:mm',\n      LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n      l: 'DD/M/YYYY',\n      ll: 'D MMM YYYY',\n      lll: 'D MMM YYYY HH:mm',\n      llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Hôm nay lúc] LT',\n      nextDay: '[Ngày mai lúc] LT',\n      nextWeek: 'dddd [tuần tới lúc] LT',\n      lastDay: '[Hôm qua lúc] LT',\n      lastWeek: 'dddd [tuần trước lúc] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: '%s tới',\n      past: '%s trước',\n      s: 'vài giây',\n      ss: '%d giây',\n      m: 'một phút',\n      mm: '%d phút',\n      h: 'một giờ',\n      hh: '%d giờ',\n      d: 'một ngày',\n      dd: '%d ngày',\n      w: 'một tuần',\n      ww: '%d tuần',\n      M: 'một tháng',\n      MM: '%d tháng',\n      y: 'một năm',\n      yy: '%d năm'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal: function (number) {\n      return number;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('x-pseudo', {\n    months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n    monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n    weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n    weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[T~ódá~ý át] LT',\n      nextDay: '[T~ómó~rró~w át] LT',\n      nextWeek: 'dddd [át] LT',\n      lastDay: '[Ý~ést~érdá~ý át] LT',\n      lastWeek: '[L~ást] dddd [át] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'í~ñ %s',\n      past: '%s á~gó',\n      s: 'á ~féw ~sécó~ñds',\n      ss: '%d s~écóñ~ds',\n      m: 'á ~míñ~úté',\n      mm: '%d m~íñú~tés',\n      h: 'á~ñ hó~úr',\n      hh: '%d h~óúrs',\n      d: 'á ~dáý',\n      dd: '%d d~áýs',\n      M: 'á ~móñ~th',\n      MM: '%d m~óñt~hs',\n      y: 'á ~ýéár',\n      yy: '%d ý~éárs'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function (number) {\n      var b = number % 10,\n          output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('yo', {\n    months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n    monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n    weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n    weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n    weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n    longDateFormat: {\n      LT: 'h:mm A',\n      LTS: 'h:mm:ss A',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY h:mm A',\n      LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n      sameDay: '[Ònì ni] LT',\n      nextDay: '[Ọ̀la ni] LT',\n      nextWeek: \"dddd [Ọsẹ̀ tón'bọ] [ni] LT\",\n      lastDay: '[Àna ni] LT',\n      lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'ní %s',\n      past: '%s kọjá',\n      s: 'ìsẹjú aayá die',\n      ss: 'aayá %d',\n      m: 'ìsẹjú kan',\n      mm: 'ìsẹjú %d',\n      h: 'wákati kan',\n      hh: 'wákati %d',\n      d: 'ọjọ́ kan',\n      dd: 'ọjọ́ %d',\n      M: 'osù kan',\n      MM: 'osù %d',\n      y: 'ọdún kan',\n      yy: 'ọdún %d'\n    },\n    dayOfMonthOrdinalParse: /ọjọ́\\s\\d{1,2}/,\n    ordinal: 'ọjọ́ %d',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('zh-cn', {\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY/MM/DD',\n      LL: 'YYYY年M月D日',\n      LLL: 'YYYY年M月D日Ah点mm分',\n      LLLL: 'YYYY年M月D日ddddAh点mm分',\n      l: 'YYYY/M/D',\n      ll: 'YYYY年M月D日',\n      lll: 'YYYY年M月D日 HH:mm',\n      llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n        return hour;\n      } else if (meridiem === '下午' || meridiem === '晚上') {\n        return hour + 12;\n      } else {\n        // '中午'\n        return hour >= 11 ? hour : hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      var hm = hour * 100 + minute;\n\n      if (hm < 600) {\n        return '凌晨';\n      } else if (hm < 900) {\n        return '早上';\n      } else if (hm < 1130) {\n        return '上午';\n      } else if (hm < 1230) {\n        return '中午';\n      } else if (hm < 1800) {\n        return '下午';\n      } else {\n        return '晚上';\n      }\n    },\n    calendar: {\n      sameDay: '[今天]LT',\n      nextDay: '[明天]LT',\n      nextWeek: function (now) {\n        if (now.week() !== this.week()) {\n          return '[下]dddLT';\n        } else {\n          return '[本]dddLT';\n        }\n      },\n      lastDay: '[昨天]LT',\n      lastWeek: function (now) {\n        if (this.week() !== now.week()) {\n          return '[上]dddLT';\n        } else {\n          return '[本]dddLT';\n        }\n      },\n      sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '日';\n\n        case 'M':\n          return number + '月';\n\n        case 'w':\n        case 'W':\n          return number + '周';\n\n        default:\n          return number;\n      }\n    },\n    relativeTime: {\n      future: '%s后',\n      past: '%s前',\n      s: '几秒',\n      ss: '%d 秒',\n      m: '1 分钟',\n      mm: '%d 分钟',\n      h: '1 小时',\n      hh: '%d 小时',\n      d: '1 天',\n      dd: '%d 天',\n      w: '1 周',\n      ww: '%d 周',\n      M: '1 个月',\n      MM: '%d 个月',\n      y: '1 年',\n      yy: '%d 年'\n    },\n    week: {\n      // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('zh-hk', {\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY/MM/DD',\n      LL: 'YYYY年M月D日',\n      LLL: 'YYYY年M月D日 HH:mm',\n      LLLL: 'YYYY年M月D日dddd HH:mm',\n      l: 'YYYY/M/D',\n      ll: 'YYYY年M月D日',\n      lll: 'YYYY年M月D日 HH:mm',\n      llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n        return hour;\n      } else if (meridiem === '中午') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === '下午' || meridiem === '晚上') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      var hm = hour * 100 + minute;\n\n      if (hm < 600) {\n        return '凌晨';\n      } else if (hm < 900) {\n        return '早上';\n      } else if (hm < 1200) {\n        return '上午';\n      } else if (hm === 1200) {\n        return '中午';\n      } else if (hm < 1800) {\n        return '下午';\n      } else {\n        return '晚上';\n      }\n    },\n    calendar: {\n      sameDay: '[今天]LT',\n      nextDay: '[明天]LT',\n      nextWeek: '[下]ddddLT',\n      lastDay: '[昨天]LT',\n      lastWeek: '[上]ddddLT',\n      sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '日';\n\n        case 'M':\n          return number + '月';\n\n        case 'w':\n        case 'W':\n          return number + '週';\n\n        default:\n          return number;\n      }\n    },\n    relativeTime: {\n      future: '%s後',\n      past: '%s前',\n      s: '幾秒',\n      ss: '%d 秒',\n      m: '1 分鐘',\n      mm: '%d 分鐘',\n      h: '1 小時',\n      hh: '%d 小時',\n      d: '1 天',\n      dd: '%d 天',\n      M: '1 個月',\n      MM: '%d 個月',\n      y: '1 年',\n      yy: '%d 年'\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('zh-mo', {\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'YYYY年M月D日',\n      LLL: 'YYYY年M月D日 HH:mm',\n      LLLL: 'YYYY年M月D日dddd HH:mm',\n      l: 'D/M/YYYY',\n      ll: 'YYYY年M月D日',\n      lll: 'YYYY年M月D日 HH:mm',\n      llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n        return hour;\n      } else if (meridiem === '中午') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === '下午' || meridiem === '晚上') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      var hm = hour * 100 + minute;\n\n      if (hm < 600) {\n        return '凌晨';\n      } else if (hm < 900) {\n        return '早上';\n      } else if (hm < 1130) {\n        return '上午';\n      } else if (hm < 1230) {\n        return '中午';\n      } else if (hm < 1800) {\n        return '下午';\n      } else {\n        return '晚上';\n      }\n    },\n    calendar: {\n      sameDay: '[今天] LT',\n      nextDay: '[明天] LT',\n      nextWeek: '[下]dddd LT',\n      lastDay: '[昨天] LT',\n      lastWeek: '[上]dddd LT',\n      sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '日';\n\n        case 'M':\n          return number + '月';\n\n        case 'w':\n        case 'W':\n          return number + '週';\n\n        default:\n          return number;\n      }\n    },\n    relativeTime: {\n      future: '%s內',\n      past: '%s前',\n      s: '幾秒',\n      ss: '%d 秒',\n      m: '1 分鐘',\n      mm: '%d 分鐘',\n      h: '1 小時',\n      hh: '%d 小時',\n      d: '1 天',\n      dd: '%d 天',\n      M: '1 個月',\n      MM: '%d 個月',\n      y: '1 年',\n      yy: '%d 年'\n    }\n  }); //! moment.js locale configuration\n\n  hooks.defineLocale('zh-tw', {\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'YYYY/MM/DD',\n      LL: 'YYYY年M月D日',\n      LLL: 'YYYY年M月D日 HH:mm',\n      LLLL: 'YYYY年M月D日dddd HH:mm',\n      l: 'YYYY/M/D',\n      ll: 'YYYY年M月D日',\n      lll: 'YYYY年M月D日 HH:mm',\n      llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n      if (hour === 12) {\n        hour = 0;\n      }\n\n      if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n        return hour;\n      } else if (meridiem === '中午') {\n        return hour >= 11 ? hour : hour + 12;\n      } else if (meridiem === '下午' || meridiem === '晚上') {\n        return hour + 12;\n      }\n    },\n    meridiem: function (hour, minute, isLower) {\n      var hm = hour * 100 + minute;\n\n      if (hm < 600) {\n        return '凌晨';\n      } else if (hm < 900) {\n        return '早上';\n      } else if (hm < 1130) {\n        return '上午';\n      } else if (hm < 1230) {\n        return '中午';\n      } else if (hm < 1800) {\n        return '下午';\n      } else {\n        return '晚上';\n      }\n    },\n    calendar: {\n      sameDay: '[今天] LT',\n      nextDay: '[明天] LT',\n      nextWeek: '[下]dddd LT',\n      lastDay: '[昨天] LT',\n      lastWeek: '[上]dddd LT',\n      sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n    ordinal: function (number, period) {\n      switch (period) {\n        case 'd':\n        case 'D':\n        case 'DDD':\n          return number + '日';\n\n        case 'M':\n          return number + '月';\n\n        case 'w':\n        case 'W':\n          return number + '週';\n\n        default:\n          return number;\n      }\n    },\n    relativeTime: {\n      future: '%s後',\n      past: '%s前',\n      s: '幾秒',\n      ss: '%d 秒',\n      m: '1 分鐘',\n      mm: '%d 分鐘',\n      h: '1 小時',\n      hh: '%d 小時',\n      d: '1 天',\n      dd: '%d 天',\n      M: '1 個月',\n      MM: '%d 個月',\n      y: '1 年',\n      yy: '%d 年'\n    }\n  });\n  hooks.locale('en');\n  return hooks;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","moment","hookCallback","hooks","apply","arguments","setHookCallback","callback","isArray","input","Array","Object","prototype","toString","call","isObject","hasOwnProp","a","b","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","isNumber","isDate","Date","map","arr","fn","res","i","arrLen","push","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","some","fun","t","len","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","undefined","isFrozen","createInvalid","NaN","momentProperties","updateInProgress","copyConfig","to","from","prop","val","momentPropertiesLen","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","args","arg","key","argLen","slice","join","Error","stack","deprecations","deprecateSimple","name","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","keys","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","calendar","mom","now","output","_calendar","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","func","localeData","removeFormattingTokens","match","replace","makeFormatFunction","array","formatMoment","invalidDate","expandFormat","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","_longDateFormat","formatUpper","toUpperCase","tok","defaultInvalidDate","_invalidDate","defaultOrdinal","defaultDayOfMonthOrdinalParse","_ordinal","defaultRelativeTime","future","past","s","ss","mm","h","hh","d","dd","w","ww","M","MM","y","yy","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","priorities","addUnitPriority","priority","getPrioritizedUnits","unitsObj","u","sort","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","stringGet","stringSet","prioritized","prioritizedLen","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","tokenLen","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","mod","n","x","indexOf","o","modMonth","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","localeMonths","_months","isFormat","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","min","getSetMonth","getDaysInMonth","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","parseTwoDigitYear","parseInt","daysInYear","getSetYear","getIsLeapYear","createDate","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","dayOfYear","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","defaultLocaleWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","parseWeekday","parseIsoWeekday","shiftWeekdays","ws","concat","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","minPieces","minp","shortp","longp","hFormat","hours","kFormat","minutes","seconds","lowercase","matchMeridiem","_meridiemParse","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","localeIsPM","charAt","defaultLocaleMeridiemParse","getSetHour","localeMeridiem","isLower","baseConfig","dayOfMonthOrdinalParse","meridiemParse","locales","localeFamilies","globalLocale","commonPrefix","arr1","arr2","minl","normalizeLocale","chooseLocale","names","j","next","loadLocale","isLocaleNameSane","oldLocale","aliasedRequire","_abbr","require","getSetGlobalLocale","e","values","data","getLocale","defineLocale","abbr","parentLocale","forEach","updateLocale","tmpLocale","listLocales","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","exec","allowTime","dateFormat","timeFormat","tzFormat","isoDatesLen","isoTimesLen","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","setUTCMinutes","getUTCMinutes","configFromString","createFromInputFallback","_useUTC","defaults","c","currentDateArray","nowValue","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","gg","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","erasConvertYear","hour","isPm","meridiemHour","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","configfLen","score","configFromObject","dayOrDate","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","prototypeMin","other","prototypeMax","pickBy","moments","ordering","isDurationValid","unitHasDecimal","orderLen","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","toArray","isLocal","isUtcOffset","isUtc","aspNetRegex","isoRegex","ret","diffRes","parseIso","momentsDifference","invalid","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","isString","String","isMomentInput","isNumberOrStringArray","isMomentInputObject","objectTest","propertyTest","properties","property","propertyLen","arrayTest","dataTypeTest","filter","item","isCalendarSpec","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","wholeMonthDiff","anchor","anchor2","adjust","defaultFormat","defaultFormatUtc","toISOString","keepOffset","toDate","inspect","zone","prefix","datetime","suffix","inputString","postformat","humanize","fromNow","toNow","newLocaleData","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","startOfDate","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","matchEraAbbr","matchEraName","matchEraNarrow","erasParse","matchEraYearOrdinal","_eraYearOrdinalRegex","eraYearOrdinalParse","localeEras","eras","_eras","since","until","Infinity","localeErasParse","eraName","narrow","localeErasConvertYear","dir","getEraName","getEraNarrow","getEraAbbr","getEraYear","erasNameRegex","computeErasParse","_erasNameRegex","_erasRegex","erasAbbrRegex","_erasAbbrRegex","erasNarrowRegex","_erasNarrowRegex","abbrPieces","namePieces","narrowPieces","isoWeekYear","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","getISOWeeksInYear","getISOWeeksInISOWeekYear","getWeeksInYear","weekInfo","getWeeksInWeekYear","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfMonth","getSetDayOfYear","getSetMinute","getSetSecond","getSetMillisecond","parseMs","getZoneAbbr","getZoneName","proto","Symbol","for","eraNarrow","eraAbbr","eraYear","isoWeeks","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","parseZone","isDST","zoneAbbr","zoneName","dates","isDSTShifted","createUnix","createInZone","preParsePostFormat","proto$1","firstDayOfYear","firstDayOfWeek","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","langData","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","clone$1","get$2","makeGetter","thresholds","substituteTimeAgo","relativeTime$1","posNegDuration","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","argWithSuffix","argThresholds","withSuffix","th","assign","abs$1","toISOString$1","total","totalSign","ymSign","daysSign","hmsSign","toFixed","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","pluralForm","plurals","pluralize","f","str","months$1","weekdaysParseExact","symbolMap","pluralForm$1","plurals$1","pluralize$1","months$2","symbolMap$1","numberMap","symbolMap$2","numberMap$1","pluralForm$2","plurals$2","pluralize$2","months$3","suffixes","plural","word","num","forms","relativeTimeWithPlural","standalone","lastDigit","last2Digits","symbolMap$3","numberMap$2","symbolMap$4","numberMap$3","symbolMap$5","numberMap$4","monthsParseExact","relativeTimeWithMutation","mutation","specialMutationForYears","lastNumber","text","softMutation","mutationTable","substring","monthsRegex$1","monthsStrictRegex","monthsShortStrictRegex","fullWeekdaysParse","shortWeekdaysParse","minWeekdaysParse","longMonthsParse","shortMonthsParse","translate","ll","lll","llll","months$4","monthsParse$1","monthsRegex$2","plural$1","translate$1","affix","lookup","processRelativeTime","processRelativeTime$1","processRelativeTime$2","months$5","isFunction$1","monthsNominativeEl","monthsGenitiveEl","momentToFormat","_monthsNominativeEl","_monthsGenitiveEl","calendarEl","_calendarEl","monthsShortDot","monthsShort$1","monthsParse$2","monthsRegex$3","monthsShortDot$1","monthsShort$2","monthsParse$3","monthsRegex$4","monthsShortDot$2","monthsShort$3","monthsParse$4","monthsRegex$5","monthsShortDot$3","monthsShort$4","monthsParse$5","monthsRegex$6","processRelativeTime$3","symbolMap$6","numberMap$5","numbersPast","numbersFuture","translate$2","verbalNumber","monthsStrictRegex$1","monthsShortStrictRegex$1","monthsRegex$7","monthsParse$6","monthsShortWithDots","monthsShortWithoutDots","months$6","monthsShort$5","weekdays$1","months$7","monthsShort$6","weekdays$2","weekdaysShort$1","weekdaysMin$1","processRelativeTime$4","processRelativeTime$5","symbolMap$7","numberMap$6","symbolMap$8","numberMap$7","monthsParse$7","translate$3","weekEndings","translate$4","plural$2","translate$5","eraYearOrdinalRegex","$0","$1","$2","suffixes$1","symbolMap$9","numberMap$8","symbolMap$a","numberMap$9","isUpper","symbolMap$b","numberMap$a","months$8","suffixes$2","processRelativeTime$6","processFutureTime","eifelerRegelAppliesToNumber","processPastTime","firstDigit","translateSeconds","translateSingular","special","translate$6","units$1","format$1","relativeTimeWithPlural$1","relativeTimeWithSingular","relativeSeconds","translator","words","correctGrammaticalCase","wordKey","lastWeekDays","translate$7","symbolMap$c","numberMap$b","relativeTimeMr","symbolMap$d","numberMap$c","symbolMap$e","numberMap$d","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$8","monthsRegex$8","monthsShortWithDots$2","monthsShortWithoutDots$2","monthsParse$9","monthsRegex$9","symbolMap$f","numberMap$e","monthsNominative","monthsSubjective","monthsParse$a","plural$3","translate$8","relativeTimeWithPlural$2","plural$4","relativeTimeWithPlural$3","monthsParse$b","months$9","days$1","months$a","monthsShort$7","plural$5","translate$9","processRelativeTime$7","translator$1","translator$2","symbolMap$g","numberMap$f","suffixes$3","suffixes$4","numbersNouns","translateFuture","translatePast","translate$a","numberNoun","numberAsNoun","hundred","ten","one","suffixes$5","processRelativeTime$8","plural$6","relativeTimeWithPlural$4","weekdaysCaseReplace","nominative","accusative","genitive","nounCase","processHoursFunction","months$b","days$2"],"sources":["E:/Mern login/client/node_modules/moment/min/moment-with-locales.js"],"sourcesContent":[";(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('af', {\n        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(\n            '_'\n        ),\n        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM: function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Vandag om] LT',\n            nextDay: '[Môre om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[Gister om] LT',\n            lastWeek: '[Laas] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'oor %s',\n            past: '%s gelede',\n            s: \"'n paar sekondes\",\n            ss: '%d sekondes',\n            m: \"'n minuut\",\n            mm: '%d minute',\n            h: \"'n uur\",\n            hh: '%d ure',\n            d: \"'n dag\",\n            dd: '%d dae',\n            M: \"'n maand\",\n            MM: '%d maande',\n            y: \"'n jaar\",\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            ); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week: {\n            dow: 1, // Maandag is die eerste dag van die week.\n            doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var pluralForm = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                ? 1\n                : n === 2\n                ? 2\n                : n % 100 >= 3 && n % 100 <= 10\n                ? 3\n                : n % 100 >= 11\n                ? 4\n                : 5;\n        },\n        plurals = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm(number),\n                    str = plurals[u][pluralForm(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$1 = [\n            'جانفي',\n            'فيفري',\n            'مارس',\n            'أفريل',\n            'ماي',\n            'جوان',\n            'جويلية',\n            'أوت',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar-dz', {\n        months: months$1,\n        monthsShort: months$1,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize('s'),\n            ss: pluralize('s'),\n            m: pluralize('m'),\n            mm: pluralize('m'),\n            h: pluralize('h'),\n            hh: pluralize('h'),\n            d: pluralize('d'),\n            dd: pluralize('d'),\n            M: pluralize('M'),\n            MM: pluralize('M'),\n            y: pluralize('y'),\n            yy: pluralize('y'),\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-kw', {\n        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap = {\n            1: '1',\n            2: '2',\n            3: '3',\n            4: '4',\n            5: '5',\n            6: '6',\n            7: '7',\n            8: '8',\n            9: '9',\n            0: '0',\n        },\n        pluralForm$1 = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                ? 1\n                : n === 2\n                ? 2\n                : n % 100 >= 3 && n % 100 <= 10\n                ? 3\n                : n % 100 >= 11\n                ? 4\n                : 5;\n        },\n        plurals$1 = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize$1 = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm$1(number),\n                    str = plurals$1[u][pluralForm$1(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$2 = [\n            'يناير',\n            'فبراير',\n            'مارس',\n            'أبريل',\n            'مايو',\n            'يونيو',\n            'يوليو',\n            'أغسطس',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar-ly', {\n        months: months$2,\n        monthsShort: months$2,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize$1('s'),\n            ss: pluralize$1('s'),\n            m: pluralize$1('m'),\n            mm: pluralize$1('m'),\n            h: pluralize$1('h'),\n            hh: pluralize$1('h'),\n            d: pluralize$1('d'),\n            dd: pluralize$1('d'),\n            M: pluralize$1('M'),\n            MM: pluralize$1('M'),\n            y: pluralize$1('y'),\n            yy: pluralize$1('y'),\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-ma', {\n        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$1 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        };\n\n    hooks.defineLocale('ar-sa', {\n        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$1[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$2 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$1 = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        },\n        pluralForm$2 = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                ? 1\n                : n === 2\n                ? 2\n                : n % 100 >= 3 && n % 100 <= 10\n                ? 3\n                : n % 100 >= 11\n                ? 4\n                : 5;\n        },\n        plurals$2 = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize$2 = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm$2(number),\n                    str = plurals$2[u][pluralForm$2(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$3 = [\n            'يناير',\n            'فبراير',\n            'مارس',\n            'أبريل',\n            'مايو',\n            'يونيو',\n            'يوليو',\n            'أغسطس',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar', {\n        months: months$3,\n        monthsShort: months$3,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize$2('s'),\n            ss: pluralize$2('s'),\n            m: pluralize$2('m'),\n            mm: pluralize$2('m'),\n            h: pluralize$2('h'),\n            hh: pluralize$2('h'),\n            d: pluralize$2('d'),\n            dd: pluralize$2('d'),\n            M: pluralize$2('M'),\n            MM: pluralize$2('M'),\n            y: pluralize$2('y'),\n            yy: pluralize$2('y'),\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$1[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$2[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı',\n    };\n\n    hooks.defineLocale('az', {\n        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays:\n            'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(\n                '_'\n            ),\n        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün saat] LT',\n            nextDay: '[sabah saat] LT',\n            nextWeek: '[gələn həftə] dddd [saat] LT',\n            lastDay: '[dünən] LT',\n            lastWeek: '[keçən həftə] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s sonra',\n            past: '%s əvvəl',\n            s: 'bir neçə saniyə',\n            ss: '%d saniyə',\n            m: 'bir dəqiqə',\n            mm: '%d dəqiqə',\n            h: 'bir saat',\n            hh: '%d saat',\n            d: 'bir gün',\n            dd: '%d gün',\n            M: 'bir ay',\n            MM: '%d ay',\n            y: 'bir il',\n            yy: '%d il',\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM: function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal: function (number) {\n            if (number === 0) {\n                // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = (number % 100) - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            dd: 'дзень_дні_дзён',\n            MM: 'месяц_месяцы_месяцаў',\n            yy: 'год_гады_гадоў',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    hooks.defineLocale('be', {\n        months: {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(\n                '_'\n            ),\n            standalone:\n                'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(\n                    '_'\n                ),\n        },\n        monthsShort:\n            'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays: {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(\n                '_'\n            ),\n            standalone:\n                'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(\n                    '_'\n                ),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/,\n        },\n        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY г.',\n            LLL: 'D MMMM YYYY г., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY г., HH:mm',\n        },\n        calendar: {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'праз %s',\n            past: '%s таму',\n            s: 'некалькі секунд',\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: relativeTimeWithPlural,\n            hh: relativeTimeWithPlural,\n            d: 'дзень',\n            dd: relativeTimeWithPlural,\n            M: 'месяц',\n            MM: relativeTimeWithPlural,\n            y: 'год',\n            yy: relativeTimeWithPlural,\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM: function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) &&\n                        number % 100 !== 12 &&\n                        number % 100 !== 13\n                        ? number + '-і'\n                        : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bg', {\n        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(\n            '_'\n        ),\n        monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(\n            '_'\n        ),\n        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Днес в] LT',\n            nextDay: '[Утре в] LT',\n            nextWeek: 'dddd [в] LT',\n            lastDay: '[Вчера в] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Миналата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Миналия] dddd [в] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'след %s',\n            past: 'преди %s',\n            s: 'няколко секунди',\n            ss: '%d секунди',\n            m: 'минута',\n            mm: '%d минути',\n            h: 'час',\n            hh: '%d часа',\n            d: 'ден',\n            dd: '%d дена',\n            w: 'седмица',\n            ww: '%d седмици',\n            M: 'месец',\n            MM: '%d месеца',\n            y: 'година',\n            yy: '%d години',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal: function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bm', {\n        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(\n            '_'\n        ),\n        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'MMMM [tile] D [san] YYYY',\n            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Bi lɛrɛ] LT',\n            nextDay: '[Sini lɛrɛ] LT',\n            nextWeek: 'dddd [don lɛrɛ] LT',\n            lastDay: '[Kunu lɛrɛ] LT',\n            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s kɔnɔ',\n            past: 'a bɛ %s bɔ',\n            s: 'sanga dama dama',\n            ss: 'sekondi %d',\n            m: 'miniti kelen',\n            mm: 'miniti %d',\n            h: 'lɛrɛ kelen',\n            hh: 'lɛrɛ %d',\n            d: 'tile kelen',\n            dd: 'tile %d',\n            M: 'kalo kelen',\n            MM: 'kalo %d',\n            y: 'san kelen',\n            yy: 'san %d',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$3 = {\n            1: '১',\n            2: '২',\n            3: '৩',\n            4: '৪',\n            5: '৫',\n            6: '৬',\n            7: '৭',\n            8: '৮',\n            9: '৯',\n            0: '০',\n        },\n        numberMap$2 = {\n            '১': '1',\n            '২': '2',\n            '৩': '3',\n            '৪': '4',\n            '৫': '5',\n            '৬': '6',\n            '৭': '7',\n            '৮': '8',\n            '৯': '9',\n            '০': '0',\n        };\n\n    hooks.defineLocale('bn-bd', {\n        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\n            '_'\n        ),\n        monthsShort:\n            'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(\n                '_'\n            ),\n        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(\n            '_'\n        ),\n        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm সময়',\n            LTS: 'A h:mm:ss সময়',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm সময়',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n        },\n        calendar: {\n            sameDay: '[আজ] LT',\n            nextDay: '[আগামীকাল] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[গতকাল] LT',\n            lastWeek: '[গত] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s পরে',\n            past: '%s আগে',\n            s: 'কয়েক সেকেন্ড',\n            ss: '%d সেকেন্ড',\n            m: 'এক মিনিট',\n            mm: '%d মিনিট',\n            h: 'এক ঘন্টা',\n            hh: '%d ঘন্টা',\n            d: 'এক দিন',\n            dd: '%d দিন',\n            M: 'এক মাস',\n            MM: '%d মাস',\n            y: 'এক বছর',\n            yy: '%d বছর',\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$2[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$3[match];\n            });\n        },\n\n        meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'রাত') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ভোর') {\n                return hour;\n            } else if (meridiem === 'সকাল') {\n                return hour;\n            } else if (meridiem === 'দুপুর') {\n                return hour >= 3 ? hour : hour + 12;\n            } else if (meridiem === 'বিকাল') {\n                return hour + 12;\n            } else if (meridiem === 'সন্ধ্যা') {\n                return hour + 12;\n            }\n        },\n\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 6) {\n                return 'ভোর';\n            } else if (hour < 12) {\n                return 'সকাল';\n            } else if (hour < 15) {\n                return 'দুপুর';\n            } else if (hour < 18) {\n                return 'বিকাল';\n            } else if (hour < 20) {\n                return 'সন্ধ্যা';\n            } else {\n                return 'রাত';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$4 = {\n            1: '১',\n            2: '২',\n            3: '৩',\n            4: '৪',\n            5: '৫',\n            6: '৬',\n            7: '৭',\n            8: '৮',\n            9: '৯',\n            0: '০',\n        },\n        numberMap$3 = {\n            '১': '1',\n            '২': '2',\n            '৩': '3',\n            '৪': '4',\n            '৫': '5',\n            '৬': '6',\n            '৭': '7',\n            '৮': '8',\n            '৯': '9',\n            '০': '0',\n        };\n\n    hooks.defineLocale('bn', {\n        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\n            '_'\n        ),\n        monthsShort:\n            'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(\n                '_'\n            ),\n        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(\n            '_'\n        ),\n        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm সময়',\n            LTS: 'A h:mm:ss সময়',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm সময়',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n        },\n        calendar: {\n            sameDay: '[আজ] LT',\n            nextDay: '[আগামীকাল] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[গতকাল] LT',\n            lastWeek: '[গত] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s পরে',\n            past: '%s আগে',\n            s: 'কয়েক সেকেন্ড',\n            ss: '%d সেকেন্ড',\n            m: 'এক মিনিট',\n            mm: '%d মিনিট',\n            h: 'এক ঘন্টা',\n            hh: '%d ঘন্টা',\n            d: 'এক দিন',\n            dd: '%d দিন',\n            M: 'এক মাস',\n            MM: '%d মাস',\n            y: 'এক বছর',\n            yy: '%d বছর',\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$3[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$4[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'রাত' && hour >= 4) ||\n                (meridiem === 'দুপুর' && hour < 5) ||\n                meridiem === 'বিকাল'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$5 = {\n            1: '༡',\n            2: '༢',\n            3: '༣',\n            4: '༤',\n            5: '༥',\n            6: '༦',\n            7: '༧',\n            8: '༨',\n            9: '༩',\n            0: '༠',\n        },\n        numberMap$4 = {\n            '༡': '1',\n            '༢': '2',\n            '༣': '3',\n            '༤': '4',\n            '༥': '5',\n            '༦': '6',\n            '༧': '7',\n            '༨': '8',\n            '༩': '9',\n            '༠': '0',\n        };\n\n    hooks.defineLocale('bo', {\n        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(\n                '_'\n            ),\n        monthsShortRegex: /^(ཟླ་\\d{1,2})/,\n        monthsParseExact: true,\n        weekdays:\n            'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(\n                '_'\n            ),\n        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(\n            '_'\n        ),\n        weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[དི་རིང] LT',\n            nextDay: '[སང་ཉིན] LT',\n            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay: '[ཁ་སང] LT',\n            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ལ་',\n            past: '%s སྔན་ལ',\n            s: 'ལམ་སང',\n            ss: '%d སྐར་ཆ།',\n            m: 'སྐར་མ་གཅིག',\n            mm: '%d སྐར་མ',\n            h: 'ཆུ་ཚོད་གཅིག',\n            hh: '%d ཆུ་ཚོད',\n            d: 'ཉིན་གཅིག',\n            dd: '%d ཉིན་',\n            M: 'ཟླ་བ་གཅིག',\n            MM: '%d ཟླ་བ',\n            y: 'ལོ་གཅིག',\n            yy: '%d ལོ',\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap$4[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$5[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'མཚན་མོ' && hour >= 4) ||\n                (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                meridiem === 'དགོང་དག'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            mm: 'munutenn',\n            MM: 'miz',\n            dd: 'devezh',\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            m: 'v',\n            b: 'v',\n            d: 'z',\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var monthsParse = [\n            /^gen/i,\n            /^c[ʼ\\']hwe/i,\n            /^meu/i,\n            /^ebr/i,\n            /^mae/i,\n            /^(mez|eve)/i,\n            /^gou/i,\n            /^eos/i,\n            /^gwe/i,\n            /^her/i,\n            /^du/i,\n            /^ker/i,\n        ],\n        monthsRegex$1 =\n            /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n        monthsStrictRegex =\n            /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,\n        monthsShortStrictRegex =\n            /^(gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n        fullWeekdaysParse = [\n            /^sul/i,\n            /^lun/i,\n            /^meurzh/i,\n            /^merc[ʼ\\']her/i,\n            /^yaou/i,\n            /^gwener/i,\n            /^sadorn/i,\n        ],\n        shortWeekdaysParse = [\n            /^Sul/i,\n            /^Lun/i,\n            /^Meu/i,\n            /^Mer/i,\n            /^Yao/i,\n            /^Gwe/i,\n            /^Sad/i,\n        ],\n        minWeekdaysParse = [\n            /^Su/i,\n            /^Lu/i,\n            /^Me([^r]|$)/i,\n            /^Mer/i,\n            /^Ya/i,\n            /^Gw/i,\n            /^Sa/i,\n        ];\n\n    hooks.defineLocale('br', {\n        months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(\n            '_'\n        ),\n        monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParse: minWeekdaysParse,\n        fullWeekdaysParse: fullWeekdaysParse,\n        shortWeekdaysParse: shortWeekdaysParse,\n        minWeekdaysParse: minWeekdaysParse,\n\n        monthsRegex: monthsRegex$1,\n        monthsShortRegex: monthsRegex$1,\n        monthsStrictRegex: monthsStrictRegex,\n        monthsShortStrictRegex: monthsShortStrictRegex,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [a viz] MMMM YYYY',\n            LLL: 'D [a viz] MMMM YYYY HH:mm',\n            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hiziv da] LT',\n            nextDay: '[Warcʼhoazh da] LT',\n            nextWeek: 'dddd [da] LT',\n            lastDay: '[Decʼh da] LT',\n            lastWeek: 'dddd [paset da] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'a-benn %s',\n            past: '%s ʼzo',\n            s: 'un nebeud segondennoù',\n            ss: '%d eilenn',\n            m: 'ur vunutenn',\n            mm: relativeTimeWithMutation,\n            h: 'un eur',\n            hh: '%d eur',\n            d: 'un devezh',\n            dd: relativeTimeWithMutation,\n            M: 'ur miz',\n            MM: relativeTimeWithMutation,\n            y: 'ur bloaz',\n            yy: specialMutationForYears,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'añ' : 'vet';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn\n        isPM: function (token) {\n            return token === 'g.m.';\n        },\n        meridiem: function (hour, minute, isLower) {\n            return hour < 12 ? 'a.m.' : 'g.m.';\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('bs', {\n        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate,\n            m: translate,\n            mm: translate,\n            h: translate,\n            hh: translate,\n            d: 'dan',\n            dd: translate,\n            M: 'mjesec',\n            MM: translate,\n            y: 'godinu',\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ca', {\n        months: {\n            standalone:\n                'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(\n                    '_'\n                ),\n            format: \"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre\".split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\s)+MMMM/,\n        },\n        monthsShort:\n            'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(\n                '_'\n            ),\n        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [de] YYYY',\n            ll: 'D MMM YYYY',\n            LLL: 'D MMMM [de] YYYY [a les] H:mm',\n            lll: 'D MMM YYYY, H:mm',\n            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll: 'ddd D MMM YYYY, H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            nextDay: function () {\n                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            lastDay: function () {\n                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [passat a ' +\n                    (this.hours() !== 1 ? 'les' : 'la') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: \"d'aquí %s\",\n            past: 'fa %s',\n            s: 'uns segons',\n            ss: '%d segons',\n            m: 'un minut',\n            mm: '%d minuts',\n            h: 'una hora',\n            hh: '%d hores',\n            d: 'un dia',\n            dd: '%d dies',\n            M: 'un mes',\n            MM: '%d mesos',\n            y: 'un any',\n            yy: '%d anys',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal: function (number, period) {\n            var output =\n                number === 1\n                    ? 'r'\n                    : number === 2\n                    ? 'n'\n                    : number === 3\n                    ? 'r'\n                    : number === 4\n                    ? 't'\n                    : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$4 = {\n            format: 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(\n                '_'\n            ),\n            standalone:\n                'ledna_února_března_dubna_května_června_července_srpna_září_října_listopadu_prosince'.split(\n                    '_'\n                ),\n        },\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n        monthsParse$1 = [\n            /^led/i,\n            /^úno/i,\n            /^bře/i,\n            /^dub/i,\n            /^kvě/i,\n            /^(čvn|červen$|června)/i,\n            /^(čvc|červenec|července)/i,\n            /^srp/i,\n            /^zář/i,\n            /^říj/i,\n            /^lis/i,\n            /^pro/i,\n        ],\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsRegex$2 =\n            /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural$1(n) {\n        return n > 1 && n < 5 && ~~(n / 10) !== 1;\n    }\n    function translate$1(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n        }\n    }\n\n    hooks.defineLocale('cs', {\n        months: months$4,\n        monthsShort: monthsShort,\n        monthsRegex: monthsRegex$2,\n        monthsShortRegex: monthsRegex$2,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex:\n            /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex:\n            /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse: monthsParse$1,\n        longMonthsParse: monthsParse$1,\n        shortMonthsParse: monthsParse$1,\n        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n            l: 'D. M. YYYY',\n        },\n        calendar: {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'před %s',\n            s: translate$1,\n            ss: translate$1,\n            m: translate$1,\n            mm: translate$1,\n            h: translate$1,\n            hh: translate$1,\n            d: translate$1,\n            dd: translate$1,\n            M: translate$1,\n            MM: translate$1,\n            y: translate$1,\n            yy: translate$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cv', {\n        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(\n            '_'\n        ),\n        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays:\n            'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(\n                '_'\n            ),\n        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n        },\n        calendar: {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (output) {\n                var affix = /сехет$/i.exec(output)\n                    ? 'рен'\n                    : /ҫул$/i.exec(output)\n                    ? 'тан'\n                    : 'ран';\n                return output + affix;\n            },\n            past: '%s каялла',\n            s: 'пӗр-ик ҫеккунт',\n            ss: '%d ҫеккунт',\n            m: 'пӗр минут',\n            mm: '%d минут',\n            h: 'пӗр сехет',\n            hh: '%d сехет',\n            d: 'пӗр кун',\n            dd: '%d кун',\n            M: 'пӗр уйӑх',\n            MM: '%d уйӑх',\n            y: 'пӗр ҫул',\n            yy: '%d ҫул',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal: '%d-мӗш',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(\n            '_'\n        ),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(\n            '_'\n        ),\n        weekdays:\n            'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(\n                '_'\n            ),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact: true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '',\n                    'af',\n                    'il',\n                    'ydd',\n                    'ydd',\n                    'ed',\n                    'ed',\n                    'ed',\n                    'fed',\n                    'fed',\n                    'fed', // 1af to 10fed\n                    'eg',\n                    'fed',\n                    'eg',\n                    'eg',\n                    'fed',\n                    'eg',\n                    'eg',\n                    'fed',\n                    'eg',\n                    'fed', // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('da', {\n        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'på dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[i] dddd[s kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s siden',\n            s: 'få sekunder',\n            ss: '%d sekunder',\n            m: 'et minut',\n            mm: '%d minutter',\n            h: 'en time',\n            hh: '%d timer',\n            d: 'en dag',\n            dd: '%d dage',\n            M: 'en måned',\n            MM: '%d måneder',\n            y: 'et år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-at', {\n        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime,\n            mm: '%d Minuten',\n            h: processRelativeTime,\n            hh: '%d Stunden',\n            d: processRelativeTime,\n            dd: processRelativeTime,\n            w: processRelativeTime,\n            ww: '%d Wochen',\n            M: processRelativeTime,\n            MM: processRelativeTime,\n            y: processRelativeTime,\n            yy: processRelativeTime,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$1(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-ch', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$1,\n            mm: '%d Minuten',\n            h: processRelativeTime$1,\n            hh: '%d Stunden',\n            d: processRelativeTime$1,\n            dd: processRelativeTime$1,\n            w: processRelativeTime$1,\n            ww: '%d Wochen',\n            M: processRelativeTime$1,\n            MM: processRelativeTime$1,\n            y: processRelativeTime$1,\n            yy: processRelativeTime$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$2,\n            mm: '%d Minuten',\n            h: processRelativeTime$2,\n            hh: '%d Stunden',\n            d: processRelativeTime$2,\n            dd: processRelativeTime$2,\n            w: processRelativeTime$2,\n            ww: '%d Wochen',\n            M: processRelativeTime$2,\n            MM: processRelativeTime$2,\n            y: processRelativeTime$2,\n            yy: processRelativeTime$2,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$5 = [\n            'ޖެނުއަރީ',\n            'ފެބްރުއަރީ',\n            'މާރިޗު',\n            'އޭޕްރީލު',\n            'މޭ',\n            'ޖޫން',\n            'ޖުލައި',\n            'އޯގަސްޓު',\n            'ސެޕްޓެމްބަރު',\n            'އޮކްޓޯބަރު',\n            'ނޮވެމްބަރު',\n            'ޑިސެމްބަރު',\n        ],\n        weekdays = [\n            'އާދިއްތަ',\n            'ހޯމަ',\n            'އަންގާރަ',\n            'ބުދަ',\n            'ބުރާސްފަތި',\n            'ހުކުރު',\n            'ހޮނިހިރު',\n        ];\n\n    hooks.defineLocale('dv', {\n        months: months$5,\n        monthsShort: months$5,\n        weekdays: weekdays,\n        weekdaysShort: weekdays,\n        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/M/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM: function (input) {\n            return 'މފ' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar: {\n            sameDay: '[މިއަދު] LT',\n            nextDay: '[މާދަމާ] LT',\n            nextWeek: 'dddd LT',\n            lastDay: '[އިއްޔެ] LT',\n            lastWeek: '[ފާއިތުވި] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ތެރޭގައި %s',\n            past: 'ކުރިން %s',\n            s: 'ސިކުންތުކޮޅެއް',\n            ss: 'd% ސިކުންތު',\n            m: 'މިނިޓެއް',\n            mm: 'މިނިޓު %d',\n            h: 'ގަޑިއިރެއް',\n            hh: 'ގަޑިއިރު %d',\n            d: 'ދުވަހެއް',\n            dd: 'ދުވަސް %d',\n            M: 'މަހެއް',\n            MM: 'މަސް %d',\n            y: 'އަހަރެއް',\n            yy: 'އަހަރު %d',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 7, // Sunday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function isFunction$1(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    hooks.defineLocale('el', {\n        monthsNominativeEl:\n            'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(\n                '_'\n            ),\n        monthsGenitiveEl:\n            'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(\n                '_'\n            ),\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (\n                typeof format === 'string' &&\n                /D/.test(format.substring(0, format.indexOf('MMMM')))\n            ) {\n                // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(\n            '_'\n        ),\n        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM: function (input) {\n            return (input + '').toLowerCase()[0] === 'μ';\n        },\n        meridiemParse: /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendarEl: {\n            sameDay: '[Σήμερα {}] LT',\n            nextDay: '[Αύριο {}] LT',\n            nextWeek: 'dddd [{}] LT',\n            lastDay: '[Χθες {}] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        calendar: function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction$1(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');\n        },\n        relativeTime: {\n            future: 'σε %s',\n            past: '%s πριν',\n            s: 'λίγα δευτερόλεπτα',\n            ss: '%d δευτερόλεπτα',\n            m: 'ένα λεπτό',\n            mm: '%d λεπτά',\n            h: 'μία ώρα',\n            hh: '%d ώρες',\n            d: 'μία μέρα',\n            dd: '%d μέρες',\n            M: 'ένας μήνας',\n            MM: '%d μήνες',\n            y: 'ένας χρόνος',\n            yy: '%d χρόνια',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-au', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ca', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'YYYY-MM-DD',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY h:mm A',\n            LLLL: 'dddd, MMMM D, YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-gb', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ie', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-il', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-in', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-nz', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-sg', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eo', {\n        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),\n        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: '[la] D[-an de] MMMM, YYYY',\n            LLL: '[la] D[-an de] MMMM, YYYY HH:mm',\n            LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',\n            llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar: {\n            sameDay: '[Hodiaŭ je] LT',\n            nextDay: '[Morgaŭ je] LT',\n            nextWeek: 'dddd[n je] LT',\n            lastDay: '[Hieraŭ je] LT',\n            lastWeek: '[pasintan] dddd[n je] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'post %s',\n            past: 'antaŭ %s',\n            s: 'kelkaj sekundoj',\n            ss: '%d sekundoj',\n            m: 'unu minuto',\n            mm: '%d minutoj',\n            h: 'unu horo',\n            hh: '%d horoj',\n            d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo\n            dd: '%d tagoj',\n            M: 'unu monato',\n            MM: '%d monatoj',\n            y: 'unu jaro',\n            yy: '%d jaroj',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal: '%da',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$1 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$2 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$3 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-do', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$1[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$3,\n        monthsShortRegex: monthsRegex$3,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$2,\n        longMonthsParse: monthsParse$2,\n        shortMonthsParse: monthsParse$2,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$1 =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$3 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$4 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-mx', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$2[m.month()];\n            } else {\n                return monthsShortDot$1[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$4,\n        monthsShortRegex: monthsRegex$4,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$3,\n        longMonthsParse: monthsParse$3,\n        shortMonthsParse: monthsParse$3,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha inválida',\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$2 =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$4 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$5 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-us', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$3[m.month()];\n            } else {\n                return monthsShortDot$2[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$5,\n        monthsShortRegex: monthsRegex$5,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$4,\n        longMonthsParse: monthsParse$4,\n        shortMonthsParse: monthsParse$4,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'MM/DD/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$3 =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$5 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$6 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$3;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$4[m.month()];\n            } else {\n                return monthsShortDot$3[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$6,\n        monthsShortRegex: monthsRegex$6,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$5,\n        longMonthsParse: monthsParse$5,\n        shortMonthsParse: monthsParse$5,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha inválida',\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$3(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            ss: [number + 'sekundi', number + 'sekundit'],\n            m: ['ühe minuti', 'üks minut'],\n            mm: [number + ' minuti', number + ' minutit'],\n            h: ['ühe tunni', 'tund aega', 'üks tund'],\n            hh: [number + ' tunni', number + ' tundi'],\n            d: ['ühe päeva', 'üks päev'],\n            M: ['kuu aja', 'kuu aega', 'üks kuu'],\n            MM: [number + ' kuu', number + ' kuud'],\n            y: ['ühe aasta', 'aasta', 'üks aasta'],\n            yy: [number + ' aasta', number + ' aastat'],\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('et', {\n        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(\n            '_'\n        ),\n        monthsShort:\n            'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays:\n            'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(\n                '_'\n            ),\n        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Täna,] LT',\n            nextDay: '[Homme,] LT',\n            nextWeek: '[Järgmine] dddd LT',\n            lastDay: '[Eile,] LT',\n            lastWeek: '[Eelmine] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s pärast',\n            past: '%s tagasi',\n            s: processRelativeTime$3,\n            ss: processRelativeTime$3,\n            m: processRelativeTime$3,\n            mm: processRelativeTime$3,\n            h: processRelativeTime$3,\n            hh: processRelativeTime$3,\n            d: processRelativeTime$3,\n            dd: '%d päeva',\n            M: processRelativeTime$3,\n            MM: processRelativeTime$3,\n            y: processRelativeTime$3,\n            yy: processRelativeTime$3,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eu', {\n        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(\n            '_'\n        ),\n        monthsShort:\n            'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(\n                '_'\n            ),\n        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY[ko] MMMM[ren] D[a]',\n            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l: 'YYYY-M-D',\n            ll: 'YYYY[ko] MMM D[a]',\n            lll: 'YYYY[ko] MMM D[a] HH:mm',\n            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',\n        },\n        calendar: {\n            sameDay: '[gaur] LT[etan]',\n            nextDay: '[bihar] LT[etan]',\n            nextWeek: 'dddd LT[etan]',\n            lastDay: '[atzo] LT[etan]',\n            lastWeek: '[aurreko] dddd LT[etan]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s barru',\n            past: 'duela %s',\n            s: 'segundo batzuk',\n            ss: '%d segundo',\n            m: 'minutu bat',\n            mm: '%d minutu',\n            h: 'ordu bat',\n            hh: '%d ordu',\n            d: 'egun bat',\n            dd: '%d egun',\n            M: 'hilabete bat',\n            MM: '%d hilabete',\n            y: 'urte bat',\n            yy: '%d urte',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$6 = {\n            1: '۱',\n            2: '۲',\n            3: '۳',\n            4: '۴',\n            5: '۵',\n            6: '۶',\n            7: '۷',\n            8: '۸',\n            9: '۹',\n            0: '۰',\n        },\n        numberMap$5 = {\n            '۱': '1',\n            '۲': '2',\n            '۳': '3',\n            '۴': '4',\n            '۵': '5',\n            '۶': '6',\n            '۷': '7',\n            '۸': '8',\n            '۹': '9',\n            '۰': '0',\n        };\n\n    hooks.defineLocale('fa', {\n        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n                '_'\n            ),\n        weekdays:\n            'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n                '_'\n            ),\n        weekdaysShort:\n            'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n                '_'\n            ),\n        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar: {\n            sameDay: '[امروز ساعت] LT',\n            nextDay: '[فردا ساعت] LT',\n            nextWeek: 'dddd [ساعت] LT',\n            lastDay: '[دیروز ساعت] LT',\n            lastWeek: 'dddd [پیش] [ساعت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'در %s',\n            past: '%s پیش',\n            s: 'چند ثانیه',\n            ss: '%d ثانیه',\n            m: 'یک دقیقه',\n            mm: '%d دقیقه',\n            h: 'یک ساعت',\n            hh: '%d ساعت',\n            d: 'یک روز',\n            dd: '%d روز',\n            M: 'یک ماه',\n            MM: '%d ماه',\n            y: 'یک سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[۰-۹]/g, function (match) {\n                    return numberMap$5[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$6[match];\n                })\n                .replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal: '%dم',\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var numbersPast =\n            'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(\n                ' '\n            ),\n        numbersFuture = [\n            'nolla',\n            'yhden',\n            'kahden',\n            'kolmen',\n            'neljän',\n            'viiden',\n            'kuuden',\n            numbersPast[7],\n            numbersPast[8],\n            numbersPast[9],\n        ];\n    function translate$2(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                result = isFuture ? 'sekunnin' : 'sekuntia';\n                break;\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10\n            ? isFuture\n                ? numbersFuture[number]\n                : numbersPast[number]\n            : number;\n    }\n\n    hooks.defineLocale('fi', {\n        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(\n            '_'\n        ),\n        monthsShort:\n            'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(\n                '_'\n            ),\n        weekdays:\n            'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(\n                '_'\n            ),\n        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM[ta] YYYY',\n            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l: 'D.M.YYYY',\n            ll: 'Do MMM YYYY',\n            lll: 'Do MMM YYYY, [klo] HH.mm',\n            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',\n        },\n        calendar: {\n            sameDay: '[tänään] [klo] LT',\n            nextDay: '[huomenna] [klo] LT',\n            nextWeek: 'dddd [klo] LT',\n            lastDay: '[eilen] [klo] LT',\n            lastWeek: '[viime] dddd[na] [klo] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s päästä',\n            past: '%s sitten',\n            s: translate$2,\n            ss: translate$2,\n            m: translate$2,\n            mm: translate$2,\n            h: translate$2,\n            hh: translate$2,\n            d: translate$2,\n            dd: translate$2,\n            M: translate$2,\n            MM: translate$2,\n            y: translate$2,\n            yy: translate$2,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fil', {\n        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(\n            '_'\n        ),\n        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'MM/D/YYYY',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY HH:mm',\n            LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'sa loob ng %s',\n            past: '%s ang nakalipas',\n            s: 'ilang segundo',\n            ss: '%d segundo',\n            m: 'isang minuto',\n            mm: '%d minuto',\n            h: 'isang oras',\n            hh: '%d oras',\n            d: 'isang araw',\n            dd: '%d araw',\n            M: 'isang buwan',\n            MM: '%d buwan',\n            y: 'isang taon',\n            yy: '%d taon',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fo', {\n        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays:\n            'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(\n                '_'\n            ),\n        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D. MMMM, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Í dag kl.] LT',\n            nextDay: '[Í morgin kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[Í gjár kl.] LT',\n            lastWeek: '[síðstu] dddd [kl] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'um %s',\n            past: '%s síðani',\n            s: 'fá sekund',\n            ss: '%d sekundir',\n            m: 'ein minuttur',\n            mm: '%d minuttir',\n            h: 'ein tími',\n            hh: '%d tímar',\n            d: 'ein dagur',\n            dd: '%d dagar',\n            M: 'ein mánaður',\n            MM: '%d mánaðir',\n            y: 'eitt ár',\n            yy: '%d ár',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ca', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort:\n            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ch', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort:\n            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsStrictRegex$1 =\n            /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n        monthsShortStrictRegex$1 =\n            /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?)/i,\n        monthsRegex$7 =\n            /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n        monthsParse$6 = [\n            /^janv/i,\n            /^févr/i,\n            /^mars/i,\n            /^avr/i,\n            /^mai/i,\n            /^juin/i,\n            /^juil/i,\n            /^août/i,\n            /^sept/i,\n            /^oct/i,\n            /^nov/i,\n            /^déc/i,\n        ];\n\n    hooks.defineLocale('fr', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort:\n            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n                '_'\n            ),\n        monthsRegex: monthsRegex$7,\n        monthsShortRegex: monthsRegex$7,\n        monthsStrictRegex: monthsStrictRegex$1,\n        monthsShortStrictRegex: monthsShortStrictRegex$1,\n        monthsParse: monthsParse$6,\n        longMonthsParse: monthsParse$6,\n        shortMonthsParse: monthsParse$6,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            w: 'une semaine',\n            ww: '%d semaines',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots =\n            'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots =\n            'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    hooks.defineLocale('fy', {\n        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact: true,\n        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(\n            '_'\n        ),\n        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'oer %s',\n            past: '%s lyn',\n            s: 'in pear sekonden',\n            ss: '%d sekonden',\n            m: 'ien minút',\n            mm: '%d minuten',\n            h: 'ien oere',\n            hh: '%d oeren',\n            d: 'ien dei',\n            dd: '%d dagen',\n            M: 'ien moanne',\n            MM: '%d moannen',\n            y: 'ien jier',\n            yy: '%d jierren',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$6 = [\n            'Eanáir',\n            'Feabhra',\n            'Márta',\n            'Aibreán',\n            'Bealtaine',\n            'Meitheamh',\n            'Iúil',\n            'Lúnasa',\n            'Meán Fómhair',\n            'Deireadh Fómhair',\n            'Samhain',\n            'Nollaig',\n        ],\n        monthsShort$5 = [\n            'Ean',\n            'Feabh',\n            'Márt',\n            'Aib',\n            'Beal',\n            'Meith',\n            'Iúil',\n            'Lún',\n            'M.F.',\n            'D.F.',\n            'Samh',\n            'Noll',\n        ],\n        weekdays$1 = [\n            'Dé Domhnaigh',\n            'Dé Luain',\n            'Dé Máirt',\n            'Dé Céadaoin',\n            'Déardaoin',\n            'Dé hAoine',\n            'Dé Sathairn',\n        ],\n        weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],\n        weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];\n\n    hooks.defineLocale('ga', {\n        months: months$6,\n        monthsShort: monthsShort$5,\n        monthsParseExact: true,\n        weekdays: weekdays$1,\n        weekdaysShort: weekdaysShort,\n        weekdaysMin: weekdaysMin,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Inniu ag] LT',\n            nextDay: '[Amárach ag] LT',\n            nextWeek: 'dddd [ag] LT',\n            lastDay: '[Inné ag] LT',\n            lastWeek: 'dddd [seo caite] [ag] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'i %s',\n            past: '%s ó shin',\n            s: 'cúpla soicind',\n            ss: '%d soicind',\n            m: 'nóiméad',\n            mm: '%d nóiméad',\n            h: 'uair an chloig',\n            hh: '%d uair an chloig',\n            d: 'lá',\n            dd: '%d lá',\n            M: 'mí',\n            MM: '%d míonna',\n            y: 'bliain',\n            yy: '%d bliain',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$7 = [\n            'Am Faoilleach',\n            'An Gearran',\n            'Am Màrt',\n            'An Giblean',\n            'An Cèitean',\n            'An t-Ògmhios',\n            'An t-Iuchar',\n            'An Lùnastal',\n            'An t-Sultain',\n            'An Dàmhair',\n            'An t-Samhain',\n            'An Dùbhlachd',\n        ],\n        monthsShort$6 = [\n            'Faoi',\n            'Gear',\n            'Màrt',\n            'Gibl',\n            'Cèit',\n            'Ògmh',\n            'Iuch',\n            'Lùn',\n            'Sult',\n            'Dàmh',\n            'Samh',\n            'Dùbh',\n        ],\n        weekdays$2 = [\n            'Didòmhnaich',\n            'Diluain',\n            'Dimàirt',\n            'Diciadain',\n            'Diardaoin',\n            'Dihaoine',\n            'Disathairne',\n        ],\n        weekdaysShort$1 = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],\n        weekdaysMin$1 = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    hooks.defineLocale('gd', {\n        months: months$7,\n        monthsShort: monthsShort$6,\n        monthsParseExact: true,\n        weekdays: weekdays$2,\n        weekdaysShort: weekdaysShort$1,\n        weekdaysMin: weekdaysMin$1,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[An-diugh aig] LT',\n            nextDay: '[A-màireach aig] LT',\n            nextWeek: 'dddd [aig] LT',\n            lastDay: '[An-dè aig] LT',\n            lastWeek: 'dddd [seo chaidh] [aig] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ann an %s',\n            past: 'bho chionn %s',\n            s: 'beagan diogan',\n            ss: '%d diogan',\n            m: 'mionaid',\n            mm: '%d mionaidean',\n            h: 'uair',\n            hh: '%d uairean',\n            d: 'latha',\n            dd: '%d latha',\n            M: 'mìos',\n            MM: '%d mìosan',\n            y: 'bliadhna',\n            yy: '%d bliadhna',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('gl', {\n        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(\n            '_'\n        ),\n        monthsShort:\n            'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';\n            },\n            lastDay: function () {\n                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past: 'hai %s',\n            s: 'uns segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'unha hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$4(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],\n            ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],\n            m: ['एका मिणटान', 'एक मिनूट'],\n            mm: [number + ' मिणटांनी', number + ' मिणटां'],\n            h: ['एका वरान', 'एक वर'],\n            hh: [number + ' वरांनी', number + ' वरां'],\n            d: ['एका दिसान', 'एक दीस'],\n            dd: [number + ' दिसांनी', number + ' दीस'],\n            M: ['एका म्हयन्यान', 'एक म्हयनो'],\n            MM: [number + ' म्हयन्यानी', number + ' म्हयने'],\n            y: ['एका वर्सान', 'एक वर्स'],\n            yy: [number + ' वर्सांनी', number + ' वर्सां'],\n        };\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-deva', {\n        months: {\n            standalone:\n                'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\n                    '_'\n                ),\n            format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(\n                '_'\n            ),\n            isFormat: /MMMM(\\s)+D[oD]?/,\n        },\n        monthsShort:\n            'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),\n        weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),\n        weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'A h:mm [वाजतां]',\n            LTS: 'A h:mm:ss [वाजतां]',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY A h:mm [वाजतां]',\n            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',\n            llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',\n        },\n        calendar: {\n            sameDay: '[आयज] LT',\n            nextDay: '[फाल्यां] LT',\n            nextWeek: '[फुडलो] dddd[,] LT',\n            lastDay: '[काल] LT',\n            lastWeek: '[फाटलो] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s',\n            past: '%s आदीं',\n            s: processRelativeTime$4,\n            ss: processRelativeTime$4,\n            m: processRelativeTime$4,\n            mm: processRelativeTime$4,\n            h: processRelativeTime$4,\n            hh: processRelativeTime$4,\n            d: processRelativeTime$4,\n            dd: processRelativeTime$4,\n            M: processRelativeTime$4,\n            MM: processRelativeTime$4,\n            y: processRelativeTime$4,\n            yy: processRelativeTime$4,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(वेर)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // the ordinal 'वेर' only applies to day of the month\n                case 'D':\n                    return number + 'वेर';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week\n            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n        },\n        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राती') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळीं') {\n                return hour;\n            } else if (meridiem === 'दनपारां') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'सांजे') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'राती';\n            } else if (hour < 12) {\n                return 'सकाळीं';\n            } else if (hour < 16) {\n                return 'दनपारां';\n            } else if (hour < 20) {\n                return 'सांजे';\n            } else {\n                return 'राती';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$5(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['thoddea sekondamni', 'thodde sekond'],\n            ss: [number + ' sekondamni', number + ' sekond'],\n            m: ['eka mintan', 'ek minut'],\n            mm: [number + ' mintamni', number + ' mintam'],\n            h: ['eka voran', 'ek vor'],\n            hh: [number + ' voramni', number + ' voram'],\n            d: ['eka disan', 'ek dis'],\n            dd: [number + ' disamni', number + ' dis'],\n            M: ['eka mhoinean', 'ek mhoino'],\n            MM: [number + ' mhoineamni', number + ' mhoine'],\n            y: ['eka vorsan', 'ek voros'],\n            yy: [number + ' vorsamni', number + ' vorsam'],\n        };\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-latn', {\n        months: {\n            standalone:\n                'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(\n                    '_'\n                ),\n            format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(\n                '_'\n            ),\n            isFormat: /MMMM(\\s)+D[oD]?/,\n        },\n        monthsShort:\n            'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'A h:mm [vazta]',\n            LTS: 'A h:mm:ss [vazta]',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY A h:mm [vazta]',\n            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]',\n        },\n        calendar: {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Fuddlo] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fattlo] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s',\n            past: '%s adim',\n            s: processRelativeTime$5,\n            ss: processRelativeTime$5,\n            m: processRelativeTime$5,\n            mm: processRelativeTime$5,\n            h: processRelativeTime$5,\n            hh: processRelativeTime$5,\n            d: processRelativeTime$5,\n            dd: processRelativeTime$5,\n            M: processRelativeTime$5,\n            MM: processRelativeTime$5,\n            y: processRelativeTime$5,\n            yy: processRelativeTime$5,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week\n            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n        },\n        meridiemParse: /rati|sokallim|donparam|sanje/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokallim') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokallim';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$7 = {\n            1: '૧',\n            2: '૨',\n            3: '૩',\n            4: '૪',\n            5: '૫',\n            6: '૬',\n            7: '૭',\n            8: '૮',\n            9: '૯',\n            0: '૦',\n        },\n        numberMap$6 = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0',\n        };\n\n    hooks.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(\n            '_'\n        ),\n        monthsShort:\n            'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(\n            '_'\n        ),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પહેલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ',\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap$6[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$7[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('he', {\n        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(\n            '_'\n        ),\n        monthsShort:\n            'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [ב]MMMM YYYY',\n            LLL: 'D [ב]MMMM YYYY HH:mm',\n            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n            l: 'D/M/YYYY',\n            ll: 'D MMM YYYY',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd, D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[היום ב־]LT',\n            nextDay: '[מחר ב־]LT',\n            nextWeek: 'dddd [בשעה] LT',\n            lastDay: '[אתמול ב־]LT',\n            lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'בעוד %s',\n            past: 'לפני %s',\n            s: 'מספר שניות',\n            ss: '%d שניות',\n            m: 'דקה',\n            mm: '%d דקות',\n            h: 'שעה',\n            hh: function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d: 'יום',\n            dd: function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M: 'חודש',\n            MM: function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y: 'שנה',\n            yy: function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            },\n        },\n        meridiemParse:\n            /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM: function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$8 = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$7 = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        },\n        monthsParse$7 = [\n            /^जन/i,\n            /^फ़र|फर/i,\n            /^मार्च/i,\n            /^अप्रै/i,\n            /^मई/i,\n            /^जून/i,\n            /^जुल/i,\n            /^अग/i,\n            /^सितं|सित/i,\n            /^अक्टू/i,\n            /^नव|नवं/i,\n            /^दिसं|दिस/i,\n        ],\n        shortMonthsParse = [\n            /^जन/i,\n            /^फ़र/i,\n            /^मार्च/i,\n            /^अप्रै/i,\n            /^मई/i,\n            /^जून/i,\n            /^जुल/i,\n            /^अग/i,\n            /^सित/i,\n            /^अक्टू/i,\n            /^नव/i,\n            /^दिस/i,\n        ];\n\n    hooks.defineLocale('hi', {\n        months: {\n            format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(\n                '_'\n            ),\n            standalone:\n                'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(\n                    '_'\n                ),\n        },\n        monthsShort:\n            'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm बजे',\n            LTS: 'A h:mm:ss बजे',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm बजे',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',\n        },\n\n        monthsParse: monthsParse$7,\n        longMonthsParse: monthsParse$7,\n        shortMonthsParse: shortMonthsParse,\n\n        monthsRegex:\n            /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n\n        monthsShortRegex:\n            /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n\n        monthsStrictRegex:\n            /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,\n\n        monthsShortStrictRegex:\n            /^(जन\\.?|फ़र\\.?|मार्च?|अप्रै\\.?|मई?|जून?|जुल\\.?|अग\\.?|सित\\.?|अक्टू\\.?|नव\\.?|दिस\\.?)/i,\n\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[कल] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[कल] LT',\n            lastWeek: '[पिछले] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s में',\n            past: '%s पहले',\n            s: 'कुछ ही क्षण',\n            ss: '%d सेकंड',\n            m: 'एक मिनट',\n            mm: '%d मिनट',\n            h: 'एक घंटा',\n            hh: '%d घंटे',\n            d: 'एक दिन',\n            dd: '%d दिन',\n            M: 'एक महीने',\n            MM: '%d महीने',\n            y: 'एक वर्ष',\n            yy: '%d वर्ष',\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$7[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$8[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate$3(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('hr', {\n        months: {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(\n                '_'\n            ),\n            standalone:\n                'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(\n                    '_'\n                ),\n        },\n        monthsShort:\n            'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM YYYY',\n            LLL: 'Do MMMM YYYY H:mm',\n            LLLL: 'dddd, Do MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prošlu] [nedjelju] [u] LT';\n                    case 3:\n                        return '[prošlu] [srijedu] [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate$3,\n            m: translate$3,\n            mm: translate$3,\n            h: translate$3,\n            hh: translate$3,\n            d: 'dan',\n            dd: translate$3,\n            M: 'mjesec',\n            MM: translate$3,\n            y: 'godinu',\n            yy: translate$3,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var weekEndings =\n        'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate$4(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return isFuture || withoutSuffix\n                    ? 'néhány másodperc'\n                    : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix)\n                    ? ' másodperc'\n                    : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (\n            (isFuture ? '' : '[múlt] ') +\n            '[' +\n            weekEndings[this.day()] +\n            '] LT[-kor]'\n        );\n    }\n\n    hooks.defineLocale('hu', {\n        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY. MMMM D.',\n            LLL: 'YYYY. MMMM D. H:mm',\n            LLLL: 'YYYY. MMMM D., dddd H:mm',\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar: {\n            sameDay: '[ma] LT[-kor]',\n            nextDay: '[holnap] LT[-kor]',\n            nextWeek: function () {\n                return week.call(this, true);\n            },\n            lastDay: '[tegnap] LT[-kor]',\n            lastWeek: function () {\n                return week.call(this, false);\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s múlva',\n            past: '%s',\n            s: translate$4,\n            ss: translate$4,\n            m: translate$4,\n            mm: translate$4,\n            h: translate$4,\n            hh: translate$4,\n            d: translate$4,\n            dd: translate$4,\n            M: translate$4,\n            MM: translate$4,\n            y: translate$4,\n            yy: translate$4,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('hy-am', {\n        months: {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(\n                '_'\n            ),\n            standalone:\n                'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays:\n            'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(\n                '_'\n            ),\n        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY թ.',\n            LLL: 'D MMMM YYYY թ., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY թ., HH:mm',\n        },\n        calendar: {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s հետո',\n            past: '%s առաջ',\n            s: 'մի քանի վայրկյան',\n            ss: '%d վայրկյան',\n            m: 'րոպե',\n            mm: '%d րոպե',\n            h: 'ժամ',\n            hh: '%d ժամ',\n            d: 'օր',\n            dd: '%d օր',\n            M: 'ամիս',\n            MM: '%d ամիս',\n            y: 'տարի',\n            yy: '%d տարի',\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem: function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('id', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Besok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kemarin pukul] LT',\n            lastWeek: 'dddd [lalu pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lalu',\n            s: 'beberapa detik',\n            ss: '%d detik',\n            m: 'semenit',\n            mm: '%d menit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$2(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate$5(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture\n                    ? 'nokkrar sekúndur'\n                    : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural$2(number)) {\n                    return (\n                        result +\n                        (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum')\n                    );\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural$2(number)) {\n                    return (\n                        result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')\n                    );\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural$2(number)) {\n                    return (\n                        result +\n                        (withoutSuffix || isFuture\n                            ? 'klukkustundir'\n                            : 'klukkustundum')\n                    );\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    hooks.defineLocale('is', {\n        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays:\n            'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(\n                '_'\n            ),\n        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] H:mm',\n            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',\n        },\n        calendar: {\n            sameDay: '[í dag kl.] LT',\n            nextDay: '[á morgun kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[í gær kl.] LT',\n            lastWeek: '[síðasta] dddd [kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'eftir %s',\n            past: 'fyrir %s síðan',\n            s: translate$5,\n            ss: translate$5,\n            m: translate$5,\n            mm: translate$5,\n            h: 'klukkustund',\n            hh: translate$5,\n            d: translate$5,\n            dd: translate$5,\n            M: translate$5,\n            MM: translate$5,\n            y: translate$5,\n            yy: translate$5,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it-ch', {\n        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n            '_'\n        ),\n        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (s) {\n                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past: '%s fa',\n            s: 'alcuni secondi',\n            ss: '%d secondi',\n            m: 'un minuto',\n            mm: '%d minuti',\n            h: \"un'ora\",\n            hh: '%d ore',\n            d: 'un giorno',\n            dd: '%d giorni',\n            M: 'un mese',\n            MM: '%d mesi',\n            y: 'un anno',\n            yy: '%d anni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it', {\n        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n            '_'\n        ),\n        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return (\n                    '[Oggi a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            nextDay: function () {\n                return (\n                    '[Domani a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            nextWeek: function () {\n                return (\n                    'dddd [a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            lastDay: function () {\n                return (\n                    '[Ieri a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return (\n                            '[La scorsa] dddd [a' +\n                            (this.hours() > 1\n                                ? 'lle '\n                                : this.hours() === 0\n                                ? ' '\n                                : \"ll'\") +\n                            ']LT'\n                        );\n                    default:\n                        return (\n                            '[Lo scorso] dddd [a' +\n                            (this.hours() > 1\n                                ? 'lle '\n                                : this.hours() === 0\n                                ? ' '\n                                : \"ll'\") +\n                            ']LT'\n                        );\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'tra %s',\n            past: '%s fa',\n            s: 'alcuni secondi',\n            ss: '%d secondi',\n            m: 'un minuto',\n            mm: '%d minuti',\n            h: \"un'ora\",\n            hh: '%d ore',\n            d: 'un giorno',\n            dd: '%d giorni',\n            w: 'una settimana',\n            ww: '%d settimane',\n            M: 'un mese',\n            MM: '%d mesi',\n            y: 'un anno',\n            yy: '%d anni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ja', {\n        eras: [\n            {\n                since: '2019-05-01',\n                offset: 1,\n                name: '令和',\n                narrow: '㋿',\n                abbr: 'R',\n            },\n            {\n                since: '1989-01-08',\n                until: '2019-04-30',\n                offset: 1,\n                name: '平成',\n                narrow: '㍻',\n                abbr: 'H',\n            },\n            {\n                since: '1926-12-25',\n                until: '1989-01-07',\n                offset: 1,\n                name: '昭和',\n                narrow: '㍼',\n                abbr: 'S',\n            },\n            {\n                since: '1912-07-30',\n                until: '1926-12-24',\n                offset: 1,\n                name: '大正',\n                narrow: '㍽',\n                abbr: 'T',\n            },\n            {\n                since: '1873-01-01',\n                until: '1912-07-29',\n                offset: 6,\n                name: '明治',\n                narrow: '㍾',\n                abbr: 'M',\n            },\n            {\n                since: '0001-01-01',\n                until: '1873-12-31',\n                offset: 1,\n                name: '西暦',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: '紀元前',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        eraYearOrdinalRegex: /(元|\\d+)年/,\n        eraYearOrdinalParse: function (input, match) {\n            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);\n        },\n        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日 dddd HH:mm',\n            l: 'YYYY/MM/DD',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日(ddd) HH:mm',\n        },\n        meridiemParse: /午前|午後/i,\n        isPM: function (input) {\n            return input === '午後';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar: {\n            sameDay: '[今日] LT',\n            nextDay: '[明日] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay: '[昨日] LT',\n            lastWeek: function (now) {\n                if (this.week() !== now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}日/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'y':\n                    return number === 1 ? '元年' : number + '年';\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '数秒',\n            ss: '%d秒',\n            m: '1分',\n            mm: '%d分',\n            h: '1時間',\n            hh: '%d時間',\n            d: '1日',\n            dd: '%d日',\n            M: '1ヶ月',\n            MM: '%dヶ月',\n            y: '1年',\n            yy: '%d年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('jv', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar: {\n            sameDay: '[Dinten puniko pukul] LT',\n            nextDay: '[Mbenjang pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kala wingi pukul] LT',\n            lastWeek: 'dddd [kepengker pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'wonten ing %s',\n            past: '%s ingkang kepengker',\n            s: 'sawetawis detik',\n            ss: '%d detik',\n            m: 'setunggal menit',\n            mm: '%d menit',\n            h: 'setunggal jam',\n            hh: '%d jam',\n            d: 'sedinten',\n            dd: '%d dinten',\n            M: 'sewulan',\n            MM: '%d wulan',\n            y: 'setaun',\n            yy: '%d taun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ka', {\n        months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(\n            '_'\n        ),\n        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays: {\n            standalone:\n                'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(\n                    '_'\n                ),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(\n                '_'\n            ),\n            isFormat: /(წინა|შემდეგ)/,\n        },\n        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[დღეს] LT[-ზე]',\n            nextDay: '[ხვალ] LT[-ზე]',\n            lastDay: '[გუშინ] LT[-ზე]',\n            nextWeek: '[შემდეგ] dddd LT[-ზე]',\n            lastWeek: '[წინა] dddd LT-ზე',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (s) {\n                return s.replace(\n                    /(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,\n                    function ($0, $1, $2) {\n                        return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';\n                    }\n                );\n            },\n            past: function (s) {\n                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if (/წელი/.test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n                return s;\n            },\n            s: 'რამდენიმე წამი',\n            ss: '%d წამი',\n            m: 'წუთი',\n            mm: '%d წუთი',\n            h: 'საათი',\n            hh: '%d საათი',\n            d: 'დღე',\n            dd: '%d დღე',\n            M: 'თვე',\n            MM: '%d თვე',\n            y: 'წელი',\n            yy: '%d წელი',\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal: function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if (\n                number < 20 ||\n                (number <= 100 && number % 20 === 0) ||\n                number % 100 === 0\n            ) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week: {\n            dow: 1,\n            doy: 7,\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$1 = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші',\n    };\n\n    hooks.defineLocale('kk', {\n        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(\n            '_'\n        ),\n        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(\n            '_'\n        ),\n        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бүгін сағат] LT',\n            nextDay: '[Ертең сағат] LT',\n            nextWeek: 'dddd [сағат] LT',\n            lastDay: '[Кеше сағат] LT',\n            lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ішінде',\n            past: '%s бұрын',\n            s: 'бірнеше секунд',\n            ss: '%d секунд',\n            m: 'бір минут',\n            mm: '%d минут',\n            h: 'бір сағат',\n            hh: '%d сағат',\n            d: 'бір күн',\n            dd: '%d күн',\n            M: 'бір ай',\n            MM: '%d ай',\n            y: 'бір жыл',\n            yy: '%d жыл',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$1[number] || suffixes$1[a] || suffixes$1[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$9 = {\n            1: '១',\n            2: '២',\n            3: '៣',\n            4: '៤',\n            5: '៥',\n            6: '៦',\n            7: '៧',\n            8: '៨',\n            9: '៩',\n            0: '០',\n        },\n        numberMap$8 = {\n            '១': '1',\n            '២': '2',\n            '៣': '3',\n            '៤': '4',\n            '៥': '5',\n            '៦': '6',\n            '៧': '7',\n            '៨': '8',\n            '៩': '9',\n            '០': '0',\n        };\n\n    hooks.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort:\n            'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n                '_'\n            ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ',\n        },\n        dayOfMonthOrdinalParse: /ទី\\d{1,2}/,\n        ordinal: 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap$8[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$9[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$a = {\n            1: '೧',\n            2: '೨',\n            3: '೩',\n            4: '೪',\n            5: '೫',\n            6: '೬',\n            7: '೭',\n            8: '೮',\n            9: '೯',\n            0: '೦',\n        },\n        numberMap$9 = {\n            '೧': '1',\n            '೨': '2',\n            '೩': '3',\n            '೪': '4',\n            '೫': '5',\n            '೬': '6',\n            '೭': '7',\n            '೮': '8',\n            '೯': '9',\n            '೦': '0',\n        };\n\n    hooks.defineLocale('kn', {\n        months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(\n            '_'\n        ),\n        monthsShort:\n            'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(\n            '_'\n        ),\n        weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[ಇಂದು] LT',\n            nextDay: '[ನಾಳೆ] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ನಿನ್ನೆ] LT',\n            lastWeek: '[ಕೊನೆಯ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ನಂತರ',\n            past: '%s ಹಿಂದೆ',\n            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss: '%d ಸೆಕೆಂಡುಗಳು',\n            m: 'ಒಂದು ನಿಮಿಷ',\n            mm: '%d ನಿಮಿಷ',\n            h: 'ಒಂದು ಗಂಟೆ',\n            hh: '%d ಗಂಟೆ',\n            d: 'ಒಂದು ದಿನ',\n            dd: '%d ದಿನ',\n            M: 'ಒಂದು ತಿಂಗಳು',\n            MM: '%d ತಿಂಗಳು',\n            y: 'ಒಂದು ವರ್ಷ',\n            yy: '%d ವರ್ಷ',\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap$9[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$a[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal: function (number) {\n            return number + 'ನೇ';\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ko', {\n        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(\n            '_'\n        ),\n        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY년 MMMM D일',\n            LLL: 'YYYY년 MMMM D일 A h:mm',\n            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n            l: 'YYYY.MM.DD.',\n            ll: 'YYYY년 MMMM D일',\n            lll: 'YYYY년 MMMM D일 A h:mm',\n            llll: 'YYYY년 MMMM D일 dddd A h:mm',\n        },\n        calendar: {\n            sameDay: '오늘 LT',\n            nextDay: '내일 LT',\n            nextWeek: 'dddd LT',\n            lastDay: '어제 LT',\n            lastWeek: '지난주 dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s 후',\n            past: '%s 전',\n            s: '몇 초',\n            ss: '%d초',\n            m: '1분',\n            mm: '%d분',\n            h: '한 시간',\n            hh: '%d시간',\n            d: '하루',\n            dd: '%d일',\n            M: '한 달',\n            MM: '%d달',\n            y: '일 년',\n            yy: '%d년',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse: /오전|오후/,\n        isPM: function (token) {\n            return token === '오후';\n        },\n        meridiem: function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$b = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$a = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        },\n        months$8 = [\n            'کانونی دووەم',\n            'شوبات',\n            'ئازار',\n            'نیسان',\n            'ئایار',\n            'حوزەیران',\n            'تەمموز',\n            'ئاب',\n            'ئەیلوول',\n            'تشرینی یەكەم',\n            'تشرینی دووەم',\n            'كانونی یەکەم',\n        ];\n\n    hooks.defineLocale('ku', {\n        months: months$8,\n        monthsShort: months$8,\n        weekdays:\n            'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(\n                '_'\n            ),\n        weekdaysShort:\n            'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ئێواره‌|به‌یانی/,\n        isPM: function (input) {\n            return /ئێواره‌/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'به‌یانی';\n            } else {\n                return 'ئێواره‌';\n            }\n        },\n        calendar: {\n            sameDay: '[ئه‌مرۆ كاتژمێر] LT',\n            nextDay: '[به‌یانی كاتژمێر] LT',\n            nextWeek: 'dddd [كاتژمێر] LT',\n            lastDay: '[دوێنێ كاتژمێر] LT',\n            lastWeek: 'dddd [كاتژمێر] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'له‌ %s',\n            past: '%s',\n            s: 'چه‌ند چركه‌یه‌ك',\n            ss: 'چركه‌ %d',\n            m: 'یه‌ك خوله‌ك',\n            mm: '%d خوله‌ك',\n            h: 'یه‌ك كاتژمێر',\n            hh: '%d كاتژمێر',\n            d: 'یه‌ك ڕۆژ',\n            dd: '%d ڕۆژ',\n            M: 'یه‌ك مانگ',\n            MM: '%d مانگ',\n            y: 'یه‌ك ساڵ',\n            yy: '%d ساڵ',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$a[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$b[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$2 = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү',\n    };\n\n    hooks.defineLocale('ky', {\n        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n            '_'\n        ),\n        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(\n            '_'\n        ),\n        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(\n            '_'\n        ),\n        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бүгүн саат] LT',\n            nextDay: '[Эртең саат] LT',\n            nextWeek: 'dddd [саат] LT',\n            lastDay: '[Кечээ саат] LT',\n            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ичинде',\n            past: '%s мурун',\n            s: 'бирнече секунд',\n            ss: '%d секунд',\n            m: 'бир мүнөт',\n            mm: '%d мүнөт',\n            h: 'бир саат',\n            hh: '%d саат',\n            d: 'бир күн',\n            dd: '%d күн',\n            M: 'бир ай',\n            MM: '%d ай',\n            y: 'бир жыл',\n            yy: '%d жыл',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$2[number] || suffixes$2[a] || suffixes$2[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$6(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eng Minutt', 'enger Minutt'],\n            h: ['eng Stonn', 'enger Stonn'],\n            d: ['een Dag', 'engem Dag'],\n            M: ['ee Mount', 'engem Mount'],\n            y: ['ee Joer', 'engem Joer'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10,\n                firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    hooks.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            },\n        },\n        relativeTime: {\n            future: processFutureTime,\n            past: processPastTime,\n            s: 'e puer Sekonnen',\n            ss: '%d Sekonnen',\n            m: processRelativeTime$6,\n            mm: '%d Minutten',\n            h: processRelativeTime$6,\n            hh: '%d Stonnen',\n            d: processRelativeTime$6,\n            dd: '%d Deeg',\n            M: processRelativeTime$6,\n            MM: '%d Méint',\n            y: processRelativeTime$6,\n            yy: '%d Joer',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('lo', {\n        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(\n                '_'\n            ),\n        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'ວັນdddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar: {\n            sameDay: '[ມື້ນີ້ເວລາ] LT',\n            nextDay: '[ມື້ອື່ນເວລາ] LT',\n            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay: '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ອີກ %s',\n            past: '%sຜ່ານມາ',\n            s: 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss: '%d ວິນາທີ',\n            m: '1 ນາທີ',\n            mm: '%d ນາທີ',\n            h: '1 ຊົ່ວໂມງ',\n            hh: '%d ຊົ່ວໂມງ',\n            d: '1 ມື້',\n            dd: '%d ມື້',\n            M: '1 ເດືອນ',\n            MM: '%d ເດືອນ',\n            y: '1 ປີ',\n            yy: '%d ປີ',\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal: function (number) {\n            return 'ທີ່' + number;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var units = {\n        ss: 'sekundė_sekundžių_sekundes',\n        m: 'minutė_minutės_minutę',\n        mm: 'minutės_minučių_minutes',\n        h: 'valanda_valandos_valandą',\n        hh: 'valandos_valandų_valandas',\n        d: 'diena_dienos_dieną',\n        dd: 'dienos_dienų_dienas',\n        M: 'mėnuo_mėnesio_mėnesį',\n        MM: 'mėnesiai_mėnesių_mėnesius',\n        y: 'metai_metų_metus',\n        yy: 'metai_metų_metus',\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix\n            ? forms(key)[0]\n            : isFuture\n            ? forms(key)[1]\n            : forms(key)[2];\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate$6(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return (\n                result + translateSingular(number, withoutSuffix, key[0], isFuture)\n            );\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    hooks.defineLocale('lt', {\n        months: {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(\n                '_'\n            ),\n            standalone:\n                'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(\n                    '_'\n                ),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/,\n        },\n        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays: {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(\n                '_'\n            ),\n            standalone:\n                'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(\n                    '_'\n                ),\n            isFormat: /dddd HH:mm/,\n        },\n        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY [m.] MMMM D [d.]',\n            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l: 'YYYY-MM-DD',\n            ll: 'YYYY [m.] MMMM D [d.]',\n            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',\n        },\n        calendar: {\n            sameDay: '[Šiandien] LT',\n            nextDay: '[Rytoj] LT',\n            nextWeek: 'dddd LT',\n            lastDay: '[Vakar] LT',\n            lastWeek: '[Praėjusį] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'po %s',\n            past: 'prieš %s',\n            s: translateSeconds,\n            ss: translate$6,\n            m: translateSingular,\n            mm: translate$6,\n            h: translateSingular,\n            hh: translate$6,\n            d: translateSingular,\n            dd: translate$6,\n            M: translateSingular,\n            MM: translate$6,\n            y: translateSingular,\n            yy: translate$6,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal: function (number) {\n            return number + '-oji';\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var units$1 = {\n        ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        h: 'stundas_stundām_stunda_stundas'.split('_'),\n        hh: 'stundas_stundām_stunda_stundas'.split('_'),\n        d: 'dienas_dienām_diena_dienas'.split('_'),\n        dd: 'dienas_dienām_diena_dienas'.split('_'),\n        M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        y: 'gada_gadiem_gads_gadi'.split('_'),\n        yy: 'gada_gadiem_gads_gadi'.split('_'),\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format$1(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural$1(number, withoutSuffix, key) {\n        return number + ' ' + format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    hooks.defineLocale('lv', {\n        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays:\n            'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(\n                '_'\n            ),\n        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY.',\n            LL: 'YYYY. [gada] D. MMMM',\n            LLL: 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',\n        },\n        calendar: {\n            sameDay: '[Šodien pulksten] LT',\n            nextDay: '[Rīt pulksten] LT',\n            nextWeek: 'dddd [pulksten] LT',\n            lastDay: '[Vakar pulksten] LT',\n            lastWeek: '[Pagājušā] dddd [pulksten] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'pēc %s',\n            past: 'pirms %s',\n            s: relativeSeconds,\n            ss: relativeTimeWithPlural$1,\n            m: relativeTimeWithSingular,\n            mm: relativeTimeWithPlural$1,\n            h: relativeTimeWithSingular,\n            hh: relativeTimeWithPlural$1,\n            d: relativeTimeWithSingular,\n            dd: relativeTimeWithPlural$1,\n            M: relativeTimeWithSingular,\n            MM: relativeTimeWithPlural$1,\n            y: relativeTimeWithSingular,\n            yy: relativeTimeWithPlural$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator = {\n        words: {\n            //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1\n                ? wordKey[0]\n                : number >= 2 && number <= 4\n                ? wordKey[1]\n                : wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return (\n                    number +\n                    ' ' +\n                    translator.correctGrammaticalCase(number, wordKey)\n                );\n            }\n        },\n    };\n\n    hooks.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[juče u] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'nekoliko sekundi',\n            ss: translator.translate,\n            m: translator.translate,\n            mm: translator.translate,\n            h: translator.translate,\n            hh: translator.translate,\n            d: 'dan',\n            dd: translator.translate,\n            M: 'mjesec',\n            MM: translator.translate,\n            y: 'godinu',\n            yy: translator.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(\n            '_'\n        ),\n        monthsShort:\n            'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(\n                '_'\n            ),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mk', {\n        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(\n            '_'\n        ),\n        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(\n            '_'\n        ),\n        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Денес во] LT',\n            nextDay: '[Утре во] LT',\n            nextWeek: '[Во] dddd [во] LT',\n            lastDay: '[Вчера во] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: 'пред %s',\n            s: 'неколку секунди',\n            ss: '%d секунди',\n            m: 'една минута',\n            mm: '%d минути',\n            h: 'еден час',\n            hh: '%d часа',\n            d: 'еден ден',\n            dd: '%d дена',\n            M: 'еден месец',\n            MM: '%d месеци',\n            y: 'една година',\n            yy: '%d години',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal: function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ml', {\n        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(\n                '_'\n            ),\n        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm -നു',\n            LTS: 'A h:mm:ss -നു',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm -നു',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',\n        },\n        calendar: {\n            sameDay: '[ഇന്ന്] LT',\n            nextDay: '[നാളെ] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ഇന്നലെ] LT',\n            lastWeek: '[കഴിഞ്ഞ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s കഴിഞ്ഞ്',\n            past: '%s മുൻപ്',\n            s: 'അൽപ നിമിഷങ്ങൾ',\n            ss: '%d സെക്കൻഡ്',\n            m: 'ഒരു മിനിറ്റ്',\n            mm: '%d മിനിറ്റ്',\n            h: 'ഒരു മണിക്കൂർ',\n            hh: '%d മണിക്കൂർ',\n            d: 'ഒരു ദിവസം',\n            dd: '%d ദിവസം',\n            M: 'ഒരു മാസം',\n            MM: '%d മാസം',\n            y: 'ഒരു വർഷം',\n            yy: '%d വർഷം',\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'രാത്രി' && hour >= 4) ||\n                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                meridiem === 'വൈകുന്നേരം'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate$7(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    hooks.defineLocale('mn', {\n        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(\n            '_'\n        ),\n        monthsShort:\n            '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY оны MMMMын D',\n            LLL: 'YYYY оны MMMMын D HH:mm',\n            LLLL: 'dddd, YYYY оны MMMMын D HH:mm',\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM: function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar: {\n            sameDay: '[Өнөөдөр] LT',\n            nextDay: '[Маргааш] LT',\n            nextWeek: '[Ирэх] dddd LT',\n            lastDay: '[Өчигдөр] LT',\n            lastWeek: '[Өнгөрсөн] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s дараа',\n            past: '%s өмнө',\n            s: translate$7,\n            ss: translate$7,\n            m: translate$7,\n            mm: translate$7,\n            h: translate$7,\n            hh: translate$7,\n            d: translate$7,\n            dd: translate$7,\n            M: translate$7,\n            MM: translate$7,\n            y: translate$7,\n            yy: translate$7,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$c = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$b = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture) {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's':\n                    output = 'काही सेकंद';\n                    break;\n                case 'ss':\n                    output = '%d सेकंद';\n                    break;\n                case 'm':\n                    output = 'एक मिनिट';\n                    break;\n                case 'mm':\n                    output = '%d मिनिटे';\n                    break;\n                case 'h':\n                    output = 'एक तास';\n                    break;\n                case 'hh':\n                    output = '%d तास';\n                    break;\n                case 'd':\n                    output = 'एक दिवस';\n                    break;\n                case 'dd':\n                    output = '%d दिवस';\n                    break;\n                case 'M':\n                    output = 'एक महिना';\n                    break;\n                case 'MM':\n                    output = '%d महिने';\n                    break;\n                case 'y':\n                    output = 'एक वर्ष';\n                    break;\n                case 'yy':\n                    output = '%d वर्षे';\n                    break;\n            }\n        } else {\n            switch (string) {\n                case 's':\n                    output = 'काही सेकंदां';\n                    break;\n                case 'ss':\n                    output = '%d सेकंदां';\n                    break;\n                case 'm':\n                    output = 'एका मिनिटा';\n                    break;\n                case 'mm':\n                    output = '%d मिनिटां';\n                    break;\n                case 'h':\n                    output = 'एका तासा';\n                    break;\n                case 'hh':\n                    output = '%d तासां';\n                    break;\n                case 'd':\n                    output = 'एका दिवसा';\n                    break;\n                case 'dd':\n                    output = '%d दिवसां';\n                    break;\n                case 'M':\n                    output = 'एका महिन्या';\n                    break;\n                case 'MM':\n                    output = '%d महिन्यां';\n                    break;\n                case 'y':\n                    output = 'एका वर्षा';\n                    break;\n                case 'yy':\n                    output = '%d वर्षां';\n                    break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    hooks.defineLocale('mr', {\n        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\n            '_'\n        ),\n        monthsShort:\n            'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm वाजता',\n            LTS: 'A h:mm:ss वाजता',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm वाजता',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',\n        },\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[उद्या] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr,\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$b[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$c[match];\n            });\n        },\n        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {\n                return hour;\n            } else if (\n                meridiem === 'दुपारी' ||\n                meridiem === 'सायंकाळी' ||\n                meridiem === 'रात्री'\n            ) {\n                return hour >= 12 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour >= 0 && hour < 6) {\n                return 'पहाटे';\n            } else if (hour < 12) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms-my', {\n        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Esok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kelmarin pukul] LT',\n            lastWeek: 'dddd [lepas pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lepas',\n            s: 'beberapa saat',\n            ss: '%d saat',\n            m: 'seminit',\n            mm: '%d minit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms', {\n        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Esok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kelmarin pukul] LT',\n            lastWeek: 'dddd [lepas pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lepas',\n            s: 'beberapa saat',\n            ss: '%d saat',\n            m: 'seminit',\n            mm: '%d minit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mt', {\n        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays:\n            'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(\n                '_'\n            ),\n        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Illum fil-]LT',\n            nextDay: '[Għada fil-]LT',\n            nextWeek: 'dddd [fil-]LT',\n            lastDay: '[Il-bieraħ fil-]LT',\n            lastWeek: 'dddd [li għadda] [fil-]LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'f’ %s',\n            past: '%s ilu',\n            s: 'ftit sekondi',\n            ss: '%d sekondi',\n            m: 'minuta',\n            mm: '%d minuti',\n            h: 'siegħa',\n            hh: '%d siegħat',\n            d: 'ġurnata',\n            dd: '%d ġranet',\n            M: 'xahar',\n            MM: '%d xhur',\n            y: 'sena',\n            yy: '%d sni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$d = {\n            1: '၁',\n            2: '၂',\n            3: '၃',\n            4: '၄',\n            5: '၅',\n            6: '၆',\n            7: '၇',\n            8: '၈',\n            9: '၉',\n            0: '၀',\n        },\n        numberMap$c = {\n            '၁': '1',\n            '၂': '2',\n            '၃': '3',\n            '၄': '4',\n            '၅': '5',\n            '၆': '6',\n            '၇': '7',\n            '၈': '8',\n            '၉': '9',\n            '၀': '0',\n        };\n\n    hooks.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(\n            '_'\n        ),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(\n            '_'\n        ),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss: '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်',\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap$c[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$d[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nb', {\n        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s siden',\n            s: 'noen sekunder',\n            ss: '%d sekunder',\n            m: 'ett minutt',\n            mm: '%d minutter',\n            h: 'en time',\n            hh: '%d timer',\n            d: 'en dag',\n            dd: '%d dager',\n            w: 'en uke',\n            ww: '%d uker',\n            M: 'en måned',\n            MM: '%d måneder',\n            y: 'ett år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$e = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$d = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        };\n\n    hooks.defineLocale('ne', {\n        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(\n            '_'\n        ),\n        monthsShort:\n            'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(\n            '_'\n        ),\n        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'Aको h:mm बजे',\n            LTS: 'Aको h:mm:ss बजे',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$d[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$e[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[भोलि] LT',\n            nextWeek: '[आउँदो] dddd[,] LT',\n            lastDay: '[हिजो] LT',\n            lastWeek: '[गएको] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sमा',\n            past: '%s अगाडि',\n            s: 'केही क्षण',\n            ss: '%d सेकेण्ड',\n            m: 'एक मिनेट',\n            mm: '%d मिनेट',\n            h: 'एक घण्टा',\n            hh: '%d घण्टा',\n            d: 'एक दिन',\n            dd: '%d दिन',\n            M: 'एक महिना',\n            MM: '%d महिना',\n            y: 'एक बर्ष',\n            yy: '%d बर्ष',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$1 =\n            'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots$1 =\n            'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        monthsParse$8 = [\n            /^jan/i,\n            /^feb/i,\n            /^maart|mrt.?$/i,\n            /^apr/i,\n            /^mei$/i,\n            /^jun[i.]?$/i,\n            /^jul[i.]?$/i,\n            /^aug/i,\n            /^sep/i,\n            /^okt/i,\n            /^nov/i,\n            /^dec/i,\n        ],\n        monthsRegex$8 =\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl-be', {\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$1[m.month()];\n            } else {\n                return monthsShortWithDots$1[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$8,\n        monthsShortRegex: monthsRegex$8,\n        monthsStrictRegex:\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex:\n            /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse: monthsParse$8,\n        longMonthsParse: monthsParse$8,\n        shortMonthsParse: monthsParse$8,\n\n        weekdays:\n            'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'over %s',\n            past: '%s geleden',\n            s: 'een paar seconden',\n            ss: '%d seconden',\n            m: 'één minuut',\n            mm: '%d minuten',\n            h: 'één uur',\n            hh: '%d uur',\n            d: 'één dag',\n            dd: '%d dagen',\n            M: 'één maand',\n            MM: '%d maanden',\n            y: 'één jaar',\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$2 =\n            'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots$2 =\n            'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        monthsParse$9 = [\n            /^jan/i,\n            /^feb/i,\n            /^maart|mrt.?$/i,\n            /^apr/i,\n            /^mei$/i,\n            /^jun[i.]?$/i,\n            /^jul[i.]?$/i,\n            /^aug/i,\n            /^sep/i,\n            /^okt/i,\n            /^nov/i,\n            /^dec/i,\n        ],\n        monthsRegex$9 =\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl', {\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$2[m.month()];\n            } else {\n                return monthsShortWithDots$2[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$9,\n        monthsShortRegex: monthsRegex$9,\n        monthsStrictRegex:\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex:\n            /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse: monthsParse$9,\n        longMonthsParse: monthsParse$9,\n        shortMonthsParse: monthsParse$9,\n\n        weekdays:\n            'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'over %s',\n            past: '%s geleden',\n            s: 'een paar seconden',\n            ss: '%d seconden',\n            m: 'één minuut',\n            mm: '%d minuten',\n            h: 'één uur',\n            hh: '%d uur',\n            d: 'één dag',\n            dd: '%d dagen',\n            w: 'één week',\n            ww: '%d weken',\n            M: 'één maand',\n            MM: '%d maanden',\n            y: 'één jaar',\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nn', {\n        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),\n        weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] H:mm',\n            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s sidan',\n            s: 'nokre sekund',\n            ss: '%d sekund',\n            m: 'eit minutt',\n            mm: '%d minutt',\n            h: 'ein time',\n            hh: '%d timar',\n            d: 'ein dag',\n            dd: '%d dagar',\n            w: 'ei veke',\n            ww: '%d veker',\n            M: 'ein månad',\n            MM: '%d månader',\n            y: 'eit år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('oc-lnc', {\n        months: {\n            standalone:\n                'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(\n                    '_'\n                ),\n            format: \"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre\".split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\s)+MMMM/,\n        },\n        monthsShort:\n            'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(\n            '_'\n        ),\n        weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [de] YYYY',\n            ll: 'D MMM YYYY',\n            LLL: 'D MMMM [de] YYYY [a] H:mm',\n            lll: 'D MMM YYYY, H:mm',\n            LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',\n            llll: 'ddd D MMM YYYY, H:mm',\n        },\n        calendar: {\n            sameDay: '[uèi a] LT',\n            nextDay: '[deman a] LT',\n            nextWeek: 'dddd [a] LT',\n            lastDay: '[ièr a] LT',\n            lastWeek: 'dddd [passat a] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: \"d'aquí %s\",\n            past: 'fa %s',\n            s: 'unas segondas',\n            ss: '%d segondas',\n            m: 'una minuta',\n            mm: '%d minutas',\n            h: 'una ora',\n            hh: '%d oras',\n            d: 'un jorn',\n            dd: '%d jorns',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal: function (number, period) {\n            var output =\n                number === 1\n                    ? 'r'\n                    : number === 2\n                    ? 'n'\n                    : number === 3\n                    ? 'r'\n                    : number === 4\n                    ? 't'\n                    : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4,\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$f = {\n            1: '੧',\n            2: '੨',\n            3: '੩',\n            4: '੪',\n            5: '੫',\n            6: '੬',\n            7: '੭',\n            8: '੮',\n            9: '੯',\n            0: '੦',\n        },\n        numberMap$e = {\n            '੧': '1',\n            '੨': '2',\n            '੩': '3',\n            '੪': '4',\n            '੫': '5',\n            '੬': '6',\n            '੭': '7',\n            '੮': '8',\n            '੯': '9',\n            '੦': '0',\n        };\n\n    hooks.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(\n                '_'\n            ),\n        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(\n            '_'\n        ),\n        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm ਵਜੇ',\n            LTS: 'A h:mm:ss ਵਜੇ',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',\n        },\n        calendar: {\n            sameDay: '[ਅਜ] LT',\n            nextDay: '[ਕਲ] LT',\n            nextWeek: '[ਅਗਲਾ] dddd, LT',\n            lastDay: '[ਕਲ] LT',\n            lastWeek: '[ਪਿਛਲੇ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ਵਿੱਚ',\n            past: '%s ਪਿਛਲੇ',\n            s: 'ਕੁਝ ਸਕਿੰਟ',\n            ss: '%d ਸਕਿੰਟ',\n            m: 'ਇਕ ਮਿੰਟ',\n            mm: '%d ਮਿੰਟ',\n            h: 'ਇੱਕ ਘੰਟਾ',\n            hh: '%d ਘੰਟੇ',\n            d: 'ਇੱਕ ਦਿਨ',\n            dd: '%d ਦਿਨ',\n            M: 'ਇੱਕ ਮਹੀਨਾ',\n            MM: '%d ਮਹੀਨੇ',\n            y: 'ਇੱਕ ਸਾਲ',\n            yy: '%d ਸਾਲ',\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap$e[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$f[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsNominative =\n            'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(\n                '_'\n            ),\n        monthsSubjective =\n            'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(\n                '_'\n            ),\n        monthsParse$a = [\n            /^sty/i,\n            /^lut/i,\n            /^mar/i,\n            /^kwi/i,\n            /^maj/i,\n            /^cze/i,\n            /^lip/i,\n            /^sie/i,\n            /^wrz/i,\n            /^paź/i,\n            /^lis/i,\n            /^gru/i,\n        ];\n    function plural$3(n) {\n        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n    }\n    function translate$8(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural$3(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural$3(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix ? 'godzina' : 'godzinę';\n            case 'hh':\n                return result + (plural$3(number) ? 'godziny' : 'godzin');\n            case 'ww':\n                return result + (plural$3(number) ? 'tygodnie' : 'tygodni');\n            case 'MM':\n                return result + (plural$3(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural$3(number) ? 'lata' : 'lat');\n        }\n    }\n\n    hooks.defineLocale('pl', {\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        monthsParse: monthsParse$a,\n        longMonthsParse: monthsParse$a,\n        shortMonthsParse: monthsParse$a,\n        weekdays:\n            'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: '%s temu',\n            s: 'kilka sekund',\n            ss: translate$8,\n            m: translate$8,\n            mm: translate$8,\n            h: translate$8,\n            hh: translate$8,\n            d: '1 dzień',\n            dd: '%d dni',\n            w: 'tydzień',\n            ww: translate$8,\n            M: 'miesiąc',\n            MM: translate$8,\n            y: 'rok',\n            yy: translate$8,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt-br', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays:\n            'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(\n                '_'\n            ),\n        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'poucos segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        invalidDate: 'Data inválida',\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays:\n            'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(\n                '_'\n            ),\n        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            w: 'uma semana',\n            ww: '%d semanas',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithPlural$2(number, withoutSuffix, key) {\n        var format = {\n                ss: 'secunde',\n                mm: 'minute',\n                hh: 'ore',\n                dd: 'zile',\n                ww: 'săptămâni',\n                MM: 'luni',\n                yy: 'ani',\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    hooks.defineLocale('ro', {\n        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(\n            '_'\n        ),\n        monthsShort:\n            'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'peste %s',\n            past: '%s în urmă',\n            s: 'câteva secunde',\n            ss: relativeTimeWithPlural$2,\n            m: 'un minut',\n            mm: relativeTimeWithPlural$2,\n            h: 'o oră',\n            hh: relativeTimeWithPlural$2,\n            d: 'o zi',\n            dd: relativeTimeWithPlural$2,\n            w: 'o săptămână',\n            ww: relativeTimeWithPlural$2,\n            M: 'o lună',\n            MM: relativeTimeWithPlural$2,\n            y: 'un an',\n            yy: relativeTimeWithPlural$2,\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$4(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural$3(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            hh: 'час_часа_часов',\n            dd: 'день_дня_дней',\n            ww: 'неделя_недели_недель',\n            MM: 'месяц_месяца_месяцев',\n            yy: 'год_года_лет',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        } else {\n            return number + ' ' + plural$4(format[key], +number);\n        }\n    }\n    var monthsParse$b = [\n        /^янв/i,\n        /^фев/i,\n        /^мар/i,\n        /^апр/i,\n        /^ма[йя]/i,\n        /^июн/i,\n        /^июл/i,\n        /^авг/i,\n        /^сен/i,\n        /^окт/i,\n        /^ноя/i,\n        /^дек/i,\n    ];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    hooks.defineLocale('ru', {\n        months: {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(\n                '_'\n            ),\n            standalone:\n                'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n                    '_'\n                ),\n        },\n        monthsShort: {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(\n                '_'\n            ),\n            standalone:\n                'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(\n                    '_'\n                ),\n        },\n        weekdays: {\n            standalone:\n                'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(\n                    '_'\n                ),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(\n                '_'\n            ),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,\n        },\n        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse: monthsParse$b,\n        longMonthsParse: monthsParse$b,\n        shortMonthsParse: monthsParse$b,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex:\n            /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex:\n            /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex:\n            /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соответствует только сокращённым формам\n        monthsShortStrictRegex:\n            /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY г.',\n            LLL: 'D MMMM YYYY г., H:mm',\n            LLLL: 'dddd, D MMMM YYYY г., H:mm',\n        },\n        calendar: {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'через %s',\n            past: '%s назад',\n            s: 'несколько секунд',\n            ss: relativeTimeWithPlural$3,\n            m: relativeTimeWithPlural$3,\n            mm: relativeTimeWithPlural$3,\n            h: 'час',\n            hh: relativeTimeWithPlural$3,\n            d: 'день',\n            dd: relativeTimeWithPlural$3,\n            w: 'неделя',\n            ww: relativeTimeWithPlural$3,\n            M: 'месяц',\n            MM: relativeTimeWithPlural$3,\n            y: 'год',\n            yy: relativeTimeWithPlural$3,\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM: function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$9 = [\n            'جنوري',\n            'فيبروري',\n            'مارچ',\n            'اپريل',\n            'مئي',\n            'جون',\n            'جولاءِ',\n            'آگسٽ',\n            'سيپٽمبر',\n            'آڪٽوبر',\n            'نومبر',\n            'ڊسمبر',\n        ],\n        days$1 = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];\n\n    hooks.defineLocale('sd', {\n        months: months$9,\n        monthsShort: months$9,\n        weekdays: days$1,\n        weekdaysShort: days$1,\n        weekdaysMin: days$1,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd، D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /صبح|شام/,\n        isPM: function (input) {\n            return 'شام' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar: {\n            sameDay: '[اڄ] LT',\n            nextDay: '[سڀاڻي] LT',\n            nextWeek: 'dddd [اڳين هفتي تي] LT',\n            lastDay: '[ڪالهه] LT',\n            lastWeek: '[گزريل هفتي] dddd [تي] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s پوء',\n            past: '%s اڳ',\n            s: 'چند سيڪنڊ',\n            ss: '%d سيڪنڊ',\n            m: 'هڪ منٽ',\n            mm: '%d منٽ',\n            h: 'هڪ ڪلاڪ',\n            hh: '%d ڪلاڪ',\n            d: 'هڪ ڏينهن',\n            dd: '%d ڏينهن',\n            M: 'هڪ مهينو',\n            MM: '%d مهينا',\n            y: 'هڪ سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('se', {\n        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(\n            '_'\n        ),\n        monthsShort:\n            'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays:\n            'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(\n                '_'\n            ),\n        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'MMMM D. [b.] YYYY',\n            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s geažes',\n            past: 'maŋit %s',\n            s: 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m: 'okta minuhta',\n            mm: '%d minuhtat',\n            h: 'okta diimmu',\n            hh: '%d diimmut',\n            d: 'okta beaivi',\n            dd: '%d beaivvit',\n            M: 'okta mánnu',\n            MM: '%d mánut',\n            y: 'okta jahki',\n            yy: '%d jagit',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    /*jshint -W100*/\n    hooks.defineLocale('si', {\n        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(\n            '_'\n        ),\n        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(\n            '_'\n        ),\n        weekdays:\n            'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(\n                '_'\n            ),\n        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'a h:mm',\n            LTS: 'a h:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY MMMM D',\n            LLL: 'YYYY MMMM D, a h:mm',\n            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',\n        },\n        calendar: {\n            sameDay: '[අද] LT[ට]',\n            nextDay: '[හෙට] LT[ට]',\n            nextWeek: 'dddd LT[ට]',\n            lastDay: '[ඊයේ] LT[ට]',\n            lastWeek: '[පසුගිය] dddd LT[ට]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sකින්',\n            past: '%sකට පෙර',\n            s: 'තත්පර කිහිපය',\n            ss: 'තත්පර %d',\n            m: 'මිනිත්තුව',\n            mm: 'මිනිත්තු %d',\n            h: 'පැය',\n            hh: 'පැය %d',\n            d: 'දිනය',\n            dd: 'දින %d',\n            M: 'මාසය',\n            MM: 'මාස %d',\n            y: 'වසර',\n            yy: 'වසර %d',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal: function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM: function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$a =\n            'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(\n                '_'\n            ),\n        monthsShort$7 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural$5(n) {\n        return n > 1 && n < 5;\n    }\n    function translate$9(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n        }\n    }\n\n    hooks.defineLocale('sk', {\n        months: months$a,\n        monthsShort: monthsShort$7,\n        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'pred %s',\n            s: translate$9,\n            ss: translate$9,\n            m: translate$9,\n            mm: translate$9,\n            h: translate$9,\n            hh: translate$9,\n            d: translate$9,\n            dd: translate$9,\n            M: translate$9,\n            MM: translate$9,\n            y: translate$9,\n            yy: translate$9,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$7(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture\n                    ? 'nekaj sekund'\n                    : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('sl', {\n        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danes ob] LT',\n            nextDay: '[jutri ob] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay: '[včeraj ob] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'čez %s',\n            past: 'pred %s',\n            s: processRelativeTime$7,\n            ss: processRelativeTime$7,\n            m: processRelativeTime$7,\n            mm: processRelativeTime$7,\n            h: processRelativeTime$7,\n            hh: processRelativeTime$7,\n            d: processRelativeTime$7,\n            dd: processRelativeTime$7,\n            M: processRelativeTime$7,\n            MM: processRelativeTime$7,\n            y: processRelativeTime$7,\n            yy: processRelativeTime$7,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sq', {\n        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(\n            '_'\n        ),\n        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact: true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Sot në] LT',\n            nextDay: '[Nesër në] LT',\n            nextWeek: 'dddd [në] LT',\n            lastDay: '[Dje në] LT',\n            lastWeek: 'dddd [e kaluar në] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'në %s',\n            past: '%s më parë',\n            s: 'disa sekonda',\n            ss: '%d sekonda',\n            m: 'një minutë',\n            mm: '%d minuta',\n            h: 'një orë',\n            hh: '%d orë',\n            d: 'një ditë',\n            dd: '%d ditë',\n            M: 'një muaj',\n            MM: '%d muaj',\n            y: 'një vit',\n            yy: '%d vite',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator$1 = {\n        words: {\n            //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једног минута'],\n            mm: ['минут', 'минута', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            d: ['један дан', 'једног дана'],\n            dd: ['дан', 'дана', 'дана'],\n            M: ['један месец', 'једног месеца'],\n            MM: ['месец', 'месеца', 'месеци'],\n            y: ['једну годину', 'једне године'],\n            yy: ['годину', 'године', 'година'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            if (\n                number % 10 >= 1 &&\n                number % 10 <= 4 &&\n                (number % 100 < 10 || number % 100 >= 20)\n            ) {\n                return number % 10 === 1 ? wordKey[0] : wordKey[1];\n            }\n            return wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key, isFuture) {\n            var wordKey = translator$1.words[key],\n                word;\n\n            if (key.length === 1) {\n                // Nominativ\n                if (key === 'y' && withoutSuffix) return 'једна година';\n                return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];\n            }\n\n            word = translator$1.correctGrammaticalCase(number, wordKey);\n            // Nominativ\n            if (key === 'yy' && withoutSuffix && word === 'годину') {\n                return number + ' година';\n            }\n\n            return number + ' ' + word;\n        },\n    };\n\n    hooks.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(\n            '_'\n        ),\n        monthsShort:\n            'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D. M. YYYY.',\n            LL: 'D. MMMM YYYY.',\n            LLL: 'D. MMMM YYYY. H:mm',\n            LLLL: 'dddd, D. MMMM YYYY. H:mm',\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay: '[јуче у] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: 'пре %s',\n            s: 'неколико секунди',\n            ss: translator$1.translate,\n            m: translator$1.translate,\n            mm: translator$1.translate,\n            h: translator$1.translate,\n            hh: translator$1.translate,\n            d: translator$1.translate,\n            dd: translator$1.translate,\n            M: translator$1.translate,\n            MM: translator$1.translate,\n            y: translator$1.translate,\n            yy: translator$1.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator$2 = {\n        words: {\n            //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            d: ['jedan dan', 'jednog dana'],\n            dd: ['dan', 'dana', 'dana'],\n            M: ['jedan mesec', 'jednog meseca'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            y: ['jednu godinu', 'jedne godine'],\n            yy: ['godinu', 'godine', 'godina'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            if (\n                number % 10 >= 1 &&\n                number % 10 <= 4 &&\n                (number % 100 < 10 || number % 100 >= 20)\n            ) {\n                return number % 10 === 1 ? wordKey[0] : wordKey[1];\n            }\n            return wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key, isFuture) {\n            var wordKey = translator$2.words[key],\n                word;\n\n            if (key.length === 1) {\n                // Nominativ\n                if (key === 'y' && withoutSuffix) return 'jedna godina';\n                return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];\n            }\n\n            word = translator$2.correctGrammaticalCase(number, wordKey);\n            // Nominativ\n            if (key === 'yy' && withoutSuffix && word === 'godinu') {\n                return number + ' godina';\n            }\n\n            return number + ' ' + word;\n        },\n    };\n\n    hooks.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D. M. YYYY.',\n            LL: 'D. MMMM YYYY.',\n            LLL: 'D. MMMM YYYY. H:mm',\n            LLLL: 'dddd, D. MMMM YYYY. H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[juče u] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'pre %s',\n            s: 'nekoliko sekundi',\n            ss: translator$2.translate,\n            m: translator$2.translate,\n            mm: translator$2.translate,\n            h: translator$2.translate,\n            hh: translator$2.translate,\n            d: translator$2.translate,\n            dd: translator$2.translate,\n            M: translator$2.translate,\n            MM: translator$2.translate,\n            y: translator$2.translate,\n            yy: translator$2.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ss', {\n        months: \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\n            '_'\n        ),\n        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays:\n            'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(\n                '_'\n            ),\n        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Namuhla nga] LT',\n            nextDay: '[Kusasa nga] LT',\n            nextWeek: 'dddd [nga] LT',\n            lastDay: '[Itolo nga] LT',\n            lastWeek: 'dddd [leliphelile] [nga] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'nga %s',\n            past: 'wenteka nga %s',\n            s: 'emizuzwana lomcane',\n            ss: '%d mzuzwana',\n            m: 'umzuzu',\n            mm: '%d emizuzu',\n            h: 'lihora',\n            hh: '%d emahora',\n            d: 'lilanga',\n            dd: '%d emalanga',\n            M: 'inyanga',\n            MM: '%d tinyanga',\n            y: 'umnyaka',\n            yy: '%d iminyaka',\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: '%d',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sv', {\n        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [kl.] HH:mm',\n            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: 'för %s sedan',\n            s: 'några sekunder',\n            ss: '%d sekunder',\n            m: 'en minut',\n            mm: '%d minuter',\n            h: 'en timme',\n            hh: '%d timmar',\n            d: 'en dag',\n            dd: '%d dagar',\n            M: 'en månad',\n            MM: '%d månader',\n            y: 'ett år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(\\:e|\\:a)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? ':e'\n                        : b === 1\n                        ? ':a'\n                        : b === 2\n                        ? ':a'\n                        : b === 3\n                        ? ':e'\n                        : ':e';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sw', {\n        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays:\n            'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(\n                '_'\n            ),\n        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'hh:mm A',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[leo saa] LT',\n            nextDay: '[kesho saa] LT',\n            nextWeek: '[wiki ijayo] dddd [saat] LT',\n            lastDay: '[jana] LT',\n            lastWeek: '[wiki iliyopita] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s baadaye',\n            past: 'tokea %s',\n            s: 'hivi punde',\n            ss: 'sekunde %d',\n            m: 'dakika moja',\n            mm: 'dakika %d',\n            h: 'saa limoja',\n            hh: 'masaa %d',\n            d: 'siku moja',\n            dd: 'siku %d',\n            M: 'mwezi mmoja',\n            MM: 'miezi %d',\n            y: 'mwaka mmoja',\n            yy: 'miaka %d',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$g = {\n            1: '௧',\n            2: '௨',\n            3: '௩',\n            4: '௪',\n            5: '௫',\n            6: '௬',\n            7: '௭',\n            8: '௮',\n            9: '௯',\n            0: '௦',\n        },\n        numberMap$f = {\n            '௧': '1',\n            '௨': '2',\n            '௩': '3',\n            '௪': '4',\n            '௫': '5',\n            '௬': '6',\n            '௭': '7',\n            '௮': '8',\n            '௯': '9',\n            '௦': '0',\n        };\n\n    hooks.defineLocale('ta', {\n        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\n            '_'\n        ),\n        monthsShort:\n            'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\n                '_'\n            ),\n        weekdays:\n            'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(\n                '_'\n            ),\n        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(\n            '_'\n        ),\n        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, HH:mm',\n            LLLL: 'dddd, D MMMM YYYY, HH:mm',\n        },\n        calendar: {\n            sameDay: '[இன்று] LT',\n            nextDay: '[நாளை] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[நேற்று] LT',\n            lastWeek: '[கடந்த வாரம்] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s இல்',\n            past: '%s முன்',\n            s: 'ஒரு சில விநாடிகள்',\n            ss: '%d விநாடிகள்',\n            m: 'ஒரு நிமிடம்',\n            mm: '%d நிமிடங்கள்',\n            h: 'ஒரு மணி நேரம்',\n            hh: '%d மணி நேரம்',\n            d: 'ஒரு நாள்',\n            dd: '%d நாட்கள்',\n            M: 'ஒரு மாதம்',\n            MM: '%d மாதங்கள்',\n            y: 'ஒரு வருடம்',\n            yy: '%d ஆண்டுகள்',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal: function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap$f[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$g[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை'; // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('te', {\n        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(\n            '_'\n        ),\n        monthsShort:\n            'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(\n                '_'\n            ),\n        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[నేడు] LT',\n            nextDay: '[రేపు] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[నిన్న] LT',\n            lastWeek: '[గత] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s లో',\n            past: '%s క్రితం',\n            s: 'కొన్ని క్షణాలు',\n            ss: '%d సెకన్లు',\n            m: 'ఒక నిమిషం',\n            mm: '%d నిమిషాలు',\n            h: 'ఒక గంట',\n            hh: '%d గంటలు',\n            d: 'ఒక రోజు',\n            dd: '%d రోజులు',\n            M: 'ఒక నెల',\n            MM: '%d నెలలు',\n            y: 'ఒక సంవత్సరం',\n            yy: '%d సంవత్సరాలు',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}వ/,\n        ordinal: '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tet', {\n        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'iha %s',\n            past: '%s liuba',\n            s: 'segundu balun',\n            ss: 'segundu %d',\n            m: 'minutu ida',\n            mm: 'minutu %d',\n            h: 'oras ida',\n            hh: 'oras %d',\n            d: 'loron ida',\n            dd: 'loron %d',\n            M: 'fulan ida',\n            MM: 'fulan %d',\n            y: 'tinan ida',\n            yy: 'tinan %d',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$3 = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум',\n    };\n\n    hooks.defineLocale('tg', {\n        months: {\n            format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(\n                '_'\n            ),\n            standalone:\n                'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(\n            '_'\n        ),\n        weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Имрӯз соати] LT',\n            nextDay: '[Фардо соати] LT',\n            lastDay: '[Дирӯз соати] LT',\n            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'баъди %s',\n            past: '%s пеш',\n            s: 'якчанд сония',\n            m: 'як дақиқа',\n            mm: '%d дақиқа',\n            h: 'як соат',\n            hh: '%d соат',\n            d: 'як рӯз',\n            dd: '%d рӯз',\n            M: 'як моҳ',\n            MM: '%d моҳ',\n            y: 'як сол',\n            yy: '%d сол',\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$3[number] || suffixes$3[a] || suffixes$3[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('th', {\n        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(\n            '_'\n        ),\n        monthsShort:\n            'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY เวลา H:mm',\n            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar: {\n            sameDay: '[วันนี้ เวลา] LT',\n            nextDay: '[พรุ่งนี้ เวลา] LT',\n            nextWeek: 'dddd[หน้า เวลา] LT',\n            lastDay: '[เมื่อวานนี้ เวลา] LT',\n            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'อีก %s',\n            past: '%sที่แล้ว',\n            s: 'ไม่กี่วินาที',\n            ss: '%d วินาที',\n            m: '1 นาที',\n            mm: '%d นาที',\n            h: '1 ชั่วโมง',\n            hh: '%d ชั่วโมง',\n            d: '1 วัน',\n            dd: '%d วัน',\n            w: '1 สัปดาห์',\n            ww: '%d สัปดาห์',\n            M: '1 เดือน',\n            MM: '%d เดือน',\n            y: '1 ปี',\n            yy: '%d ปี',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$4 = {\n        1: \"'inji\",\n        5: \"'inji\",\n        8: \"'inji\",\n        70: \"'inji\",\n        80: \"'inji\",\n        2: \"'nji\",\n        7: \"'nji\",\n        20: \"'nji\",\n        50: \"'nji\",\n        3: \"'ünji\",\n        4: \"'ünji\",\n        100: \"'ünji\",\n        6: \"'njy\",\n        9: \"'unjy\",\n        10: \"'unjy\",\n        30: \"'unjy\",\n        60: \"'ynjy\",\n        90: \"'ynjy\",\n    };\n\n    hooks.defineLocale('tk', {\n        months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),\n        weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(\n            '_'\n        ),\n        weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),\n        weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün sagat] LT',\n            nextDay: '[ertir sagat] LT',\n            nextWeek: '[indiki] dddd [sagat] LT',\n            lastDay: '[düýn] LT',\n            lastWeek: '[geçen] dddd [sagat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s soň',\n            past: '%s öň',\n            s: 'birnäçe sekunt',\n            m: 'bir minut',\n            mm: '%d minut',\n            h: 'bir sagat',\n            hh: '%d sagat',\n            d: 'bir gün',\n            dd: '%d gün',\n            M: 'bir aý',\n            MM: '%d aý',\n            y: 'bir ýyl',\n            yy: '%d ýyl',\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {\n                        // special case for zero\n                        return number + \"'unjy\";\n                    }\n                    var a = number % 10,\n                        b = (number % 100) - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$4[a] || suffixes$4[b] || suffixes$4[c]);\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tl-ph', {\n        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(\n            '_'\n        ),\n        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'MM/D/YYYY',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY HH:mm',\n            LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'sa loob ng %s',\n            past: '%s ang nakalipas',\n            s: 'ilang segundo',\n            ss: '%d segundo',\n            m: 'isang minuto',\n            mm: '%d minuto',\n            h: 'isang oras',\n            hh: '%d oras',\n            d: 'isang araw',\n            dd: '%d araw',\n            M: 'isang buwan',\n            MM: '%d buwan',\n            y: 'isang taon',\n            yy: '%d taon',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'leS'\n                : output.indexOf('jar') !== -1\n                ? time.slice(0, -3) + 'waQ'\n                : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'nem'\n                : time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'Hu’'\n                : output.indexOf('jar') !== -1\n                ? time.slice(0, -3) + 'wen'\n                : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'ben'\n                : time + ' ret';\n        return time;\n    }\n\n    function translate$a(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n            ten = Math.floor((number % 100) / 10),\n            one = number % 10,\n            word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[one];\n        }\n        return word === '' ? 'pagh' : word;\n    }\n\n    hooks.defineLocale('tlh', {\n        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(\n            '_'\n        ),\n        monthsShort:\n            'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        weekdaysShort:\n            'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin:\n            'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: translateFuture,\n            past: translatePast,\n            s: 'puS lup',\n            ss: translate$a,\n            m: 'wa’ tup',\n            mm: translate$a,\n            h: 'wa’ rep',\n            hh: translate$a,\n            d: 'wa’ jaj',\n            dd: translate$a,\n            M: 'wa’ jar',\n            MM: translate$a,\n            y: 'wa’ DIS',\n            yy: translate$a,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$5 = {\n        1: \"'inci\",\n        5: \"'inci\",\n        8: \"'inci\",\n        70: \"'inci\",\n        80: \"'inci\",\n        2: \"'nci\",\n        7: \"'nci\",\n        20: \"'nci\",\n        50: \"'nci\",\n        3: \"'üncü\",\n        4: \"'üncü\",\n        100: \"'üncü\",\n        6: \"'ncı\",\n        9: \"'uncu\",\n        10: \"'uncu\",\n        30: \"'uncu\",\n        60: \"'ıncı\",\n        90: \"'ıncı\",\n    };\n\n    hooks.defineLocale('tr', {\n        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(\n            '_'\n        ),\n        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(\n            '_'\n        ),\n        weekdaysShort: 'Paz_Pzt_Sal_Çar_Per_Cum_Cmt'.split('_'),\n        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'öö' : 'ÖÖ';\n            } else {\n                return isLower ? 'ös' : 'ÖS';\n            }\n        },\n        meridiemParse: /öö|ÖÖ|ös|ÖS/,\n        isPM: function (input) {\n            return input === 'ös' || input === 'ÖS';\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün saat] LT',\n            nextDay: '[yarın saat] LT',\n            nextWeek: '[gelecek] dddd [saat] LT',\n            lastDay: '[dün] LT',\n            lastWeek: '[geçen] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s sonra',\n            past: '%s önce',\n            s: 'birkaç saniye',\n            ss: '%d saniye',\n            m: 'bir dakika',\n            mm: '%d dakika',\n            h: 'bir saat',\n            hh: '%d saat',\n            d: 'bir gün',\n            dd: '%d gün',\n            w: 'bir hafta',\n            ww: '%d hafta',\n            M: 'bir ay',\n            MM: '%d ay',\n            y: 'bir yıl',\n            yy: '%d yıl',\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {\n                        // special case for zero\n                        return number + \"'ıncı\";\n                    }\n                    var a = number % 10,\n                        b = (number % 100) - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$5[a] || suffixes$5[b] || suffixes$5[c]);\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    hooks.defineLocale('tzl', {\n        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM [dallas] YYYY',\n            LLL: 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM: function (input) {\n            return \"d'o\" === input.toLowerCase();\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? \"d'o\" : \"D'O\";\n            } else {\n                return isLower ? \"d'a\" : \"D'A\";\n            }\n        },\n        calendar: {\n            sameDay: '[oxhi à] LT',\n            nextDay: '[demà à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[ieiri à] LT',\n            lastWeek: '[sür el] dddd [lasteu à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'osprei %s',\n            past: 'ja%s',\n            s: processRelativeTime$8,\n            ss: processRelativeTime$8,\n            m: processRelativeTime$8,\n            mm: processRelativeTime$8,\n            h: processRelativeTime$8,\n            hh: processRelativeTime$8,\n            d: processRelativeTime$8,\n            dd: processRelativeTime$8,\n            M: processRelativeTime$8,\n            MM: processRelativeTime$8,\n            y: processRelativeTime$8,\n            yy: processRelativeTime$8,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    function processRelativeTime$8(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['viensas secunds', \"'iensas secunds\"],\n            ss: [number + ' secunds', '' + number + ' secunds'],\n            m: [\"'n míut\", \"'iens míut\"],\n            mm: [number + ' míuts', '' + number + ' míuts'],\n            h: [\"'n þora\", \"'iensa þora\"],\n            hh: [number + ' þoras', '' + number + ' þoras'],\n            d: [\"'n ziua\", \"'iensa ziua\"],\n            dd: [number + ' ziuas', '' + number + ' ziuas'],\n            M: [\"'n mes\", \"'iens mes\"],\n            MM: [number + ' mesen', '' + number + ' mesen'],\n            y: [\"'n ar\", \"'iens ar\"],\n            yy: [number + ' ars', '' + number + ' ars'],\n        };\n        return isFuture\n            ? format[key][0]\n            : withoutSuffix\n            ? format[key][0]\n            : format[key][1];\n    }\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm-latn', {\n        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(\n            '_'\n        ),\n        monthsShort:\n            'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(\n                '_'\n            ),\n        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dadkh s yan %s',\n            past: 'yan %s',\n            s: 'imik',\n            ss: '%d imik',\n            m: 'minuḍ',\n            mm: '%d minuḍ',\n            h: 'saɛa',\n            hh: '%d tassaɛin',\n            d: 'ass',\n            dd: '%d ossan',\n            M: 'ayowr',\n            MM: '%d iyyirn',\n            y: 'asgas',\n            yy: '%d isgasn',\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm', {\n        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(\n                '_'\n            ),\n        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past: 'ⵢⴰⵏ %s',\n            s: 'ⵉⵎⵉⴽ',\n            ss: '%d ⵉⵎⵉⴽ',\n            m: 'ⵎⵉⵏⵓⴺ',\n            mm: '%d ⵎⵉⵏⵓⴺ',\n            h: 'ⵙⴰⵄⴰ',\n            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d: 'ⴰⵙⵙ',\n            dd: '%d oⵙⵙⴰⵏ',\n            M: 'ⴰⵢoⵓⵔ',\n            MM: '%d ⵉⵢⵢⵉⵔⵏ',\n            y: 'ⴰⵙⴳⴰⵙ',\n            yy: '%d ⵉⵙⴳⴰⵙⵏ',\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n                '_'\n            ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل',\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$6(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural$4(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural$6(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative:\n                    'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                        '_'\n                    ),\n                accusative:\n                    'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                        '_'\n                    ),\n                genitive:\n                    'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                        '_'\n                    ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n            ? 'genitive'\n            : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    hooks.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone:\n                'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural$4,\n            m: relativeTimeWithPlural$4,\n            mm: relativeTimeWithPlural$4,\n            h: 'годину',\n            hh: relativeTimeWithPlural$4,\n            d: 'день',\n            dd: relativeTimeWithPlural$4,\n            M: 'місяць',\n            MM: relativeTimeWithPlural$4,\n            y: 'рік',\n            yy: relativeTimeWithPlural$4,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$b = [\n            'جنوری',\n            'فروری',\n            'مارچ',\n            'اپریل',\n            'مئی',\n            'جون',\n            'جولائی',\n            'اگست',\n            'ستمبر',\n            'اکتوبر',\n            'نومبر',\n            'دسمبر',\n        ],\n        days$2 = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];\n\n    hooks.defineLocale('ur', {\n        months: months$b,\n        monthsShort: months$b,\n        weekdays: days$2,\n        weekdaysShort: days$2,\n        weekdaysMin: days$2,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd، D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /صبح|شام/,\n        isPM: function (input) {\n            return 'شام' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar: {\n            sameDay: '[آج بوقت] LT',\n            nextDay: '[کل بوقت] LT',\n            nextWeek: 'dddd [بوقت] LT',\n            lastDay: '[گذشتہ روز بوقت] LT',\n            lastWeek: '[گذشتہ] dddd [بوقت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s بعد',\n            past: '%s قبل',\n            s: 'چند سیکنڈ',\n            ss: '%d سیکنڈ',\n            m: 'ایک منٹ',\n            mm: '%d منٹ',\n            h: 'ایک گھنٹہ',\n            hh: '%d گھنٹے',\n            d: 'ایک دن',\n            dd: '%d دن',\n            M: 'ایک ماہ',\n            MM: '%d ماہ',\n            y: 'ایک سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz-latn', {\n        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays:\n            'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(\n                '_'\n            ),\n        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'D MMMM YYYY, dddd HH:mm',\n        },\n        calendar: {\n            sameDay: '[Bugun soat] LT [da]',\n            nextDay: '[Ertaga] LT [da]',\n            nextWeek: 'dddd [kuni soat] LT [da]',\n            lastDay: '[Kecha soat] LT [da]',\n            lastWeek: \"[O'tgan] dddd [kuni soat] LT [da]\",\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'Yaqin %s ichida',\n            past: 'Bir necha %s oldin',\n            s: 'soniya',\n            ss: '%d soniya',\n            m: 'bir daqiqa',\n            mm: '%d daqiqa',\n            h: 'bir soat',\n            hh: '%d soat',\n            d: 'bir kun',\n            dd: '%d kun',\n            M: 'bir oy',\n            MM: '%d oy',\n            y: 'bir yil',\n            yy: '%d yil',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz', {\n        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(\n            '_'\n        ),\n        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'D MMMM YYYY, dddd HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бугун соат] LT [да]',\n            nextDay: '[Эртага] LT [да]',\n            nextWeek: 'dddd [куни соат] LT [да]',\n            lastDay: '[Кеча соат] LT [да]',\n            lastWeek: '[Утган] dddd [куни соат] LT [да]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'Якин %s ичида',\n            past: 'Бир неча %s олдин',\n            s: 'фурсат',\n            ss: '%d фурсат',\n            m: 'бир дакика',\n            mm: '%d дакика',\n            h: 'бир соат',\n            hh: '%d соат',\n            d: 'бир кун',\n            dd: '%d кун',\n            M: 'бир ой',\n            MM: '%d ой',\n            y: 'бир йил',\n            yy: '%d йил',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('vi', {\n        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(\n            '_'\n        ),\n        monthsShort:\n            'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(\n            '_'\n        ),\n        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact: true,\n        meridiemParse: /sa|ch/i,\n        isPM: function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [năm] YYYY',\n            LLL: 'D MMMM [năm] YYYY HH:mm',\n            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n            l: 'DD/M/YYYY',\n            ll: 'D MMM YYYY',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd, D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần trước lúc] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s tới',\n            past: '%s trước',\n            s: 'vài giây',\n            ss: '%d giây',\n            m: 'một phút',\n            mm: '%d phút',\n            h: 'một giờ',\n            hh: '%d giờ',\n            d: 'một ngày',\n            dd: '%d ngày',\n            w: 'một tuần',\n            ww: '%d tuần',\n            M: 'một tháng',\n            MM: '%d tháng',\n            y: 'một năm',\n            yy: '%d năm',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('x-pseudo', {\n        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(\n            '_'\n        ),\n        monthsShort:\n            'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(\n                '_'\n            ),\n        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[T~ódá~ý át] LT',\n            nextDay: '[T~ómó~rró~w át] LT',\n            nextWeek: 'dddd [át] LT',\n            lastDay: '[Ý~ést~érdá~ý át] LT',\n            lastWeek: '[L~ást] dddd [át] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'í~ñ %s',\n            past: '%s á~gó',\n            s: 'á ~féw ~sécó~ñds',\n            ss: '%d s~écóñ~ds',\n            m: 'á ~míñ~úté',\n            mm: '%d m~íñú~tés',\n            h: 'á~ñ hó~úr',\n            hh: '%d h~óúrs',\n            d: 'á ~dáý',\n            dd: '%d d~áýs',\n            M: 'á ~móñ~th',\n            MM: '%d m~óñt~hs',\n            y: 'á ~ýéár',\n            yy: '%d ý~éárs',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('yo', {\n        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(\n            '_'\n        ),\n        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Ònì ni] LT',\n            nextDay: '[Ọ̀la ni] LT',\n            nextWeek: \"dddd [Ọsẹ̀ tón'bọ] [ni] LT\",\n            lastDay: '[Àna ni] LT',\n            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ní %s',\n            past: '%s kọjá',\n            s: 'ìsẹjú aayá die',\n            ss: 'aayá %d',\n            m: 'ìsẹjú kan',\n            mm: 'ìsẹjú %d',\n            h: 'wákati kan',\n            hh: 'wákati %d',\n            d: 'ọjọ́ kan',\n            dd: 'ọjọ́ %d',\n            M: 'osù kan',\n            MM: 'osù %d',\n            y: 'ọdún kan',\n            yy: 'ọdún %d',\n        },\n        dayOfMonthOrdinalParse: /ọjọ́\\s\\d{1,2}/,\n        ordinal: 'ọjọ́ %d',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-cn', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日Ah点mm分',\n            LLLL: 'YYYY年M月D日ddddAh点mm分',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天]LT',\n            nextDay: '[明天]LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    return '[下]dddLT';\n                } else {\n                    return '[本]dddLT';\n                }\n            },\n            lastDay: '[昨天]LT',\n            lastWeek: function (now) {\n                if (this.week() !== now.week()) {\n                    return '[上]dddLT';\n                } else {\n                    return '[本]dddLT';\n                }\n            },\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s后',\n            past: '%s前',\n            s: '几秒',\n            ss: '%d 秒',\n            m: '1 分钟',\n            mm: '%d 分钟',\n            h: '1 小时',\n            hh: '%d 小时',\n            d: '1 天',\n            dd: '%d 天',\n            w: '1 周',\n            ww: '%d 周',\n            M: '1 个月',\n            MM: '%d 个月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-hk', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1200) {\n                return '上午';\n            } else if (hm === 1200) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天]LT',\n            nextDay: '[明天]LT',\n            nextWeek: '[下]ddddLT',\n            lastDay: '[昨天]LT',\n            lastWeek: '[上]ddddLT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-mo', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'D/M/YYYY',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天] LT',\n            nextDay: '[明天] LT',\n            nextWeek: '[下]dddd LT',\n            lastDay: '[昨天] LT',\n            lastWeek: '[上]dddd LT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s內',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-tw', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天] LT',\n            nextDay: '[明天] LT',\n            nextWeek: '[下]dddd LT',\n            lastDay: '[昨天] LT',\n            lastWeek: '[上]dddd LT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    hooks.locale('en');\n\n    return hooks;\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
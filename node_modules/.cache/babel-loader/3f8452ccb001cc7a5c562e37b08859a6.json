{"ast":null,"code":"var base64 = require('base64-js');\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. ðŸ˜œ\n */\n\n\nexports.init = function () {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};","map":{"version":3,"names":["base64","require","exports","init","BrotliDecompressBuffer","compressed","toByteArray"],"sources":["E:/Mern login/client/node_modules/brotli/dec/dictionary-browser.js"],"sourcesContent":["var base64 = require('base64-js');\n\n/**\n * The normal dictionary-data.js is quite large, which makes it \n * unsuitable for browser usage. In order to make it smaller, \n * we read dictionary.bin, which is a compressed version of\n * the dictionary, and on initial load, Brotli decompresses \n * it's own dictionary. ðŸ˜œ\n */\nexports.init = function() {\n  var BrotliDecompressBuffer = require('./decode').BrotliDecompressBuffer;\n  var compressed = base64.toByteArray(require('./dictionary.bin.js'));\n  return BrotliDecompressBuffer(compressed);\n};\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,OAAO,CAACC,IAAR,GAAe,YAAW;EACxB,IAAIC,sBAAsB,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,sBAAjD;;EACA,IAAIC,UAAU,GAAGL,MAAM,CAACM,WAAP,CAAmBL,OAAO,CAAC,qBAAD,CAA1B,CAAjB;EACA,OAAOG,sBAAsB,CAACC,UAAD,CAA7B;AACD,CAJD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { DecodeStream as $6uUbQ$DecodeStream, Struct as $6uUbQ$Struct, String as $6uUbQ$String, uint32 as $6uUbQ$uint32, Pointer as $6uUbQ$Pointer, uint16 as $6uUbQ$uint16, Array as $6uUbQ$Array, VoidPointer as $6uUbQ$VoidPointer, int16 as $6uUbQ$int16, uint24 as $6uUbQ$uint24, uint8 as $6uUbQ$uint8, VersionedStruct as $6uUbQ$VersionedStruct, LazyArray as $6uUbQ$LazyArray, Reserved as $6uUbQ$Reserved, int32 as $6uUbQ$int32, Bitfield as $6uUbQ$Bitfield, fixed32 as $6uUbQ$fixed32, Buffer as $6uUbQ$Buffer, Number as $6uUbQ$Number, resolveLength as $6uUbQ$resolveLength, fixed16 as $6uUbQ$fixed16, PropertyDescriptor as $6uUbQ$PropertyDescriptor, Fixed as $6uUbQ$Fixed, int8 as $6uUbQ$int8, Optional as $6uUbQ$Optional, EncodeStream as $6uUbQ$EncodeStream } from \"restructure\";\nimport $6uUbQ$swchelperssrc_define_propertymjs from \"@swc/helpers/src/_define_property.mjs\";\nimport $6uUbQ$swchelperssrc_ts_decoratemjs from \"@swc/helpers/src/_ts_decorate.mjs\";\nimport $6uUbQ$fastdeepequal from \"fast-deep-equal\";\nimport { getCombiningClass as $6uUbQ$getCombiningClass, getScript as $6uUbQ$getScript, isDigit as $6uUbQ$isDigit, getCategory as $6uUbQ$getCategory, isMark as $6uUbQ$isMark } from \"unicode-properties\";\nimport $6uUbQ$unicodetrie from \"unicode-trie\";\nimport $6uUbQ$dfa from \"dfa\";\nimport $6uUbQ$clone from \"clone\";\nimport $6uUbQ$tinyinflate from \"tiny-inflate\";\nimport $6uUbQ$brotlidecompressjs from \"brotli/decompress.js\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $d636bc798e7178db$exports = {};\n$parcel$export($d636bc798e7178db$exports, \"logErrors\", () => $d636bc798e7178db$export$bd5c5d8b8dcafd78);\n$parcel$export($d636bc798e7178db$exports, \"registerFormat\", () => $d636bc798e7178db$export$36b2f24e97d43be);\n$parcel$export($d636bc798e7178db$exports, \"create\", () => $d636bc798e7178db$export$185802fd694ee1f5);\n$parcel$export($d636bc798e7178db$exports, \"defaultLanguage\", () => $d636bc798e7178db$export$42940898df819940);\n$parcel$export($d636bc798e7178db$exports, \"setDefaultLanguage\", () => $d636bc798e7178db$export$5157e7780d44cc36);\nlet $d636bc798e7178db$export$bd5c5d8b8dcafd78 = false;\nlet $d636bc798e7178db$var$formats = [];\n\nfunction $d636bc798e7178db$export$36b2f24e97d43be(format) {\n  $d636bc798e7178db$var$formats.push(format);\n}\n\nfunction $d636bc798e7178db$export$185802fd694ee1f5(buffer, postscriptName) {\n  for (let i = 0; i < $d636bc798e7178db$var$formats.length; i++) {\n    let format = $d636bc798e7178db$var$formats[i];\n\n    if (format.probe(buffer)) {\n      let font = new format(new (0, $6uUbQ$DecodeStream)(buffer));\n      if (postscriptName) return font.getFont(postscriptName);\n      return font;\n    }\n  }\n\n  throw new Error(\"Unknown font format\");\n}\n\nlet $d636bc798e7178db$export$42940898df819940 = \"en\";\n\nfunction $d636bc798e7178db$export$5157e7780d44cc36() {\n  let lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"en\";\n  $d636bc798e7178db$export$42940898df819940 = lang;\n}\n\nfunction $e71565f2ce09cb6b$export$69a3209f1a06c04d(target, key1, descriptor) {\n  if (descriptor.get) {\n    let get = descriptor.get;\n\n    descriptor.get = function () {\n      let value = get.call(this);\n      Object.defineProperty(this, key1, {\n        value: value\n      });\n      return value;\n    };\n  } else if (typeof descriptor.value === \"function\") {\n    let fn = descriptor.value;\n    return {\n      get() {\n        let cache1 = new Map();\n\n        function memoized() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          let key = args.length > 0 ? args[0] : \"value\";\n          if (cache1.has(key)) return cache1.get(key);\n          let result = fn.apply(this, args);\n          cache1.set(key, result);\n          return result;\n        }\n\n        Object.defineProperty(this, key1, {\n          value: memoized\n        });\n        return memoized;\n      }\n\n    };\n  }\n}\n\nlet $26a62205ad06574e$var$SubHeader = new $6uUbQ$Struct({\n  firstCode: $6uUbQ$uint16,\n  entryCount: $6uUbQ$uint16,\n  idDelta: $6uUbQ$int16,\n  idRangeOffset: $6uUbQ$uint16\n});\nlet $26a62205ad06574e$var$CmapGroup = new $6uUbQ$Struct({\n  startCharCode: $6uUbQ$uint32,\n  endCharCode: $6uUbQ$uint32,\n  glyphID: $6uUbQ$uint32\n});\nlet $26a62205ad06574e$var$UnicodeValueRange = new $6uUbQ$Struct({\n  startUnicodeValue: $6uUbQ$uint24,\n  additionalCount: $6uUbQ$uint8\n});\nlet $26a62205ad06574e$var$UVSMapping = new $6uUbQ$Struct({\n  unicodeValue: $6uUbQ$uint24,\n  glyphID: $6uUbQ$uint16\n});\nlet $26a62205ad06574e$var$DefaultUVS = new $6uUbQ$Array($26a62205ad06574e$var$UnicodeValueRange, $6uUbQ$uint32);\nlet $26a62205ad06574e$var$NonDefaultUVS = new $6uUbQ$Array($26a62205ad06574e$var$UVSMapping, $6uUbQ$uint32);\nlet $26a62205ad06574e$var$VarSelectorRecord = new $6uUbQ$Struct({\n  varSelector: $6uUbQ$uint24,\n  defaultUVS: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$DefaultUVS, {\n    type: \"parent\"\n  }),\n  nonDefaultUVS: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$NonDefaultUVS, {\n    type: \"parent\"\n  })\n});\nlet $26a62205ad06574e$var$CmapSubtable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  0: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    codeMap: new $6uUbQ$LazyArray($6uUbQ$uint8, 256)\n  },\n  2: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    subHeaderKeys: new $6uUbQ$Array($6uUbQ$uint16, 256),\n    subHeaderCount: t => Math.max.apply(Math, t.subHeaderKeys),\n    subHeaders: new $6uUbQ$LazyArray($26a62205ad06574e$var$SubHeader, \"subHeaderCount\"),\n    glyphIndexArray: new $6uUbQ$LazyArray($6uUbQ$uint16, \"subHeaderCount\")\n  },\n  4: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    segCountX2: $6uUbQ$uint16,\n    segCount: t => t.segCountX2 >> 1,\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16,\n    endCode: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n    reservedPad: new $6uUbQ$Reserved($6uUbQ$uint16),\n    startCode: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n    idDelta: new $6uUbQ$LazyArray($6uUbQ$int16, \"segCount\"),\n    idRangeOffset: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n    glyphIndexArray: new $6uUbQ$LazyArray($6uUbQ$uint16, t => (t.length - t._currentOffset) / 2)\n  },\n  6: {\n    length: $6uUbQ$uint16,\n    language: $6uUbQ$uint16,\n    firstCode: $6uUbQ$uint16,\n    entryCount: $6uUbQ$uint16,\n    glyphIndices: new $6uUbQ$LazyArray($6uUbQ$uint16, \"entryCount\")\n  },\n  8: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint16,\n    is32: new $6uUbQ$LazyArray($6uUbQ$uint8, 8192),\n    nGroups: $6uUbQ$uint32,\n    groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n  },\n  10: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint32,\n    firstCode: $6uUbQ$uint32,\n    entryCount: $6uUbQ$uint32,\n    glyphIndices: new $6uUbQ$LazyArray($6uUbQ$uint16, \"numChars\")\n  },\n  12: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint32,\n    nGroups: $6uUbQ$uint32,\n    groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n  },\n  13: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    length: $6uUbQ$uint32,\n    language: $6uUbQ$uint32,\n    nGroups: $6uUbQ$uint32,\n    groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n  },\n  14: {\n    length: $6uUbQ$uint32,\n    numRecords: $6uUbQ$uint32,\n    varSelectors: new $6uUbQ$LazyArray($26a62205ad06574e$var$VarSelectorRecord, \"numRecords\")\n  }\n});\nlet $26a62205ad06574e$var$CmapEntry = new $6uUbQ$Struct({\n  platformID: $6uUbQ$uint16,\n  encodingID: $6uUbQ$uint16,\n  table: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$CmapSubtable, {\n    type: \"parent\",\n    lazy: true\n  })\n});\nvar // character to glyph mapping\n$26a62205ad06574e$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numSubtables: $6uUbQ$uint16,\n  tables: new $6uUbQ$Array($26a62205ad06574e$var$CmapEntry, \"numSubtables\")\n});\nvar // font header\n$f2612a29f92ac062$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$int32,\n  revision: $6uUbQ$int32,\n  checkSumAdjustment: $6uUbQ$uint32,\n  magicNumber: $6uUbQ$uint32,\n  flags: $6uUbQ$uint16,\n  unitsPerEm: $6uUbQ$uint16,\n  created: new $6uUbQ$Array($6uUbQ$int32, 2),\n  modified: new $6uUbQ$Array($6uUbQ$int32, 2),\n  xMin: $6uUbQ$int16,\n  yMin: $6uUbQ$int16,\n  xMax: $6uUbQ$int16,\n  yMax: $6uUbQ$int16,\n  macStyle: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"bold\", \"italic\", \"underline\", \"outline\", \"shadow\", \"condensed\", \"extended\"]),\n  lowestRecPPEM: $6uUbQ$uint16,\n  fontDirectionHint: $6uUbQ$int16,\n  indexToLocFormat: $6uUbQ$int16,\n  glyphDataFormat: $6uUbQ$int16 // 0 for current format\n\n});\nvar // horizontal header\n$2c179dd593583073$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$int32,\n  ascent: $6uUbQ$int16,\n  descent: $6uUbQ$int16,\n  lineGap: $6uUbQ$int16,\n  advanceWidthMax: $6uUbQ$uint16,\n  minLeftSideBearing: $6uUbQ$int16,\n  minRightSideBearing: $6uUbQ$int16,\n  xMaxExtent: $6uUbQ$int16,\n  caretSlopeRise: $6uUbQ$int16,\n  caretSlopeRun: $6uUbQ$int16,\n  caretOffset: $6uUbQ$int16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$int16, 4),\n  metricDataFormat: $6uUbQ$int16,\n  numberOfMetrics: $6uUbQ$uint16 // Number of advance widths in 'hmtx' table\n\n});\nlet $bdc9060542264b85$var$HmtxEntry = new $6uUbQ$Struct({\n  advance: $6uUbQ$uint16,\n  bearing: $6uUbQ$int16\n});\nvar $bdc9060542264b85$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  metrics: new $6uUbQ$LazyArray($bdc9060542264b85$var$HmtxEntry, t => t.parent.hhea.numberOfMetrics),\n  bearings: new $6uUbQ$LazyArray($6uUbQ$int16, t => t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\nvar // maxiumum profile\n$dbf51cb3d3fe409d$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$int32,\n  numGlyphs: $6uUbQ$uint16,\n  maxPoints: $6uUbQ$uint16,\n  maxContours: $6uUbQ$uint16,\n  maxComponentPoints: $6uUbQ$uint16,\n  maxComponentContours: $6uUbQ$uint16,\n  maxZones: $6uUbQ$uint16,\n  maxTwilightPoints: $6uUbQ$uint16,\n  maxStorage: $6uUbQ$uint16,\n  maxFunctionDefs: $6uUbQ$uint16,\n  maxInstructionDefs: $6uUbQ$uint16,\n  maxStackElements: $6uUbQ$uint16,\n  maxSizeOfInstructions: $6uUbQ$uint16,\n  maxComponentElements: $6uUbQ$uint16,\n  maxComponentDepth: $6uUbQ$uint16 // Maximum levels of recursion; 1 for simple components\n\n});\n\nfunction $e449ad78d50845fe$export$badc544e0651b6b1(platformID, encodingID) {\n  let languageID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  if (platformID === 1 && $e449ad78d50845fe$export$479e671907f486d1[languageID]) return $e449ad78d50845fe$export$479e671907f486d1[languageID];\n  return $e449ad78d50845fe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\n\nconst $e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS = new Set([\"x-mac-roman\", \"x-mac-cyrillic\", \"iso-8859-6\", \"iso-8859-8\"]);\nconst $e449ad78d50845fe$var$MAC_ENCODINGS = {\n  \"x-mac-croatian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\u0160\\u2122\\xb4\\xa8\\u2260\\u017D\\xd8\\u221E\\xb1\\u2264\\u2265\\u2206\\xb5\\u2202\\u2211\\u220F\\u0161\\u222B\\xaa\\xba\\u03A9\\u017E\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u0106\\xab\\u010C\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u0110\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\uF8FF\\xa9\\u2044\\u20AC\\u2039\\u203A\\xc6\\xbb\\u2013\\xb7\\u201A\\u201E\\u2030\\xc2\\u0107\\xc1\\u010D\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u0111\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u03C0\\xcb\\u02DA\\xb8\\xca\\xe6\\u02C7\",\n  \"x-mac-gaelic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u1E02\\xb1\\u2264\\u2265\\u1E03\\u010A\\u010B\\u1E0A\\u1E0B\\u1E1E\\u1E1F\\u0120\\u0121\\u1E40\\xe6\\xf8\\u1E41\\u1E56\\u1E57\\u027C\\u0192\\u017F\\u1E60\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1E61\\u1E9B\\xff\\u0178\\u1E6A\\u20AC\\u2039\\u203A\\u0176\\u0177\\u1E6B\\xb7\\u1EF2\\u1EF3\\u204A\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u2663\\xd2\\xda\\xdb\\xd9\\u0131\\xdd\\xfd\\u0174\\u0175\\u1E84\\u1E85\\u1E80\\u1E81\\u1E82\\u1E83\",\n  \"x-mac-greek\": \"\\xc4\\xb9\\xb2\\xc9\\xb3\\xd6\\xdc\\u0385\\xe0\\xe2\\xe4\\u0384\\xa8\\xe7\\xe9\\xe8\\xea\\xeb\\xa3\\u2122\\xee\\xef\\u2022\\xbd\\u2030\\xf4\\xf6\\xa6\\u20AC\\xf9\\xfb\\xfc\\u2020\\u0393\\u0394\\u0398\\u039B\\u039E\\u03A0\\xdf\\xae\\xa9\\u03A3\\u03AA\\xa7\\u2260\\xb0\\xb7\\u0391\\xb1\\u2264\\u2265\\xa5\\u0392\\u0395\\u0396\\u0397\\u0399\\u039A\\u039C\\u03A6\\u03AB\\u03A8\\u03A9\\u03AC\\u039D\\xac\\u039F\\u03A1\\u2248\\u03A4\\xab\\xbb\\u2026 \\u03A5\\u03A7\\u0386\\u0388\\u0153\\u2013\\u2015\\u201C\\u201D\\u2018\\u2019\\xf7\\u0389\\u038A\\u038C\\u038E\\u03AD\\u03AE\\u03AF\\u03CC\\u038F\\u03CD\\u03B1\\u03B2\\u03C8\\u03B4\\u03B5\\u03C6\\u03B3\\u03B7\\u03B9\\u03BE\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF\\u03C0\\u03CE\\u03C1\\u03C3\\u03C4\\u03B8\\u03C9\\u03C2\\u03C7\\u03C5\\u03B6\\u03CA\\u03CB\\u0390\\u03B0\\xad\",\n  \"x-mac-icelandic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\xdd\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\xd0\\xf0\\xde\\xfe\\xfd\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n  \"x-mac-inuit\": \"\\u1403\\u1404\\u1405\\u1406\\u140A\\u140B\\u1431\\u1432\\u1433\\u1434\\u1438\\u1439\\u1449\\u144E\\u144F\\u1450\\u1451\\u1455\\u1456\\u1466\\u146D\\u146E\\u146F\\u1470\\u1472\\u1473\\u1483\\u148B\\u148C\\u148D\\u148E\\u1490\\u1491\\xb0\\u14A1\\u14A5\\u14A6\\u2022\\xb6\\u14A7\\xae\\xa9\\u2122\\u14A8\\u14AA\\u14AB\\u14BB\\u14C2\\u14C3\\u14C4\\u14C5\\u14C7\\u14C8\\u14D0\\u14EF\\u14F0\\u14F1\\u14F2\\u14F4\\u14F5\\u1505\\u14D5\\u14D6\\u14D7\\u14D8\\u14DA\\u14DB\\u14EA\\u1528\\u1529\\u152A\\u152B\\u152D\\u2026 \\u152E\\u153E\\u1555\\u1556\\u1557\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1558\\u1559\\u155A\\u155D\\u1546\\u1547\\u1548\\u1549\\u154B\\u154C\\u1550\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1596\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u157C\\u0141\\u0142\",\n  \"x-mac-ce\": \"\\xc4\\u0100\\u0101\\xc9\\u0104\\xd6\\xdc\\xe1\\u0105\\u010C\\xe4\\u010D\\u0106\\u0107\\xe9\\u0179\\u017A\\u010E\\xed\\u010F\\u0112\\u0113\\u0116\\xf3\\u0117\\xf4\\xf6\\xf5\\xfa\\u011A\\u011B\\xfc\\u2020\\xb0\\u0118\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\u0119\\xa8\\u2260\\u0123\\u012E\\u012F\\u012A\\u2264\\u2265\\u012B\\u0136\\u2202\\u2211\\u0142\\u013B\\u013C\\u013D\\u013E\\u0139\\u013A\\u0145\\u0146\\u0143\\xac\\u221A\\u0144\\u0147\\u2206\\xab\\xbb\\u2026 \\u0148\\u0150\\xd5\\u0151\\u014C\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\u014D\\u0154\\u0155\\u0158\\u2039\\u203A\\u0159\\u0156\\u0157\\u0160\\u201A\\u201E\\u0161\\u015A\\u015B\\xc1\\u0164\\u0165\\xcd\\u017D\\u017E\\u016A\\xd3\\xd4\\u016B\\u016E\\xda\\u016F\\u0170\\u0171\\u0172\\u0173\\xdd\\xfd\\u0137\\u017B\\u0141\\u017C\\u0122\\u02C7\",\n  \"x-mac-romanian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\u0102\\u0218\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\u0103\\u0219\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\u2039\\u203A\\u021A\\u021B\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n  \"x-mac-turkish\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u011E\\u011F\\u0130\\u0131\\u015E\\u015F\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\uF8A0\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\"\n};\nconst $e449ad78d50845fe$var$encodingCache = new Map();\n\nfunction $e449ad78d50845fe$export$1dceb3c14ed68bee(encoding) {\n  let cached = $e449ad78d50845fe$var$encodingCache.get(encoding);\n  if (cached) return cached; // These encodings aren't supported by TextDecoder.\n\n  let mapping = $e449ad78d50845fe$var$MAC_ENCODINGS[encoding];\n\n  if (mapping) {\n    let res = new Map();\n\n    for (let i = 0; i < mapping.length; i++) res.set(mapping.charCodeAt(i), 0x80 + i);\n\n    $e449ad78d50845fe$var$encodingCache.set(encoding, res);\n    return res;\n  } // Only single byte encodings can be mapped 1:1.\n\n\n  if ($e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n    // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n    // Use this to create a mapping of code points.\n    let decoder = new TextDecoder(encoding);\n    let mapping = new Uint8Array(0x80);\n\n    for (let i = 0; i < 0x80; i++) mapping[i] = 0x80 + i;\n\n    let res = new Map();\n    let s = decoder.decode(mapping);\n\n    for (let i1 = 0; i1 < 0x80; i1++) res.set(s.charCodeAt(i1), 0x80 + i1);\n\n    $e449ad78d50845fe$var$encodingCache.set(encoding, res);\n    return res;\n  }\n}\n\nconst $e449ad78d50845fe$export$6fef87b7618bdf0b = [// unicode\n[\"utf16be\", \"utf16be\", \"utf16be\", \"utf16be\", \"utf16be\", \"utf16be\"], // macintosh\n// Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n// 0\tRoman                 17\tMalayalam\n// 1\tJapanese\t            18\tSinhalese\n// 2\tTraditional Chinese\t  19\tBurmese\n// 3\tKorean\t              20\tKhmer\n// 4\tArabic\t              21\tThai\n// 5\tHebrew\t              22\tLaotian\n// 6\tGreek\t                23\tGeorgian\n// 7\tRussian\t              24\tArmenian\n// 8\tRSymbol\t              25\tSimplified Chinese\n// 9\tDevanagari\t          26\tTibetan\n// 10\tGurmukhi\t            27\tMongolian\n// 11\tGujarati\t            28\tGeez\n// 12\tOriya\t                29\tSlavic\n// 13\tBengali\t              30\tVietnamese\n// 14\tTamil\t                31\tSindhi\n// 15\tTelugu\t              32\t(Uninterpreted)\n// 16\tKannada\n[\"x-mac-roman\", \"shift-jis\", \"big5\", \"euc-kr\", \"iso-8859-6\", \"iso-8859-8\", \"x-mac-greek\", \"x-mac-cyrillic\", \"x-mac-symbol\", \"x-mac-devanagari\", \"x-mac-gurmukhi\", \"x-mac-gujarati\", \"Oriya\", \"Bengali\", \"Tamil\", \"Telugu\", \"Kannada\", \"Malayalam\", \"Sinhalese\", \"Burmese\", \"Khmer\", \"iso-8859-11\", \"Laotian\", \"Georgian\", \"Armenian\", \"hz-gb-2312\", \"Tibetan\", \"Mongolian\", \"Geez\", \"x-mac-ce\", \"Vietnamese\", \"Sindhi\"], // ISO (deprecated)\n[\"ascii\"], // windows\n// Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n[\"symbol\", \"utf16be\", \"shift-jis\", \"gb18030\", \"big5\", \"x-cp20949\", \"johab\", null, null, null, \"utf16be\"]];\nconst $e449ad78d50845fe$export$479e671907f486d1 = {\n  15: \"x-mac-icelandic\",\n  17: \"x-mac-turkish\",\n  18: \"x-mac-croatian\",\n  24: \"x-mac-ce\",\n  25: \"x-mac-ce\",\n  26: \"x-mac-ce\",\n  27: \"x-mac-ce\",\n  28: \"x-mac-ce\",\n  30: \"x-mac-icelandic\",\n  37: \"x-mac-romanian\",\n  38: \"x-mac-ce\",\n  39: \"x-mac-ce\",\n  40: \"x-mac-ce\",\n  143: \"x-mac-inuit\",\n  146: \"x-mac-gaelic\"\n};\nconst $e449ad78d50845fe$export$2092376fd002e13 = [// unicode\n[], {\n  0: \"en\",\n  30: \"fo\",\n  60: \"ks\",\n  90: \"rw\",\n  1: \"fr\",\n  31: \"fa\",\n  61: \"ku\",\n  91: \"rn\",\n  2: \"de\",\n  32: \"ru\",\n  62: \"sd\",\n  92: \"ny\",\n  3: \"it\",\n  33: \"zh\",\n  63: \"bo\",\n  93: \"mg\",\n  4: \"nl\",\n  34: \"nl-BE\",\n  64: \"ne\",\n  94: \"eo\",\n  5: \"sv\",\n  35: \"ga\",\n  65: \"sa\",\n  128: \"cy\",\n  6: \"es\",\n  36: \"sq\",\n  66: \"mr\",\n  129: \"eu\",\n  7: \"da\",\n  37: \"ro\",\n  67: \"bn\",\n  130: \"ca\",\n  8: \"pt\",\n  38: \"cz\",\n  68: \"as\",\n  131: \"la\",\n  9: \"no\",\n  39: \"sk\",\n  69: \"gu\",\n  132: \"qu\",\n  10: \"he\",\n  40: \"si\",\n  70: \"pa\",\n  133: \"gn\",\n  11: \"ja\",\n  41: \"yi\",\n  71: \"or\",\n  134: \"ay\",\n  12: \"ar\",\n  42: \"sr\",\n  72: \"ml\",\n  135: \"tt\",\n  13: \"fi\",\n  43: \"mk\",\n  73: \"kn\",\n  136: \"ug\",\n  14: \"el\",\n  44: \"bg\",\n  74: \"ta\",\n  137: \"dz\",\n  15: \"is\",\n  45: \"uk\",\n  75: \"te\",\n  138: \"jv\",\n  16: \"mt\",\n  46: \"be\",\n  76: \"si\",\n  139: \"su\",\n  17: \"tr\",\n  47: \"uz\",\n  77: \"my\",\n  140: \"gl\",\n  18: \"hr\",\n  48: \"kk\",\n  78: \"km\",\n  141: \"af\",\n  19: \"zh-Hant\",\n  49: \"az-Cyrl\",\n  79: \"lo\",\n  142: \"br\",\n  20: \"ur\",\n  50: \"az-Arab\",\n  80: \"vi\",\n  143: \"iu\",\n  21: \"hi\",\n  51: \"hy\",\n  81: \"id\",\n  144: \"gd\",\n  22: \"th\",\n  52: \"ka\",\n  82: \"tl\",\n  145: \"gv\",\n  23: \"ko\",\n  53: \"mo\",\n  83: \"ms\",\n  146: \"ga\",\n  24: \"lt\",\n  54: \"ky\",\n  84: \"ms-Arab\",\n  147: \"to\",\n  25: \"pl\",\n  55: \"tg\",\n  85: \"am\",\n  148: \"el-polyton\",\n  26: \"hu\",\n  56: \"tk\",\n  86: \"ti\",\n  149: \"kl\",\n  27: \"es\",\n  57: \"mn-CN\",\n  87: \"om\",\n  150: \"az\",\n  28: \"lv\",\n  58: \"mn\",\n  88: \"so\",\n  151: \"nn\",\n  29: \"se\",\n  59: \"ps\",\n  89: \"sw\"\n}, // ISO (deprecated)\n[], {\n  0x0436: \"af\",\n  0x4009: \"en-IN\",\n  0x0487: \"rw\",\n  0x0432: \"tn\",\n  0x041C: \"sq\",\n  0x1809: \"en-IE\",\n  0x0441: \"sw\",\n  0x045B: \"si\",\n  0x0484: \"gsw\",\n  0x2009: \"en-JM\",\n  0x0457: \"kok\",\n  0x041B: \"sk\",\n  0x045E: \"am\",\n  0x4409: \"en-MY\",\n  0x0412: \"ko\",\n  0x0424: \"sl\",\n  0x1401: \"ar-DZ\",\n  0x1409: \"en-NZ\",\n  0x0440: \"ky\",\n  0x2C0A: \"es-AR\",\n  0x3C01: \"ar-BH\",\n  0x3409: \"en-PH\",\n  0x0454: \"lo\",\n  0x400A: \"es-BO\",\n  0x0C01: \"ar\",\n  0x4809: \"en-SG\",\n  0x0426: \"lv\",\n  0x340A: \"es-CL\",\n  0x0801: \"ar-IQ\",\n  0x1C09: \"en-ZA\",\n  0x0427: \"lt\",\n  0x240A: \"es-CO\",\n  0x2C01: \"ar-JO\",\n  0x2C09: \"en-TT\",\n  0x082E: \"dsb\",\n  0x140A: \"es-CR\",\n  0x3401: \"ar-KW\",\n  0x0809: \"en-GB\",\n  0x046E: \"lb\",\n  0x1C0A: \"es-DO\",\n  0x3001: \"ar-LB\",\n  0x0409: \"en\",\n  0x042F: \"mk\",\n  0x300A: \"es-EC\",\n  0x1001: \"ar-LY\",\n  0x3009: \"en-ZW\",\n  0x083E: \"ms-BN\",\n  0x440A: \"es-SV\",\n  0x1801: \"ary\",\n  0x0425: \"et\",\n  0x043E: \"ms\",\n  0x100A: \"es-GT\",\n  0x2001: \"ar-OM\",\n  0x0438: \"fo\",\n  0x044C: \"ml\",\n  0x480A: \"es-HN\",\n  0x4001: \"ar-QA\",\n  0x0464: \"fil\",\n  0x043A: \"mt\",\n  0x080A: \"es-MX\",\n  0x0401: \"ar-SA\",\n  0x040B: \"fi\",\n  0x0481: \"mi\",\n  0x4C0A: \"es-NI\",\n  0x2801: \"ar-SY\",\n  0x080C: \"fr-BE\",\n  0x047A: \"arn\",\n  0x180A: \"es-PA\",\n  0x1C01: \"aeb\",\n  0x0C0C: \"fr-CA\",\n  0x044E: \"mr\",\n  0x3C0A: \"es-PY\",\n  0x3801: \"ar-AE\",\n  0x040C: \"fr\",\n  0x047C: \"moh\",\n  0x280A: \"es-PE\",\n  0x2401: \"ar-YE\",\n  0x140C: \"fr-LU\",\n  0x0450: \"mn\",\n  0x500A: \"es-PR\",\n  0x042B: \"hy\",\n  0x180C: \"fr-MC\",\n  0x0850: \"mn-CN\",\n  0x0C0A: \"es\",\n  0x044D: \"as\",\n  0x100C: \"fr-CH\",\n  0x0461: \"ne\",\n  0x040A: \"es\",\n  0x082C: \"az-Cyrl\",\n  0x0462: \"fy\",\n  0x0414: \"nb\",\n  0x540A: \"es-US\",\n  0x042C: \"az\",\n  0x0456: \"gl\",\n  0x0814: \"nn\",\n  0x380A: \"es-UY\",\n  0x046D: \"ba\",\n  0x0437: \"ka\",\n  0x0482: \"oc\",\n  0x200A: \"es-VE\",\n  0x042D: \"eu\",\n  0x0C07: \"de-AT\",\n  0x0448: \"or\",\n  0x081D: \"sv-FI\",\n  0x0423: \"be\",\n  0x0407: \"de\",\n  0x0463: \"ps\",\n  0x041D: \"sv\",\n  0x0845: \"bn\",\n  0x1407: \"de-LI\",\n  0x0415: \"pl\",\n  0x045A: \"syr\",\n  0x0445: \"bn-IN\",\n  0x1007: \"de-LU\",\n  0x0416: \"pt\",\n  0x0428: \"tg\",\n  0x201A: \"bs-Cyrl\",\n  0x0807: \"de-CH\",\n  0x0816: \"pt-PT\",\n  0x085F: \"tzm\",\n  0x141A: \"bs\",\n  0x0408: \"el\",\n  0x0446: \"pa\",\n  0x0449: \"ta\",\n  0x047E: \"br\",\n  0x046F: \"kl\",\n  0x046B: \"qu-BO\",\n  0x0444: \"tt\",\n  0x0402: \"bg\",\n  0x0447: \"gu\",\n  0x086B: \"qu-EC\",\n  0x044A: \"te\",\n  0x0403: \"ca\",\n  0x0468: \"ha\",\n  0x0C6B: \"qu\",\n  0x041E: \"th\",\n  0x0C04: \"zh-HK\",\n  0x040D: \"he\",\n  0x0418: \"ro\",\n  0x0451: \"bo\",\n  0x1404: \"zh-MO\",\n  0x0439: \"hi\",\n  0x0417: \"rm\",\n  0x041F: \"tr\",\n  0x0804: \"zh\",\n  0x040E: \"hu\",\n  0x0419: \"ru\",\n  0x0442: \"tk\",\n  0x1004: \"zh-SG\",\n  0x040F: \"is\",\n  0x243B: \"smn\",\n  0x0480: \"ug\",\n  0x0404: \"zh-TW\",\n  0x0470: \"ig\",\n  0x103B: \"smj-NO\",\n  0x0422: \"uk\",\n  0x0483: \"co\",\n  0x0421: \"id\",\n  0x143B: \"smj\",\n  0x042E: \"hsb\",\n  0x041A: \"hr\",\n  0x045D: \"iu\",\n  0x0C3B: \"se-FI\",\n  0x0420: \"ur\",\n  0x101A: \"hr-BA\",\n  0x085D: \"iu-Latn\",\n  0x043B: \"se\",\n  0x0843: \"uz-Cyrl\",\n  0x0405: \"cs\",\n  0x083C: \"ga\",\n  0x083B: \"se-SE\",\n  0x0443: \"uz\",\n  0x0406: \"da\",\n  0x0434: \"xh\",\n  0x203B: \"sms\",\n  0x042A: \"vi\",\n  0x048C: \"prs\",\n  0x0435: \"zu\",\n  0x183B: \"sma-NO\",\n  0x0452: \"cy\",\n  0x0465: \"dv\",\n  0x0410: \"it\",\n  0x1C3B: \"sms\",\n  0x0488: \"wo\",\n  0x0813: \"nl-BE\",\n  0x0810: \"it-CH\",\n  0x044F: \"sa\",\n  0x0485: \"sah\",\n  0x0413: \"nl\",\n  0x0411: \"ja\",\n  0x1C1A: \"sr-Cyrl-BA\",\n  0x0478: \"ii\",\n  0x0C09: \"en-AU\",\n  0x044B: \"kn\",\n  0x0C1A: \"sr\",\n  0x046A: \"yo\",\n  0x2809: \"en-BZ\",\n  0x043F: \"kk\",\n  0x181A: \"sr-Latn-BA\",\n  0x1009: \"en-CA\",\n  0x0453: \"km\",\n  0x081A: \"sr-Latn\",\n  0x2409: \"en-029\",\n  0x0486: \"quc\",\n  0x046C: \"nso\"\n}];\nlet $2bcf221753ec8e32$var$NameRecord = new $6uUbQ$Struct({\n  platformID: $6uUbQ$uint16,\n  encodingID: $6uUbQ$uint16,\n  languageID: $6uUbQ$uint16,\n  nameID: $6uUbQ$uint16,\n  length: $6uUbQ$uint16,\n  string: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$String(\"length\", t => (0, $e449ad78d50845fe$export$badc544e0651b6b1)(t.platformID, t.encodingID, t.languageID)), {\n    type: \"parent\",\n    relativeTo: ctx => ctx.parent.stringOffset,\n    allowNull: false\n  })\n});\nlet $2bcf221753ec8e32$var$LangTagRecord = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  tag: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$String(\"length\", \"utf16be\"), {\n    type: \"parent\",\n    relativeTo: ctx => ctx.stringOffset\n  })\n});\nvar $2bcf221753ec8e32$var$NameTable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  0: {\n    count: $6uUbQ$uint16,\n    stringOffset: $6uUbQ$uint16,\n    records: new $6uUbQ$Array($2bcf221753ec8e32$var$NameRecord, \"count\")\n  },\n  1: {\n    count: $6uUbQ$uint16,\n    stringOffset: $6uUbQ$uint16,\n    records: new $6uUbQ$Array($2bcf221753ec8e32$var$NameRecord, \"count\"),\n    langTagCount: $6uUbQ$uint16,\n    langTags: new $6uUbQ$Array($2bcf221753ec8e32$var$LangTagRecord, \"langTagCount\")\n  }\n});\nvar $2bcf221753ec8e32$export$2e2bcd8739ae039 = $2bcf221753ec8e32$var$NameTable;\nconst $2bcf221753ec8e32$var$NAMES = [\"copyright\", \"fontFamily\", \"fontSubfamily\", \"uniqueSubfamily\", \"fullName\", \"version\", \"postscriptName\", \"trademark\", \"manufacturer\", \"designer\", \"description\", \"vendorURL\", \"designerURL\", \"license\", \"licenseURL\", null, \"preferredFamily\", \"preferredSubfamily\", \"compatibleFull\", \"sampleText\", \"postscriptCIDFontName\", \"wwsFamilyName\", \"wwsSubfamilyName\"];\n\n$2bcf221753ec8e32$var$NameTable.process = function (stream) {\n  var records = {};\n\n  for (let record of this.records) {\n    // find out what language this is for\n    let language = (0, $e449ad78d50845fe$export$2092376fd002e13)[record.platformID][record.languageID];\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n    if (language == null) language = record.platformID + \"-\" + record.languageID; // if the nameID is >= 256, it is a font feature record (AAT)\n\n    let key = record.nameID >= 256 ? \"fontFeatures\" : $2bcf221753ec8e32$var$NAMES[record.nameID] || record.nameID;\n    if (records[key] == null) records[key] = {};\n    let obj = records[key];\n    if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n    if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n  }\n\n  this.records = records;\n};\n\n$2bcf221753ec8e32$var$NameTable.preEncode = function () {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n  let records = [];\n\n  for (let key in this.records) {\n    let val = this.records[key];\n    if (key === \"fontFeatures\") continue;\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: $2bcf221753ec8e32$var$NAMES.indexOf(key),\n      length: val.en.length * 2,\n      string: val.en\n    });\n    if (key === \"postscriptName\") records.push({\n      platformID: 1,\n      encodingID: 0,\n      languageID: 0,\n      nameID: $2bcf221753ec8e32$var$NAMES.indexOf(key),\n      length: val.en.length,\n      string: val.en\n    });\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = $2bcf221753ec8e32$var$NameTable.size(this, null, false);\n};\n\nvar $84b272aa31b70606$var$OS2 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  header: {\n    xAvgCharWidth: $6uUbQ$int16,\n    usWeightClass: $6uUbQ$uint16,\n    usWidthClass: $6uUbQ$uint16,\n    fsType: new $6uUbQ$Bitfield($6uUbQ$uint16, [null, \"noEmbedding\", \"viewOnly\", \"editable\", null, null, null, null, \"noSubsetting\", \"bitmapOnly\"]),\n    ySubscriptXSize: $6uUbQ$int16,\n    ySubscriptYSize: $6uUbQ$int16,\n    ySubscriptXOffset: $6uUbQ$int16,\n    ySubscriptYOffset: $6uUbQ$int16,\n    ySuperscriptXSize: $6uUbQ$int16,\n    ySuperscriptYSize: $6uUbQ$int16,\n    ySuperscriptXOffset: $6uUbQ$int16,\n    ySuperscriptYOffset: $6uUbQ$int16,\n    yStrikeoutSize: $6uUbQ$int16,\n    yStrikeoutPosition: $6uUbQ$int16,\n    sFamilyClass: $6uUbQ$int16,\n    panose: new $6uUbQ$Array($6uUbQ$uint8, 10),\n    ulCharRange: new $6uUbQ$Array($6uUbQ$uint32, 4),\n    vendorID: new $6uUbQ$String(4),\n    fsSelection: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"italic\", \"underscore\", \"negative\", \"outlined\", \"strikeout\", \"bold\", \"regular\", \"useTypoMetrics\", \"wws\", \"oblique\"]),\n    usFirstCharIndex: $6uUbQ$uint16,\n    usLastCharIndex: $6uUbQ$uint16 // The maximum Unicode index in this font\n\n  },\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n  1: {\n    typoAscender: $6uUbQ$int16,\n    typoDescender: $6uUbQ$int16,\n    typoLineGap: $6uUbQ$int16,\n    winAscent: $6uUbQ$uint16,\n    winDescent: $6uUbQ$uint16,\n    codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2)\n  },\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender: $6uUbQ$int16,\n    typoDescender: $6uUbQ$int16,\n    typoLineGap: $6uUbQ$int16,\n    winAscent: $6uUbQ$uint16,\n    winDescent: $6uUbQ$uint16,\n    codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2),\n    xHeight: $6uUbQ$int16,\n    capHeight: $6uUbQ$int16,\n    defaultChar: $6uUbQ$uint16,\n    breakChar: $6uUbQ$uint16,\n    maxContent: $6uUbQ$uint16\n  },\n  5: {\n    typoAscender: $6uUbQ$int16,\n    typoDescender: $6uUbQ$int16,\n    typoLineGap: $6uUbQ$int16,\n    winAscent: $6uUbQ$uint16,\n    winDescent: $6uUbQ$uint16,\n    codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2),\n    xHeight: $6uUbQ$int16,\n    capHeight: $6uUbQ$int16,\n    defaultChar: $6uUbQ$uint16,\n    breakChar: $6uUbQ$uint16,\n    maxContent: $6uUbQ$uint16,\n    usLowerOpticalPointSize: $6uUbQ$uint16,\n    usUpperOpticalPointSize: $6uUbQ$uint16\n  }\n});\nlet $84b272aa31b70606$var$versions = $84b272aa31b70606$var$OS2.versions;\n$84b272aa31b70606$var$versions[3] = $84b272aa31b70606$var$versions[4] = $84b272aa31b70606$var$versions[2];\nvar $84b272aa31b70606$export$2e2bcd8739ae039 = $84b272aa31b70606$var$OS2;\nvar // PostScript information\n$32d9e2eb9565d93c$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$fixed32, {\n  header: {\n    italicAngle: $6uUbQ$fixed32,\n    underlinePosition: $6uUbQ$int16,\n    underlineThickness: $6uUbQ$int16,\n    isFixedPitch: $6uUbQ$uint32,\n    minMemType42: $6uUbQ$uint32,\n    maxMemType42: $6uUbQ$uint32,\n    minMemType1: $6uUbQ$uint32,\n    maxMemType1: $6uUbQ$uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n\n  },\n  1: {},\n  2: {\n    numberOfGlyphs: $6uUbQ$uint16,\n    glyphNameIndex: new $6uUbQ$Array($6uUbQ$uint16, \"numberOfGlyphs\"),\n    names: new $6uUbQ$Array(new $6uUbQ$String($6uUbQ$uint8))\n  },\n  2.5: {\n    numberOfGlyphs: $6uUbQ$uint16,\n    offsets: new $6uUbQ$Array($6uUbQ$uint8, \"numberOfGlyphs\")\n  },\n  3: {},\n  4: {\n    map: new $6uUbQ$Array($6uUbQ$uint32, t => t.parent.maxp.numGlyphs)\n  }\n});\nvar // An array of predefined values accessible by instructions\n$5202bd9d9ad8eaac$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  controlValues: new $6uUbQ$Array($6uUbQ$int16)\n});\nvar // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$5c0f37ca5ffb1850$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  instructions: new $6uUbQ$Array($6uUbQ$uint8)\n});\nlet $2b2b260902b1c57e$var$loca = new $6uUbQ$VersionedStruct(\"head.indexToLocFormat\", {\n  0: {\n    offsets: new $6uUbQ$Array($6uUbQ$uint16)\n  },\n  1: {\n    offsets: new $6uUbQ$Array($6uUbQ$uint32)\n  }\n});\n\n$2b2b260902b1c57e$var$loca.process = function () {\n  if (this.version === 0 && !this._processed) {\n    for (let i = 0; i < this.offsets.length; i++) this.offsets[i] <<= 1;\n\n    this._processed = true;\n  }\n};\n\n$2b2b260902b1c57e$var$loca.preEncode = function () {\n  if (this.version === 0 && this._processed !== false) {\n    for (let i = 0; i < this.offsets.length; i++) this.offsets[i] >>>= 1;\n\n    this._processed = false;\n  }\n};\n\nvar $2b2b260902b1c57e$export$2e2bcd8739ae039 = $2b2b260902b1c57e$var$loca;\nvar // Set of instructions executed whenever the point size or font transformation change\n$7afb878c7bea4f66$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  controlValueProgram: new $6uUbQ$Array($6uUbQ$uint8)\n});\nvar // only used for encoding\n$6c92b6371bce8bd9$export$2e2bcd8739ae039 = new $6uUbQ$Array(new $6uUbQ$Buffer());\n\nclass $43e9821ef3717eec$export$2e2bcd8739ae039 {\n  getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) ctx = ctx.parent;\n\n    return ctx ? ctx.version : -1;\n  }\n\n  decode(stream, parent) {\n    let version = this.getCFFVersion(parent);\n    let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n    if (count === 0) return [];\n    let offSize = stream.readUInt8();\n    let offsetType;\n    if (offSize === 1) offsetType = $6uUbQ$uint8;else if (offSize === 2) offsetType = $6uUbQ$uint16;else if (offSize === 3) offsetType = $6uUbQ$uint24;else if (offSize === 4) offsetType = $6uUbQ$uint32;else throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n    let ret = [];\n    let startPos = stream.pos + (count + 1) * offSize - 1;\n    let start = offsetType.decode(stream);\n\n    for (let i = 0; i < count; i++) {\n      let end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        let pos = stream.pos;\n        stream.pos = startPos + start;\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else ret.push({\n        offset: startPos + start,\n        length: end - start\n      });\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  }\n\n  size(arr, parent) {\n    let size = 2;\n    if (arr.length === 0) return size;\n    let type = this.type || new $6uUbQ$Buffer(); // find maximum offset to detminine offset type\n\n    let offset = 1;\n\n    for (let i = 0; i < arr.length; i++) {\n      let item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    let offsetType;\n    if (offset <= 0xff) offsetType = $6uUbQ$uint8;else if (offset <= 0xffff) offsetType = $6uUbQ$uint16;else if (offset <= 0xffffff) offsetType = $6uUbQ$uint24;else if (offset <= 0xffffffff) offsetType = $6uUbQ$uint32;else throw new Error(\"Bad offset in CFFIndex\");\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n    return size;\n  }\n\n  encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) return;\n    let type = this.type || new $6uUbQ$Buffer(); // find maximum offset to detminine offset type\n\n    let sizes = [];\n    let offset = 1;\n\n    for (let item of arr) {\n      let s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    let offsetType;\n    if (offset <= 0xff) offsetType = $6uUbQ$uint8;else if (offset <= 0xffff) offsetType = $6uUbQ$uint16;else if (offset <= 0xffffff) offsetType = $6uUbQ$uint24;else if (offset <= 0xffffffff) offsetType = $6uUbQ$uint32;else throw new Error(\"Bad offset in CFFIndex\"); // write offset size\n\n    stream.writeUInt8(offsetType.size()); // write elements\n\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (let size of sizes) {\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (let item1 of arr) type.encode(stream, item1, parent);\n\n    return;\n  }\n\n  constructor(type) {\n    this.type = type;\n  }\n\n}\n\nconst $c2d28e92708f99da$var$FLOAT_EOF = 0xf;\nconst $c2d28e92708f99da$var$FLOAT_LOOKUP = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"E\", \"E-\", null, \"-\"];\nconst $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP = {\n  \".\": 10,\n  \"E\": 11,\n  \"E-\": 12,\n  \"-\": 14\n};\n\nclass $c2d28e92708f99da$export$2e2bcd8739ae039 {\n  static decode(stream, value) {\n    if (32 <= value && value <= 246) return value - 139;\n    if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n    if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n    if (value === 28) return stream.readInt16BE();\n    if (value === 29) return stream.readInt32BE();\n\n    if (value === 30) {\n      let str = \"\";\n\n      while (true) {\n        let b = stream.readUInt8();\n        let n1 = b >> 4;\n        if (n1 === $c2d28e92708f99da$var$FLOAT_EOF) break;\n        str += $c2d28e92708f99da$var$FLOAT_LOOKUP[n1];\n        let n2 = b & 15;\n        if (n2 === $c2d28e92708f99da$var$FLOAT_EOF) break;\n        str += $c2d28e92708f99da$var$FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  }\n\n  static size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) value = 32768;\n\n    if ((value | 0) !== value) {\n      let str = \"\" + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n    } else if (-107 <= value && value <= 107) return 1;else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;else if (-32768 <= value && value <= 32767) return 3;else return 5;\n  }\n\n  static encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    let val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    } else if ((val | 0) !== val) {\n      stream.writeUInt8(30);\n      let str = \"\" + val;\n\n      for (let i = 0; i < str.length; i += 2) {\n        let c1 = str[i];\n        let n1 = $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n        if (i === str.length - 1) var n2 = $c2d28e92708f99da$var$FLOAT_EOF;else {\n          let c2 = str[i + 1];\n          var n2 = $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n        stream.writeUInt8(n1 << 4 | n2 & 15);\n      }\n\n      if (n2 !== $c2d28e92708f99da$var$FLOAT_EOF) return stream.writeUInt8($c2d28e92708f99da$var$FLOAT_EOF << 4);\n    } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  }\n\n}\n\nclass $61aa549f16d58b9b$export$2e2bcd8739ae039 {\n  decodeOperands(type, stream, ret, operands) {\n    if (Array.isArray(type)) return operands.map((op, i) => this.decodeOperands(type[i], stream, ret, [op]));else if (type.decode != null) return type.decode(stream, ret, operands);else switch (type) {\n      case \"number\":\n      case \"offset\":\n      case \"sid\":\n        return operands[0];\n\n      case \"boolean\":\n        return !!operands[0];\n\n      default:\n        return operands;\n    }\n  }\n\n  encodeOperands(type, stream, ctx, operands) {\n    if (Array.isArray(type)) return operands.map((op, i) => this.encodeOperands(type[i], stream, ctx, op)[0]);else if (type.encode != null) return type.encode(stream, operands, ctx);else if (typeof operands === \"number\") return [operands];else if (typeof operands === \"boolean\") return [+operands];else if (Array.isArray(operands)) return operands;else return [operands];\n  }\n\n  decode(stream, parent) {\n    let end = stream.pos + parent.length;\n    let ret = {};\n    let operands = []; // define hidden properties\n\n    Object.defineProperties(ret, {\n      parent: {\n        value: parent\n      },\n      _startOffset: {\n        value: stream.pos\n      }\n    }); // fill in defaults\n\n    for (let key in this.fields) {\n      let field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      let b = stream.readUInt8();\n\n      if (b < 28) {\n        if (b === 12) b = b << 8 | stream.readUInt8();\n        let field = this.fields[b];\n        if (!field) throw new Error(`Unknown operator ${b}`);\n        let val = this.decodeOperands(field[2], stream, ret, operands);\n\n        if (val != null) {\n          if (val instanceof (0, $6uUbQ$PropertyDescriptor)) Object.defineProperty(ret, field[1], val);else ret[field[1]] = val;\n        }\n\n        operands = [];\n      } else operands.push((0, $c2d28e92708f99da$export$2e2bcd8739ae039).decode(stream, b));\n    }\n\n    return ret;\n  }\n\n  size(dict, parent) {\n    let includePointers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let ctx = {\n      parent: parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n    let len = 0;\n\n    for (let k in this.fields) {\n      let field = this.fields[k];\n      let val = dict[field[1]];\n      if (val == null || (0, $6uUbQ$fastdeepequal)(val, field[3])) continue;\n      let operands = this.encodeOperands(field[2], null, ctx, val);\n\n      for (let op of operands) len += (0, $c2d28e92708f99da$export$2e2bcd8739ae039).size(op);\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) len += ctx.pointerSize;\n    return len;\n  }\n\n  encode(stream, dict, parent) {\n    let ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent: parent,\n      val: dict,\n      pointerSize: 0\n    };\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (let field of this.ops) {\n      let val = dict[field[1]];\n      if (val == null || (0, $6uUbQ$fastdeepequal)(val, field[3])) continue;\n      let operands = this.encodeOperands(field[2], stream, ctx, val);\n\n      for (let op of operands) (0, $c2d28e92708f99da$export$2e2bcd8739ae039).encode(stream, op);\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n\n      for (let op1 of key) stream.writeUInt8(op1);\n    }\n\n    let i = 0;\n\n    while (i < ctx.pointers.length) {\n      let ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  }\n\n  constructor() {\n    let ops = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    this.ops = ops;\n    this.fields = {};\n\n    for (let field of ops) {\n      let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n}\n\nclass $0e34a43d05bde82c$export$2e2bcd8739ae039 extends $6uUbQ$Pointer {\n  decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: () => operands[0]\n    };\n    return super.decode(stream, parent, operands);\n  }\n\n  encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: () => 0\n      };\n      this.size(value, ctx);\n      return [new $0e34a43d05bde82c$var$Ptr(0)];\n    }\n\n    let ptr = null;\n    this.offsetType = {\n      encode: (stream, val) => ptr = val\n    };\n    super.encode(stream, value, ctx);\n    return [new $0e34a43d05bde82c$var$Ptr(ptr)];\n  }\n\n  constructor(type) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (options.type == null) options.type = \"global\";\n    super(null, type, options);\n  }\n\n}\n\nclass $0e34a43d05bde82c$var$Ptr {\n  valueOf() {\n    return this.val;\n  }\n\n  constructor(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n}\n\nclass $6d59db2e29cc77b3$var$CFFBlendOp {\n  static decode(stream, parent, operands) {\n    let numBlends = operands.pop(); // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n\n    while (operands.length > numBlends) operands.pop();\n  }\n\n}\n\nvar $6d59db2e29cc77b3$export$2e2bcd8739ae039 = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([// key       name                    type                                          default\n[6, \"BlueValues\", \"delta\", null], [7, \"OtherBlues\", \"delta\", null], [8, \"FamilyBlues\", \"delta\", null], [9, \"FamilyOtherBlues\", \"delta\", null], [[12, 9], \"BlueScale\", \"number\", 0.039625], [[12, 10], \"BlueShift\", \"number\", 7], [[12, 11], \"BlueFuzz\", \"number\", 1], [10, \"StdHW\", \"number\", null], [11, \"StdVW\", \"number\", null], [[12, 12], \"StemSnapH\", \"delta\", null], [[12, 13], \"StemSnapV\", \"delta\", null], [[12, 14], \"ForceBold\", \"boolean\", false], [[12, 17], \"LanguageGroup\", \"number\", 0], [[12, 18], \"ExpansionFactor\", \"number\", 0.06], [[12, 19], \"initialRandomSeed\", \"number\", 0], [20, \"defaultWidthX\", \"number\", 0], [21, \"nominalWidthX\", \"number\", 0], [22, \"vsindex\", \"number\", 0], [23, \"blend\", $6d59db2e29cc77b3$var$CFFBlendOp, null], [19, \"Subrs\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(), {\n  type: \"local\"\n}), null]]);\nvar // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n$229224aec43783c5$export$2e2bcd8739ae039 = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\", \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"];\nlet $bc0433d9b7e41f5f$export$dee0027060fa13bd = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"\", \"questiondown\", \"\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"\", \"ring\", \"cedilla\", \"\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"AE\", \"\", \"ordfeminine\", \"\", \"\", \"\", \"\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"\", \"\", \"\", \"\", \"\", \"ae\", \"\", \"\", \"\", \"dotlessi\", \"\", \"\", \"lslash\", \"oslash\", \"oe\", \"germandbls\"];\nlet $bc0433d9b7e41f5f$export$4f58f497e14a53c3 = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"\", \"\", \"isuperior\", \"\", \"\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"\", \"\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"\", \"\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"\", \"Dotaccentsmall\", \"\", \"\", \"Macronsmall\", \"\", \"\", \"figuredash\", \"hypheninferior\", \"\", \"\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"\", \"\", \"\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"\", \"\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"];\nlet $ef658f5c9a1488b2$export$c33b50336c234f16 = [\".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\", \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\", \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\", \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\", \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\", \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\", \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\", \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\", \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\", \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\", \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\", \"ydieresis\", \"zcaron\"];\nlet $ef658f5c9a1488b2$export$3ed0f9e1fee8d489 = [\".notdef\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\", \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"];\nlet $ef658f5c9a1488b2$export$dc28be11139d4120 = [\".notdef\", \"space\", \"dollaroldstyle\", \"dollarsuperior\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"parenrightinferior\", \"hyphensuperior\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"centoldstyle\", \"figuredash\", \"hypheninferior\", \"onequarter\", \"onehalf\", \"threequarters\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\"]; //########################\n// Scripts and Languages #\n//########################\n\nlet $7cbbe4e24ef3cb75$var$LangSysTable = new $6uUbQ$Struct({\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  reqFeatureIndex: $6uUbQ$uint16,\n  featureCount: $6uUbQ$uint16,\n  featureIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"featureCount\")\n});\nlet $7cbbe4e24ef3cb75$var$LangSysRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  langSys: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$LangSysTable, {\n    type: \"parent\"\n  })\n});\nlet $7cbbe4e24ef3cb75$var$Script = new $6uUbQ$Struct({\n  defaultLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$LangSysTable),\n  count: $6uUbQ$uint16,\n  langSysRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LangSysRecord, \"count\")\n});\nlet $7cbbe4e24ef3cb75$var$ScriptRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  script: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$Script, {\n    type: \"parent\"\n  })\n});\nlet $7cbbe4e24ef3cb75$export$3e15fc05ce864229 = new $6uUbQ$Array($7cbbe4e24ef3cb75$var$ScriptRecord, $6uUbQ$uint16); //#######################\n// Features and Lookups #\n//#######################\n\nlet $7cbbe4e24ef3cb75$var$FeatureParams = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  nameID: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$export$6e91cf7616333d5 = new $6uUbQ$Struct({\n  featureParams: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$FeatureParams),\n  lookupCount: $6uUbQ$uint16,\n  lookupListIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$FeatureRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  feature: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$6e91cf7616333d5, {\n    type: \"parent\"\n  })\n});\nlet $7cbbe4e24ef3cb75$export$aa18130def4b6cb4 = new $6uUbQ$Array($7cbbe4e24ef3cb75$var$FeatureRecord, $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$var$LookupFlags = new $6uUbQ$Struct({\n  markAttachmentType: $6uUbQ$uint8,\n  flags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\"rightToLeft\", \"ignoreBaseGlyphs\", \"ignoreLigatures\", \"ignoreMarks\", \"useMarkFilteringSet\"])\n});\n\nfunction $7cbbe4e24ef3cb75$export$df0008c6ff2da22a(SubTable) {\n  let Lookup = new $6uUbQ$Struct({\n    lookupType: $6uUbQ$uint16,\n    flags: $7cbbe4e24ef3cb75$var$LookupFlags,\n    subTableCount: $6uUbQ$uint16,\n    subTables: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, SubTable), \"subTableCount\"),\n    markFilteringSet: new $6uUbQ$Optional($6uUbQ$uint16, t => t.flags.flags.useMarkFilteringSet)\n  });\n  return new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, Lookup), $6uUbQ$uint16);\n} //#################\n// Coverage Table #\n//#################\n\n\nlet $7cbbe4e24ef3cb75$var$RangeRecord = new $6uUbQ$Struct({\n  start: $6uUbQ$uint16,\n  end: $6uUbQ$uint16,\n  startCoverageIndex: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$export$17608c3f81a6111 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    glyphCount: $6uUbQ$uint16,\n    glyphs: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n  },\n  2: {\n    rangeCount: $6uUbQ$uint16,\n    rangeRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$RangeRecord, \"rangeCount\")\n  }\n}); //#########################\n// Class Definition Table #\n//#########################\n\nlet $7cbbe4e24ef3cb75$var$ClassRangeRecord = new $6uUbQ$Struct({\n  start: $6uUbQ$uint16,\n  end: $6uUbQ$uint16,\n  class: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$export$843d551fbbafef71 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    startGlyph: $6uUbQ$uint16,\n    glyphCount: $6uUbQ$uint16,\n    classValueArray: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n  },\n  2: {\n    classRangeCount: $6uUbQ$uint16,\n    classRangeRecord: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$ClassRangeRecord, \"classRangeCount\")\n  }\n});\nlet $7cbbe4e24ef3cb75$export$8215d14a63d9fb10 = new $6uUbQ$Struct({\n  a: $6uUbQ$uint16,\n  b: $6uUbQ$uint16,\n  deltaFormat: $6uUbQ$uint16\n}); //#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nlet $7cbbe4e24ef3cb75$var$LookupRecord = new $6uUbQ$Struct({\n  sequenceIndex: $6uUbQ$uint16,\n  lookupListIndex: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$var$Rule = new $6uUbQ$Struct({\n  glyphCount: $6uUbQ$uint16,\n  lookupCount: $6uUbQ$uint16,\n  input: new $6uUbQ$Array($6uUbQ$uint16, t => t.glyphCount - 1),\n  lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$RuleSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$Rule), $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$var$ClassRule = new $6uUbQ$Struct({\n  glyphCount: $6uUbQ$uint16,\n  lookupCount: $6uUbQ$uint16,\n  classes: new $6uUbQ$Array($6uUbQ$uint16, t => t.glyphCount - 1),\n  lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$ClassSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ClassRule), $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$export$841858b892ce1f4c = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    ruleSetCount: $6uUbQ$uint16,\n    ruleSets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$RuleSet), \"ruleSetCount\")\n  },\n  2: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    classDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    classSetCnt: $6uUbQ$uint16,\n    classSet: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ClassSet), \"classSetCnt\")\n  },\n  3: {\n    glyphCount: $6uUbQ$uint16,\n    lookupCount: $6uUbQ$uint16,\n    coverages: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"glyphCount\"),\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n  }\n}); //######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nlet $7cbbe4e24ef3cb75$var$ChainRule = new $6uUbQ$Struct({\n  backtrackGlyphCount: $6uUbQ$uint16,\n  backtrack: new $6uUbQ$Array($6uUbQ$uint16, \"backtrackGlyphCount\"),\n  inputGlyphCount: $6uUbQ$uint16,\n  input: new $6uUbQ$Array($6uUbQ$uint16, t => t.inputGlyphCount - 1),\n  lookaheadGlyphCount: $6uUbQ$uint16,\n  lookahead: new $6uUbQ$Array($6uUbQ$uint16, \"lookaheadGlyphCount\"),\n  lookupCount: $6uUbQ$uint16,\n  lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$ChainRuleSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRule), $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$export$5e6d09e6861162f6 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    chainCount: $6uUbQ$uint16,\n    chainRuleSets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRuleSet), \"chainCount\")\n  },\n  2: {\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n    backtrackClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    inputClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    lookaheadClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n    chainCount: $6uUbQ$uint16,\n    chainClassSet: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRuleSet), \"chainCount\")\n  },\n  3: {\n    backtrackGlyphCount: $6uUbQ$uint16,\n    backtrackCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n    inputGlyphCount: $6uUbQ$uint16,\n    inputCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"inputGlyphCount\"),\n    lookaheadGlyphCount: $6uUbQ$uint16,\n    lookaheadCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n    lookupCount: $6uUbQ$uint16,\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n  }\n});\n/*******************\n * Variation Store *\n *******************/\n\nlet $1a47b0c45c1c22fe$var$F2DOT14 = new $6uUbQ$Fixed(16, \"BE\", 14);\nlet $1a47b0c45c1c22fe$var$RegionAxisCoordinates = new $6uUbQ$Struct({\n  startCoord: $1a47b0c45c1c22fe$var$F2DOT14,\n  peakCoord: $1a47b0c45c1c22fe$var$F2DOT14,\n  endCoord: $1a47b0c45c1c22fe$var$F2DOT14\n});\nlet $1a47b0c45c1c22fe$var$VariationRegionList = new $6uUbQ$Struct({\n  axisCount: $6uUbQ$uint16,\n  regionCount: $6uUbQ$uint16,\n  variationRegions: new $6uUbQ$Array(new $6uUbQ$Array($1a47b0c45c1c22fe$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nlet $1a47b0c45c1c22fe$var$DeltaSet = new $6uUbQ$Struct({\n  shortDeltas: new $6uUbQ$Array($6uUbQ$int16, t => t.parent.shortDeltaCount),\n  regionDeltas: new $6uUbQ$Array($6uUbQ$int8, t => t.parent.regionIndexCount - t.parent.shortDeltaCount),\n  deltas: t => t.shortDeltas.concat(t.regionDeltas)\n});\nlet $1a47b0c45c1c22fe$var$ItemVariationData = new $6uUbQ$Struct({\n  itemCount: $6uUbQ$uint16,\n  shortDeltaCount: $6uUbQ$uint16,\n  regionIndexCount: $6uUbQ$uint16,\n  regionIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"regionIndexCount\"),\n  deltaSets: new $6uUbQ$Array($1a47b0c45c1c22fe$var$DeltaSet, \"itemCount\")\n});\nlet $1a47b0c45c1c22fe$export$fe1b122a2710f241 = new $6uUbQ$Struct({\n  format: $6uUbQ$uint16,\n  variationRegionList: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$VariationRegionList),\n  variationDataCount: $6uUbQ$uint16,\n  itemVariationData: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/\n\nlet $1a47b0c45c1c22fe$var$ConditionTable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    axisIndex: $6uUbQ$uint16,\n    axisIndex: $6uUbQ$uint16,\n    filterRangeMinValue: $1a47b0c45c1c22fe$var$F2DOT14,\n    filterRangeMaxValue: $1a47b0c45c1c22fe$var$F2DOT14\n  }\n});\nlet $1a47b0c45c1c22fe$var$ConditionSet = new $6uUbQ$Struct({\n  conditionCount: $6uUbQ$uint16,\n  conditionTable: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ConditionTable), \"conditionCount\")\n});\nlet $1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord = new $6uUbQ$Struct({\n  featureIndex: $6uUbQ$uint16,\n  alternateFeatureTable: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $7cbbe4e24ef3cb75$export$6e91cf7616333d5), {\n    type: \"parent\"\n  })\n});\nlet $1a47b0c45c1c22fe$var$FeatureTableSubstitution = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  substitutionCount: $6uUbQ$uint16,\n  substitutions: new $6uUbQ$Array($1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nlet $1a47b0c45c1c22fe$var$FeatureVariationRecord = new $6uUbQ$Struct({\n  conditionSet: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ConditionSet, {\n    type: \"parent\"\n  }),\n  featureTableSubstitution: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$FeatureTableSubstitution, {\n    type: \"parent\"\n  })\n});\nlet $1a47b0c45c1c22fe$export$441b70b7971dd419 = new $6uUbQ$Struct({\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  featureVariationRecordCount: $6uUbQ$uint32,\n  featureVariationRecords: new $6uUbQ$Array($1a47b0c45c1c22fe$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n}); // Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\n\nclass $b84fd3dd9d8eddb2$var$PredefinedOp {\n  decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n    return this.type.decode(stream, parent, operands);\n  }\n\n  size(value, ctx) {\n    return this.type.size(value, ctx);\n  }\n\n  encode(stream, value, ctx) {\n    let index = this.predefinedOps.indexOf(value);\n    if (index !== -1) return index;\n    return this.type.encode(stream, value, ctx);\n  }\n\n  constructor(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n}\n\nclass $b84fd3dd9d8eddb2$var$CFFEncodingVersion extends $6uUbQ$Number {\n  decode(stream) {\n    return $6uUbQ$uint8.decode(stream) & 0x7f;\n  }\n\n  constructor() {\n    super(\"UInt8\");\n  }\n\n}\n\nlet $b84fd3dd9d8eddb2$var$Range1 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint16,\n  nLeft: $6uUbQ$uint8\n});\nlet $b84fd3dd9d8eddb2$var$Range2 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint16,\n  nLeft: $6uUbQ$uint16\n});\nlet $b84fd3dd9d8eddb2$var$CFFCustomEncoding = new $6uUbQ$VersionedStruct(new $b84fd3dd9d8eddb2$var$CFFEncodingVersion(), {\n  0: {\n    nCodes: $6uUbQ$uint8,\n    codes: new $6uUbQ$Array($6uUbQ$uint8, \"nCodes\")\n  },\n  1: {\n    nRanges: $6uUbQ$uint8,\n    ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$Range1, \"nRanges\")\n  }\n});\nlet $b84fd3dd9d8eddb2$var$CFFEncoding = new $b84fd3dd9d8eddb2$var$PredefinedOp([(0, $bc0433d9b7e41f5f$export$dee0027060fa13bd), (0, $bc0433d9b7e41f5f$export$4f58f497e14a53c3)], new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomEncoding, {\n  lazy: true\n})); // Decodes an array of ranges until the total\n// length is equal to the provided length.\n\nclass $b84fd3dd9d8eddb2$var$RangeArray extends $6uUbQ$Array {\n  decode(stream, parent) {\n    let length = (0, $6uUbQ$resolveLength)(this.length, stream, parent);\n    let count = 0;\n    let res = [];\n\n    while (count < length) {\n      let range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  }\n\n}\n\nlet $b84fd3dd9d8eddb2$var$CFFCustomCharset = new $6uUbQ$VersionedStruct($6uUbQ$uint8, {\n  0: {\n    glyphs: new $6uUbQ$Array($6uUbQ$uint16, t => t.parent.CharStrings.length - 1)\n  },\n  1: {\n    ranges: new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range1, t => t.parent.CharStrings.length - 1)\n  },\n  2: {\n    ranges: new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range2, t => t.parent.CharStrings.length - 1)\n  }\n});\nlet $b84fd3dd9d8eddb2$var$CFFCharset = new $b84fd3dd9d8eddb2$var$PredefinedOp([(0, $ef658f5c9a1488b2$export$c33b50336c234f16), (0, $ef658f5c9a1488b2$export$3ed0f9e1fee8d489), (0, $ef658f5c9a1488b2$export$dc28be11139d4120)], new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomCharset, {\n  lazy: true\n}));\nlet $b84fd3dd9d8eddb2$var$FDRange3 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint16,\n  fd: $6uUbQ$uint8\n});\nlet $b84fd3dd9d8eddb2$var$FDRange4 = new $6uUbQ$Struct({\n  first: $6uUbQ$uint32,\n  fd: $6uUbQ$uint16\n});\nlet $b84fd3dd9d8eddb2$var$FDSelect = new $6uUbQ$VersionedStruct($6uUbQ$uint8, {\n  0: {\n    fds: new $6uUbQ$Array($6uUbQ$uint8, t => t.parent.CharStrings.length)\n  },\n  3: {\n    nRanges: $6uUbQ$uint16,\n    ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$FDRange3, \"nRanges\"),\n    sentinel: $6uUbQ$uint16\n  },\n  4: {\n    nRanges: $6uUbQ$uint32,\n    ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$FDRange4, \"nRanges\"),\n    sentinel: $6uUbQ$uint32\n  }\n});\nlet $b84fd3dd9d8eddb2$var$ptr = new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)((0, $6d59db2e29cc77b3$export$2e2bcd8739ae039));\n\nclass $b84fd3dd9d8eddb2$var$CFFPrivateOp {\n  decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return $b84fd3dd9d8eddb2$var$ptr.decode(stream, parent, [operands[1]]);\n  }\n\n  size(dict, ctx) {\n    return [(0, $6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict, ctx, false), $b84fd3dd9d8eddb2$var$ptr.size(dict, ctx)[0]];\n  }\n\n  encode(stream, dict, ctx) {\n    return [(0, $6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict, ctx, false), $b84fd3dd9d8eddb2$var$ptr.encode(stream, dict, ctx)[0]];\n  }\n\n}\n\nlet $b84fd3dd9d8eddb2$var$FontDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([// key       name                   type(s)                                 default\n[18, \"Private\", new $b84fd3dd9d8eddb2$var$CFFPrivateOp(), null], [[12, 38], \"FontName\", \"sid\", null], [[12, 7], \"FontMatrix\", \"array\", [0.001, 0, 0, 0.001, 0, 0]], [[12, 5], \"PaintType\", \"number\", 0]]);\nlet $b84fd3dd9d8eddb2$var$CFFTopDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([// key       name                   type(s)                                 default\n[[12, 30], \"ROS\", [\"sid\", \"sid\", \"number\"], null], [0, \"version\", \"sid\", null], [1, \"Notice\", \"sid\", null], [[12, 0], \"Copyright\", \"sid\", null], [2, \"FullName\", \"sid\", null], [3, \"FamilyName\", \"sid\", null], [4, \"Weight\", \"sid\", null], [[12, 1], \"isFixedPitch\", \"boolean\", false], [[12, 2], \"ItalicAngle\", \"number\", 0], [[12, 3], \"UnderlinePosition\", \"number\", -100], [[12, 4], \"UnderlineThickness\", \"number\", 50], [[12, 5], \"PaintType\", \"number\", 0], [[12, 6], \"CharstringType\", \"number\", 2], [[12, 7], \"FontMatrix\", \"array\", [0.001, 0, 0, 0.001, 0, 0]], [13, \"UniqueID\", \"number\", null], [5, \"FontBBox\", \"array\", [0, 0, 0, 0]], [[12, 8], \"StrokeWidth\", \"number\", 0], [14, \"XUID\", \"array\", null], [15, \"charset\", $b84fd3dd9d8eddb2$var$CFFCharset, (0, $ef658f5c9a1488b2$export$c33b50336c234f16)], [16, \"Encoding\", $b84fd3dd9d8eddb2$var$CFFEncoding, (0, $bc0433d9b7e41f5f$export$dee0027060fa13bd)], [17, \"CharStrings\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()), null], [18, \"Private\", new $b84fd3dd9d8eddb2$var$CFFPrivateOp(), null], [[12, 20], \"SyntheticBase\", \"number\", null], [[12, 21], \"PostScript\", \"sid\", null], [[12, 22], \"BaseFontName\", \"sid\", null], [[12, 23], \"BaseFontBlend\", \"delta\", null], // CID font specific\n[[12, 31], \"CIDFontVersion\", \"number\", 0], [[12, 32], \"CIDFontRevision\", \"number\", 0], [[12, 33], \"CIDFontType\", \"number\", 0], [[12, 34], \"CIDCount\", \"number\", 8720], [[12, 35], \"UIDBase\", \"number\", null], [[12, 37], \"FDSelect\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect), null], [[12, 36], \"FDArray\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)), null], [[12, 38], \"FontName\", \"sid\", null]]);\nlet $b84fd3dd9d8eddb2$var$VariationStore = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  itemVariationStore: (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241)\n});\nlet $b84fd3dd9d8eddb2$var$CFF2TopDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([[[12, 7], \"FontMatrix\", \"array\", [0.001, 0, 0, 0.001, 0, 0]], [17, \"CharStrings\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()), null], [[12, 37], \"FDSelect\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect), null], [[12, 36], \"FDArray\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)), null], [24, \"vstore\", new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$VariationStore), null], [25, \"maxstack\", \"number\", 193]]);\nlet $b84fd3dd9d8eddb2$var$CFFTop = new $6uUbQ$VersionedStruct($6uUbQ$fixed16, {\n  1: {\n    hdrSize: $6uUbQ$uint8,\n    offSize: $6uUbQ$uint8,\n    nameIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(new $6uUbQ$String(\"length\")),\n    topDictIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFTopDict),\n    stringIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(new $6uUbQ$String(\"length\")),\n    globalSubrIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()\n  },\n  2: {\n    hdrSize: $6uUbQ$uint8,\n    length: $6uUbQ$uint16,\n    topDict: $b84fd3dd9d8eddb2$var$CFF2TopDict,\n    globalSubrIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)()\n  }\n});\nvar $b84fd3dd9d8eddb2$export$2e2bcd8739ae039 = $b84fd3dd9d8eddb2$var$CFFTop;\n\nclass $822ac0d589e4e237$var$CFFFont {\n  static decode(stream) {\n    return new $822ac0d589e4e237$var$CFFFont(stream);\n  }\n\n  decode() {\n    let start = this.stream.pos;\n    let top = (0, $b84fd3dd9d8eddb2$export$2e2bcd8739ae039).decode(this.stream);\n\n    for (let key in top) {\n      let val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  }\n\n  string(sid) {\n    if (this.version >= 2) return null;\n    if (sid < (0, $229224aec43783c5$export$2e2bcd8739ae039).length) return (0, $229224aec43783c5$export$2e2bcd8739ae039)[sid];\n    return this.stringIndex[sid - (0, $229224aec43783c5$export$2e2bcd8739ae039).length];\n  }\n\n  get postscriptName() {\n    if (this.version < 2) return this.nameIndex[0];\n    return null;\n  }\n\n  get fullName() {\n    return this.string(this.topDict.FullName);\n  }\n\n  get familyName() {\n    return this.string(this.topDict.FamilyName);\n  }\n\n  getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  }\n\n  getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) return null; // CID-keyed fonts don't have glyph names\n\n    if (this.isCIDFont) return null;\n    let {\n      charset: charset\n    } = this.topDict;\n    if (Array.isArray(charset)) return charset[gid];\n    if (gid === 0) return \".notdef\";\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (let i = 0; i < charset.ranges.length; i++) {\n          let range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n        }\n\n        break;\n    }\n\n    return null;\n  }\n\n  fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) return null;\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        let {\n          ranges: ranges\n        } = this.topDict.FDSelect;\n        let low = 0;\n        let high = ranges.length - 1;\n\n        while (low <= high) {\n          let mid = low + high >> 1;\n          if (gid < ranges[mid].first) high = mid - 1;else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;else return ranges[mid].fd;\n        }\n\n      default:\n        throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n    }\n  }\n\n  privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      let fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n      return null;\n    }\n\n    if (this.version < 2) return this.topDict.Private;\n    return this.topDict.FDArray[0].Private;\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n}\n\nvar $822ac0d589e4e237$export$2e2bcd8739ae039 = $822ac0d589e4e237$var$CFFFont;\nlet $2bbf2bc1ce37cd8f$var$VerticalOrigin = new $6uUbQ$Struct({\n  glyphIndex: $6uUbQ$uint16,\n  vertOriginY: $6uUbQ$int16\n});\nvar $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  defaultVertOriginY: $6uUbQ$int16,\n  numVertOriginYMetrics: $6uUbQ$uint16,\n  metrics: new $6uUbQ$Array($2bbf2bc1ce37cd8f$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\nlet $0941618dc22a946d$export$16b227cb15d716a0 = new $6uUbQ$Struct({\n  height: $6uUbQ$uint8,\n  width: $6uUbQ$uint8,\n  horiBearingX: $6uUbQ$int8,\n  horiBearingY: $6uUbQ$int8,\n  horiAdvance: $6uUbQ$uint8,\n  vertBearingX: $6uUbQ$int8,\n  vertBearingY: $6uUbQ$int8,\n  vertAdvance: $6uUbQ$uint8\n});\nlet $0941618dc22a946d$export$62c53e75f69bfe12 = new $6uUbQ$Struct({\n  height: $6uUbQ$uint8,\n  width: $6uUbQ$uint8,\n  bearingX: $6uUbQ$int8,\n  bearingY: $6uUbQ$int8,\n  advance: $6uUbQ$uint8\n});\nlet $0941618dc22a946d$var$EBDTComponent = new $6uUbQ$Struct({\n  glyph: $6uUbQ$uint16,\n  xOffset: $6uUbQ$int8,\n  yOffset: $6uUbQ$int8\n});\n\nclass $0941618dc22a946d$var$ByteAligned {}\n\nclass $0941618dc22a946d$var$BitAligned {}\n\nlet $0941618dc22a946d$export$f1f5ddeb20d14f = new $6uUbQ$VersionedStruct(\"version\", {\n  1: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    data: $0941618dc22a946d$var$ByteAligned\n  },\n  2: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    data: $0941618dc22a946d$var$BitAligned\n  },\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n  5: {\n    data: $0941618dc22a946d$var$BitAligned\n  },\n  6: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    data: $0941618dc22a946d$var$ByteAligned\n  },\n  7: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    data: $0941618dc22a946d$var$BitAligned\n  },\n  8: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    pad: new $6uUbQ$Reserved($6uUbQ$uint8),\n    numComponents: $6uUbQ$uint16,\n    components: new $6uUbQ$Array($0941618dc22a946d$var$EBDTComponent, \"numComponents\")\n  },\n  9: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    pad: new $6uUbQ$Reserved($6uUbQ$uint8),\n    numComponents: $6uUbQ$uint16,\n    components: new $6uUbQ$Array($0941618dc22a946d$var$EBDTComponent, \"numComponents\")\n  },\n  17: {\n    metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n    dataLen: $6uUbQ$uint32,\n    data: new $6uUbQ$Buffer(\"dataLen\")\n  },\n  18: {\n    metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n    dataLen: $6uUbQ$uint32,\n    data: new $6uUbQ$Buffer(\"dataLen\")\n  },\n  19: {\n    dataLen: $6uUbQ$uint32,\n    data: new $6uUbQ$Buffer(\"dataLen\")\n  }\n});\nlet $9911c4c7201c13de$var$SBitLineMetrics = new $6uUbQ$Struct({\n  ascender: $6uUbQ$int8,\n  descender: $6uUbQ$int8,\n  widthMax: $6uUbQ$uint8,\n  caretSlopeNumerator: $6uUbQ$int8,\n  caretSlopeDenominator: $6uUbQ$int8,\n  caretOffset: $6uUbQ$int8,\n  minOriginSB: $6uUbQ$int8,\n  minAdvanceSB: $6uUbQ$int8,\n  maxBeforeBL: $6uUbQ$int8,\n  minAfterBL: $6uUbQ$int8,\n  pad: new $6uUbQ$Reserved($6uUbQ$int8, 2)\n});\nlet $9911c4c7201c13de$var$CodeOffsetPair = new $6uUbQ$Struct({\n  glyphCode: $6uUbQ$uint16,\n  offset: $6uUbQ$uint16\n});\nlet $9911c4c7201c13de$var$IndexSubtable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  header: {\n    imageFormat: $6uUbQ$uint16,\n    imageDataOffset: $6uUbQ$uint32\n  },\n  1: {\n    offsetArray: new $6uUbQ$Array($6uUbQ$uint32, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n  2: {\n    imageSize: $6uUbQ$uint32,\n    bigMetrics: (0, $0941618dc22a946d$export$16b227cb15d716a0)\n  },\n  3: {\n    offsetArray: new $6uUbQ$Array($6uUbQ$uint16, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n  4: {\n    numGlyphs: $6uUbQ$uint32,\n    glyphArray: new $6uUbQ$Array($9911c4c7201c13de$var$CodeOffsetPair, t => t.numGlyphs + 1)\n  },\n  5: {\n    imageSize: $6uUbQ$uint32,\n    bigMetrics: (0, $0941618dc22a946d$export$16b227cb15d716a0),\n    numGlyphs: $6uUbQ$uint32,\n    glyphCodeArray: new $6uUbQ$Array($6uUbQ$uint16, \"numGlyphs\")\n  }\n});\nlet $9911c4c7201c13de$var$IndexSubtableArray = new $6uUbQ$Struct({\n  firstGlyphIndex: $6uUbQ$uint16,\n  lastGlyphIndex: $6uUbQ$uint16,\n  subtable: new $6uUbQ$Pointer($6uUbQ$uint32, $9911c4c7201c13de$var$IndexSubtable)\n});\nlet $9911c4c7201c13de$var$BitmapSizeTable = new $6uUbQ$Struct({\n  indexSubTableArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($9911c4c7201c13de$var$IndexSubtableArray, 1), {\n    type: \"parent\"\n  }),\n  indexTablesSize: $6uUbQ$uint32,\n  numberOfIndexSubTables: $6uUbQ$uint32,\n  colorRef: $6uUbQ$uint32,\n  hori: $9911c4c7201c13de$var$SBitLineMetrics,\n  vert: $9911c4c7201c13de$var$SBitLineMetrics,\n  startGlyphIndex: $6uUbQ$uint16,\n  endGlyphIndex: $6uUbQ$uint16,\n  ppemX: $6uUbQ$uint8,\n  ppemY: $6uUbQ$uint8,\n  bitDepth: $6uUbQ$uint8,\n  flags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\"horizontal\", \"vertical\"])\n});\nvar $9911c4c7201c13de$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  numSizes: $6uUbQ$uint32,\n  sizes: new $6uUbQ$Array($9911c4c7201c13de$var$BitmapSizeTable, \"numSizes\")\n});\nlet $abb847051efd51b1$var$ImageTable = new $6uUbQ$Struct({\n  ppem: $6uUbQ$uint16,\n  resolution: $6uUbQ$uint16,\n  imageOffsets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, \"void\"), t => t.parent.parent.maxp.numGlyphs + 1)\n});\nvar // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$abb847051efd51b1$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  flags: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"renderOutlines\"]),\n  numImgTables: $6uUbQ$uint32,\n  imageTables: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $abb847051efd51b1$var$ImageTable), \"numImgTables\")\n});\nlet $eb629188f3dfefdd$var$LayerRecord = new $6uUbQ$Struct({\n  gid: $6uUbQ$uint16,\n  paletteIndex: $6uUbQ$uint16 // Index value to use in the appropriate palette. This value must\n\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\n\nlet $eb629188f3dfefdd$var$BaseGlyphRecord = new $6uUbQ$Struct({\n  gid: $6uUbQ$uint16,\n  // and is not rendered for color.\n  firstLayerIndex: $6uUbQ$uint16,\n  // There will be numLayers consecutive entries for this base glyph.\n  numLayers: $6uUbQ$uint16\n});\nvar $eb629188f3dfefdd$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numBaseGlyphRecords: $6uUbQ$uint16,\n  baseGlyphRecord: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($eb629188f3dfefdd$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n  layerRecords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($eb629188f3dfefdd$var$LayerRecord, \"numLayerRecords\"), {\n    lazy: true\n  }),\n  numLayerRecords: $6uUbQ$uint16\n});\nlet $08734b8e7dc64587$var$ColorRecord = new $6uUbQ$Struct({\n  blue: $6uUbQ$uint8,\n  green: $6uUbQ$uint8,\n  red: $6uUbQ$uint8,\n  alpha: $6uUbQ$uint8\n});\nvar $08734b8e7dc64587$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  header: {\n    numPaletteEntries: $6uUbQ$uint16,\n    numPalettes: $6uUbQ$uint16,\n    numColorRecords: $6uUbQ$uint16,\n    colorRecords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($08734b8e7dc64587$var$ColorRecord, \"numColorRecords\")),\n    colorRecordIndices: new $6uUbQ$Array($6uUbQ$uint16, \"numPalettes\")\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint32, \"numPalettes\")),\n    offsetPaletteLabelArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint16, \"numPalettes\")),\n    offsetPaletteEntryLabelArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint16, \"numPaletteEntries\"))\n  }\n});\nlet $497cef411d884e34$var$BaseCoord = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coordinate: $6uUbQ$int16 // X or Y value, in design units\n\n  },\n  2: {\n    coordinate: $6uUbQ$int16,\n    referenceGlyph: $6uUbQ$uint16,\n    baseCoordPoint: $6uUbQ$uint16 // Index of contour point on the referenceGlyph\n\n  },\n  3: {\n    coordinate: $6uUbQ$int16,\n    deviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10)) // Device table for X or Y value\n\n  }\n});\nlet $497cef411d884e34$var$BaseValues = new $6uUbQ$Struct({\n  defaultIndex: $6uUbQ$uint16,\n  baseCoordCount: $6uUbQ$uint16,\n  baseCoords: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord), \"baseCoordCount\")\n});\nlet $497cef411d884e34$var$FeatMinMaxRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  minCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord, {\n    type: \"parent\"\n  }),\n  maxCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord, {\n    type: \"parent\"\n  }) // May be NULL\n\n});\nlet $497cef411d884e34$var$MinMax = new $6uUbQ$Struct({\n  minCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord),\n  maxCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord),\n  featMinMaxCount: $6uUbQ$uint16,\n  featMinMaxRecords: new $6uUbQ$Array($497cef411d884e34$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n\n});\nlet $497cef411d884e34$var$BaseLangSysRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  minMax: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$MinMax, {\n    type: \"parent\"\n  })\n});\nlet $497cef411d884e34$var$BaseScript = new $6uUbQ$Struct({\n  baseValues: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseValues),\n  defaultMinMax: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$MinMax),\n  baseLangSysCount: $6uUbQ$uint16,\n  baseLangSysRecords: new $6uUbQ$Array($497cef411d884e34$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n\n});\nlet $497cef411d884e34$var$BaseScriptRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  script: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseScript, {\n    type: \"parent\"\n  })\n});\nlet $497cef411d884e34$var$BaseScriptList = new $6uUbQ$Array($497cef411d884e34$var$BaseScriptRecord, $6uUbQ$uint16); // Array of 4-byte baseline identification tags-must be in alphabetical order\n\nlet $497cef411d884e34$var$BaseTagList = new $6uUbQ$Array(new $6uUbQ$String(4), $6uUbQ$uint16);\nlet $497cef411d884e34$var$Axis = new $6uUbQ$Struct({\n  baseTagList: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseTagList),\n  baseScriptList: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseScriptList)\n});\nvar $497cef411d884e34$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    horizAxis: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$Axis),\n    vertAxis: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$Axis) // May be NULL\n\n  },\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241))\n  }\n});\nlet $cf5f33c63ef209e6$var$AttachPoint = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nlet $cf5f33c63ef209e6$var$AttachList = new $6uUbQ$Struct({\n  coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n  glyphCount: $6uUbQ$uint16,\n  attachPoints: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$AttachPoint), \"glyphCount\")\n});\nlet $cf5f33c63ef209e6$var$CaretValue = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    coordinate: $6uUbQ$int16\n  },\n  2: {\n    caretValuePoint: $6uUbQ$uint16\n  },\n  3: {\n    coordinate: $6uUbQ$int16,\n    deviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10))\n  }\n});\nlet $cf5f33c63ef209e6$var$LigGlyph = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$CaretValue), $6uUbQ$uint16);\nlet $cf5f33c63ef209e6$var$LigCaretList = new $6uUbQ$Struct({\n  coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n  ligGlyphCount: $6uUbQ$uint16,\n  ligGlyphs: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$LigGlyph), \"ligGlyphCount\")\n});\nlet $cf5f33c63ef209e6$var$MarkGlyphSetsDef = new $6uUbQ$Struct({\n  markSetTableFormat: $6uUbQ$uint16,\n  markSetCount: $6uUbQ$uint16,\n  coverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"markSetCount\")\n});\nvar $cf5f33c63ef209e6$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    glyphClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n    attachList: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$AttachList),\n    ligCaretList: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$LigCaretList),\n    markAttachClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71))\n  },\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$MarkGlyphSetsDef),\n    itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241))\n  }\n});\nlet $47e0e8ef515d9903$var$ValueFormat = new $6uUbQ$Bitfield($6uUbQ$uint16, [\"xPlacement\", \"yPlacement\", \"xAdvance\", \"yAdvance\", \"xPlaDevice\", \"yPlaDevice\", \"xAdvDevice\", \"yAdvDevice\"]);\nlet $47e0e8ef515d9903$var$types = {\n  xPlacement: $6uUbQ$int16,\n  yPlacement: $6uUbQ$int16,\n  xAdvance: $6uUbQ$int16,\n  yAdvance: $6uUbQ$int16,\n  xPlaDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: ctx => ctx.rel\n  }),\n  yPlaDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: ctx => ctx.rel\n  }),\n  xAdvDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: ctx => ctx.rel\n  }),\n  yAdvDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n    type: \"global\",\n    relativeTo: ctx => ctx.rel\n  })\n};\n\nclass $47e0e8ef515d9903$var$ValueRecord {\n  buildStruct(parent) {\n    let struct = parent;\n\n    while (!struct[this.key] && struct.parent) struct = struct.parent;\n\n    if (!struct[this.key]) return;\n    let fields = {};\n\n    fields.rel = () => struct._startOffset;\n\n    let format = struct[this.key];\n\n    for (let key in format) if (format[key]) fields[key] = $47e0e8ef515d9903$var$types[key];\n\n    return new $6uUbQ$Struct(fields);\n  }\n\n  size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  }\n\n  decode(stream, parent) {\n    let res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  }\n\n  constructor() {\n    let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"valueFormat\";\n    this.key = key;\n  }\n\n}\n\nlet $47e0e8ef515d9903$var$PairValueRecord = new $6uUbQ$Struct({\n  secondGlyph: $6uUbQ$uint16,\n  value1: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat1\"),\n  value2: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat2\")\n});\nlet $47e0e8ef515d9903$var$PairSet = new $6uUbQ$Array($47e0e8ef515d9903$var$PairValueRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$Class2Record = new $6uUbQ$Struct({\n  value1: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat1\"),\n  value2: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat2\")\n});\nlet $47e0e8ef515d9903$var$Anchor = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  1: {\n    xCoordinate: $6uUbQ$int16,\n    yCoordinate: $6uUbQ$int16\n  },\n  2: {\n    xCoordinate: $6uUbQ$int16,\n    yCoordinate: $6uUbQ$int16,\n    anchorPoint: $6uUbQ$uint16\n  },\n  3: {\n    xCoordinate: $6uUbQ$int16,\n    yCoordinate: $6uUbQ$int16,\n    xDeviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10)),\n    yDeviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10))\n  }\n});\nlet $47e0e8ef515d9903$var$EntryExitRecord = new $6uUbQ$Struct({\n  entryAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n    type: \"parent\"\n  }),\n  exitAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n    type: \"parent\"\n  })\n});\nlet $47e0e8ef515d9903$var$MarkRecord = new $6uUbQ$Struct({\n  class: $6uUbQ$uint16,\n  markAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n    type: \"parent\"\n  })\n});\nlet $47e0e8ef515d9903$var$MarkArray = new $6uUbQ$Array($47e0e8ef515d9903$var$MarkRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$BaseRecord = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor), t => t.parent.classCount);\nlet $47e0e8ef515d9903$var$BaseArray = new $6uUbQ$Array($47e0e8ef515d9903$var$BaseRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$ComponentRecord = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor), t => t.parent.parent.classCount);\nlet $47e0e8ef515d9903$var$LigatureAttach = new $6uUbQ$Array($47e0e8ef515d9903$var$ComponentRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$LigatureArray = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$LigatureAttach), $6uUbQ$uint16);\nlet $47e0e8ef515d9903$export$73a8cfb19cd43a0f = new $6uUbQ$VersionedStruct(\"lookupType\", {\n  1: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat: $47e0e8ef515d9903$var$ValueFormat,\n      value: new $47e0e8ef515d9903$var$ValueRecord()\n    },\n    2: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat: $47e0e8ef515d9903$var$ValueFormat,\n      valueCount: $6uUbQ$uint16,\n      values: new $6uUbQ$LazyArray(new $47e0e8ef515d9903$var$ValueRecord(), \"valueCount\")\n    }\n  }),\n  2: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat1: $47e0e8ef515d9903$var$ValueFormat,\n      valueFormat2: $47e0e8ef515d9903$var$ValueFormat,\n      pairSetCount: $6uUbQ$uint16,\n      pairSets: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$PairSet), \"pairSetCount\")\n    },\n    2: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      valueFormat1: $47e0e8ef515d9903$var$ValueFormat,\n      valueFormat2: $47e0e8ef515d9903$var$ValueFormat,\n      classDef1: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n      classDef2: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n      class1Count: $6uUbQ$uint16,\n      class2Count: $6uUbQ$uint16,\n      classRecords: new $6uUbQ$LazyArray(new $6uUbQ$LazyArray($47e0e8ef515d9903$var$Class2Record, \"class2Count\"), \"class1Count\")\n    }\n  }),\n  3: {\n    format: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    entryExitCount: $6uUbQ$uint16,\n    entryExitRecords: new $6uUbQ$Array($47e0e8ef515d9903$var$EntryExitRecord, \"entryExitCount\")\n  },\n  4: {\n    format: $6uUbQ$uint16,\n    markCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    baseCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    classCount: $6uUbQ$uint16,\n    markArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n    baseArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$BaseArray)\n  },\n  5: {\n    format: $6uUbQ$uint16,\n    markCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    ligatureCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    classCount: $6uUbQ$uint16,\n    markArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n    ligatureArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$LigatureArray)\n  },\n  6: {\n    format: $6uUbQ$uint16,\n    mark1Coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    mark2Coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    classCount: $6uUbQ$uint16,\n    mark1Array: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n    mark2Array: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$BaseArray)\n  },\n  7: (0, $7cbbe4e24ef3cb75$export$841858b892ce1f4c),\n  8: (0, $7cbbe4e24ef3cb75$export$5e6d09e6861162f6),\n  9: {\n    posFormat: $6uUbQ$uint16,\n    lookupType: $6uUbQ$uint16,\n    extension: new $6uUbQ$Pointer($6uUbQ$uint32, null)\n  }\n}); // Fix circular reference\n\n$47e0e8ef515d9903$export$73a8cfb19cd43a0f.versions[9].extension.type = $47e0e8ef515d9903$export$73a8cfb19cd43a0f;\nvar $47e0e8ef515d9903$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    scriptList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$3e15fc05ce864229)),\n    featureList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),\n    lookupList: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($47e0e8ef515d9903$export$73a8cfb19cd43a0f))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$441b70b7971dd419))\n  }\n});\nlet $d3f442064af66e06$var$Sequence = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nlet $d3f442064af66e06$var$AlternateSet = $d3f442064af66e06$var$Sequence;\nlet $d3f442064af66e06$var$Ligature = new $6uUbQ$Struct({\n  glyph: $6uUbQ$uint16,\n  compCount: $6uUbQ$uint16,\n  components: new $6uUbQ$Array($6uUbQ$uint16, t => t.compCount - 1)\n});\nlet $d3f442064af66e06$var$LigatureSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$Ligature), $6uUbQ$uint16);\nlet $d3f442064af66e06$var$GSUBLookup = new $6uUbQ$VersionedStruct(\"lookupType\", {\n  1: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      deltaGlyphID: $6uUbQ$int16\n    },\n    2: {\n      coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n      glyphCount: $6uUbQ$uint16,\n      substitute: new $6uUbQ$LazyArray($6uUbQ$uint16, \"glyphCount\")\n    }\n  }),\n  2: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    count: $6uUbQ$uint16,\n    sequences: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$Sequence), \"count\")\n  },\n  3: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    count: $6uUbQ$uint16,\n    alternateSet: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$AlternateSet), \"count\")\n  },\n  4: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    count: $6uUbQ$uint16,\n    ligatureSets: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$LigatureSet), \"count\")\n  },\n  5: (0, $7cbbe4e24ef3cb75$export$841858b892ce1f4c),\n  6: (0, $7cbbe4e24ef3cb75$export$5e6d09e6861162f6),\n  7: {\n    substFormat: $6uUbQ$uint16,\n    lookupType: $6uUbQ$uint16,\n    extension: new $6uUbQ$Pointer($6uUbQ$uint32, null)\n  },\n  8: {\n    substFormat: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    backtrackCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"backtrackGlyphCount\"),\n    lookaheadGlyphCount: $6uUbQ$uint16,\n    lookaheadCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"lookaheadGlyphCount\"),\n    glyphCount: $6uUbQ$uint16,\n    substitutes: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n  }\n}); // Fix circular reference\n\n$d3f442064af66e06$var$GSUBLookup.versions[7].extension.type = $d3f442064af66e06$var$GSUBLookup;\nvar $d3f442064af66e06$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  header: {\n    scriptList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$3e15fc05ce864229)),\n    featureList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),\n    lookupList: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($d3f442064af66e06$var$GSUBLookup))\n  },\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$441b70b7971dd419))\n  }\n});\nlet $71cfb3c4767fbd0c$var$JstfGSUBModList = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nlet $71cfb3c4767fbd0c$var$JstfPriority = new $6uUbQ$Struct({\n  shrinkageEnableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageDisableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageEnableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageDisableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  shrinkageJstfMax: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0, $47e0e8ef515d9903$export$73a8cfb19cd43a0f))),\n  extensionEnableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionDisableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionEnableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionDisableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n  extensionJstfMax: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0, $47e0e8ef515d9903$export$73a8cfb19cd43a0f)))\n});\nlet $71cfb3c4767fbd0c$var$JstfLangSys = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfPriority), $6uUbQ$uint16);\nlet $71cfb3c4767fbd0c$var$JstfLangSysRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  jstfLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfLangSys)\n});\nlet $71cfb3c4767fbd0c$var$JstfScript = new $6uUbQ$Struct({\n  extenderGlyphs: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16)),\n  defaultLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfLangSys),\n  langSysCount: $6uUbQ$uint16,\n  langSysRecords: new $6uUbQ$Array($71cfb3c4767fbd0c$var$JstfLangSysRecord, \"langSysCount\")\n});\nlet $71cfb3c4767fbd0c$var$JstfScriptRecord = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  script: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfScript, {\n    type: \"parent\"\n  })\n});\nvar $71cfb3c4767fbd0c$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  scriptCount: $6uUbQ$uint16,\n  scriptList: new $6uUbQ$Array($71cfb3c4767fbd0c$var$JstfScriptRecord, \"scriptCount\")\n}); // TODO: add this to restructure\n\nclass $d059a6bd2d3b5b63$var$VariableSizeNumber {\n  decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1:\n        return stream.readUInt8();\n\n      case 2:\n        return stream.readUInt16BE();\n\n      case 3:\n        return stream.readUInt24BE();\n\n      case 4:\n        return stream.readUInt32BE();\n    }\n  }\n\n  size(val, parent) {\n    return (0, $6uUbQ$resolveLength)(this._size, null, parent);\n  }\n\n  constructor(size) {\n    this._size = size;\n  }\n\n}\n\nlet $d059a6bd2d3b5b63$var$MapDataEntry = new $6uUbQ$Struct({\n  entry: new $d059a6bd2d3b5b63$var$VariableSizeNumber(t => ((t.parent.entryFormat & 0x0030) >> 4) + 1),\n  outerIndex: t => t.entry >> (t.parent.entryFormat & 0x000F) + 1,\n  innerIndex: t => t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1\n});\nlet $d059a6bd2d3b5b63$var$DeltaSetIndexMap = new $6uUbQ$Struct({\n  entryFormat: $6uUbQ$uint16,\n  mapCount: $6uUbQ$uint16,\n  mapData: new $6uUbQ$Array($d059a6bd2d3b5b63$var$MapDataEntry, \"mapCount\")\n});\nvar $d059a6bd2d3b5b63$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241)),\n  advanceWidthMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap),\n  LSBMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap),\n  RSBMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap)\n});\nlet $dceeca3e1977ce30$var$Signature = new $6uUbQ$Struct({\n  format: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  offset: $6uUbQ$uint32\n});\nlet $dceeca3e1977ce30$var$SignatureBlock = new $6uUbQ$Struct({\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16, 2),\n  cbSignature: $6uUbQ$uint32,\n  signature: new $6uUbQ$Buffer(\"cbSignature\")\n});\nvar $dceeca3e1977ce30$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  ulVersion: $6uUbQ$uint32,\n  usNumSigs: $6uUbQ$uint16,\n  usFlag: $6uUbQ$uint16,\n  signatures: new $6uUbQ$Array($dceeca3e1977ce30$var$Signature, \"usNumSigs\"),\n  signatureBlocks: new $6uUbQ$Array($dceeca3e1977ce30$var$SignatureBlock, \"usNumSigs\")\n});\nlet $8acd740a9435aad0$var$GaspRange = new $6uUbQ$Struct({\n  rangeMaxPPEM: $6uUbQ$uint16,\n  rangeGaspBehavior: new $6uUbQ$Bitfield($6uUbQ$uint16, [\"grayscale\", \"gridfit\", \"symmetricSmoothing\", \"symmetricGridfit\" // only in version 1, for ClearType\n  ])\n});\nvar $8acd740a9435aad0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numRanges: $6uUbQ$uint16,\n  gaspRanges: new $6uUbQ$Array($8acd740a9435aad0$var$GaspRange, \"numRanges\") // Sorted by ppem\n\n});\nlet $b5f380243c34d6a0$var$DeviceRecord = new $6uUbQ$Struct({\n  pixelSize: $6uUbQ$uint8,\n  maximumWidth: $6uUbQ$uint8,\n  widths: new $6uUbQ$Array($6uUbQ$uint8, t => t.parent.parent.maxp.numGlyphs)\n});\nvar // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n$b5f380243c34d6a0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numRecords: $6uUbQ$int16,\n  sizeDeviceRecord: $6uUbQ$int32,\n  records: new $6uUbQ$Array($b5f380243c34d6a0$var$DeviceRecord, \"numRecords\")\n});\nlet $ca2df1256966e313$var$KernPair = new $6uUbQ$Struct({\n  left: $6uUbQ$uint16,\n  right: $6uUbQ$uint16,\n  value: $6uUbQ$int16\n});\nlet $ca2df1256966e313$var$ClassTable = new $6uUbQ$Struct({\n  firstGlyph: $6uUbQ$uint16,\n  nGlyphs: $6uUbQ$uint16,\n  offsets: new $6uUbQ$Array($6uUbQ$uint16, \"nGlyphs\"),\n  max: t => t.offsets.length && Math.max.apply(Math, t.offsets)\n});\nlet $ca2df1256966e313$var$Kern2Array = new $6uUbQ$Struct({\n  off: t => t._startOffset - t.parent.parent._startOffset,\n  len: t => ((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2),\n  values: new $6uUbQ$LazyArray($6uUbQ$int16, \"len\")\n});\nlet $ca2df1256966e313$var$KernSubtable = new $6uUbQ$VersionedStruct(\"format\", {\n  0: {\n    nPairs: $6uUbQ$uint16,\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16,\n    pairs: new $6uUbQ$Array($ca2df1256966e313$var$KernPair, \"nPairs\")\n  },\n  2: {\n    rowWidth: $6uUbQ$uint16,\n    leftTable: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$ClassTable, {\n      type: \"parent\"\n    }),\n    rightTable: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$ClassTable, {\n      type: \"parent\"\n    }),\n    array: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$Kern2Array, {\n      type: \"parent\"\n    })\n  },\n  3: {\n    glyphCount: $6uUbQ$uint16,\n    kernValueCount: $6uUbQ$uint8,\n    leftClassCount: $6uUbQ$uint8,\n    rightClassCount: $6uUbQ$uint8,\n    flags: $6uUbQ$uint8,\n    kernValue: new $6uUbQ$Array($6uUbQ$int16, \"kernValueCount\"),\n    leftClass: new $6uUbQ$Array($6uUbQ$uint8, \"glyphCount\"),\n    rightClass: new $6uUbQ$Array($6uUbQ$uint8, \"glyphCount\"),\n    kernIndex: new $6uUbQ$Array($6uUbQ$uint8, t => t.leftClassCount * t.rightClassCount)\n  }\n});\nlet $ca2df1256966e313$var$KernTable = new $6uUbQ$VersionedStruct(\"version\", {\n  0: {\n    subVersion: $6uUbQ$uint16,\n    length: $6uUbQ$uint16,\n    format: $6uUbQ$uint8,\n    coverage: new $6uUbQ$Bitfield($6uUbQ$uint8, [\"horizontal\", \"minimum\", \"crossStream\", \"override\" // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable: $ca2df1256966e313$var$KernSubtable,\n    padding: new $6uUbQ$Reserved($6uUbQ$uint8, t => t.length - t._currentOffset)\n  },\n  1: {\n    length: $6uUbQ$uint32,\n    coverage: new $6uUbQ$Bitfield($6uUbQ$uint8, [null, null, null, null, null, \"variation\", \"crossStream\", \"vertical\" // Set if table has vertical kerning values\n    ]),\n    format: $6uUbQ$uint8,\n    tupleIndex: $6uUbQ$uint16,\n    subtable: $ca2df1256966e313$var$KernSubtable,\n    padding: new $6uUbQ$Reserved($6uUbQ$uint8, t => t.length - t._currentOffset)\n  }\n});\nvar $ca2df1256966e313$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n  0: {\n    nTables: $6uUbQ$uint16,\n    tables: new $6uUbQ$Array($ca2df1256966e313$var$KernTable, \"nTables\")\n  },\n  1: {\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    nTables: $6uUbQ$uint32,\n    tables: new $6uUbQ$Array($ca2df1256966e313$var$KernTable, \"nTables\")\n  }\n});\nvar // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$7a9f92b0c46ebe33$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numGlyphs: $6uUbQ$uint16,\n  yPels: new $6uUbQ$Array($6uUbQ$uint8, \"numGlyphs\")\n});\nvar // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$2b2ccc419d152631$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  fontNumber: $6uUbQ$uint32,\n  pitch: $6uUbQ$uint16,\n  xHeight: $6uUbQ$uint16,\n  style: $6uUbQ$uint16,\n  typeFamily: $6uUbQ$uint16,\n  capHeight: $6uUbQ$uint16,\n  symbolSet: $6uUbQ$uint16,\n  typeface: new $6uUbQ$String(16),\n  characterComplement: new $6uUbQ$String(8),\n  fileName: new $6uUbQ$String(6),\n  strokeWeight: new $6uUbQ$String(1),\n  widthType: new $6uUbQ$String(1),\n  serifStyle: $6uUbQ$uint8,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint8)\n}); // VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nlet $ca5b40b9bcda9c9b$var$Ratio = new $6uUbQ$Struct({\n  bCharSet: $6uUbQ$uint8,\n  xRatio: $6uUbQ$uint8,\n  yStartRatio: $6uUbQ$uint8,\n  yEndRatio: $6uUbQ$uint8 // Ending y-Ratio value\n\n});\nlet $ca5b40b9bcda9c9b$var$vTable = new $6uUbQ$Struct({\n  yPelHeight: $6uUbQ$uint16,\n  yMax: $6uUbQ$int16,\n  yMin: $6uUbQ$int16 // Minimum value (in pels) for this yPelHeight\n\n});\nlet $ca5b40b9bcda9c9b$var$VdmxGroup = new $6uUbQ$Struct({\n  recs: $6uUbQ$uint16,\n  startsz: $6uUbQ$uint8,\n  endsz: $6uUbQ$uint8,\n  entries: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$vTable, \"recs\") // The VDMX records\n\n});\nvar $ca5b40b9bcda9c9b$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  numRecs: $6uUbQ$uint16,\n  numRatios: $6uUbQ$uint16,\n  ratioRanges: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$Ratio, \"numRatios\"),\n  offsets: new $6uUbQ$Array($6uUbQ$uint16, \"numRatios\"),\n  groups: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n\n});\nvar // Vertical Header Table\n$69530a3c40755af0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  ascent: $6uUbQ$int16,\n  descent: $6uUbQ$int16,\n  lineGap: $6uUbQ$int16,\n  advanceHeightMax: $6uUbQ$int16,\n  minTopSideBearing: $6uUbQ$int16,\n  minBottomSideBearing: $6uUbQ$int16,\n  yMaxExtent: $6uUbQ$int16,\n  caretSlopeRise: $6uUbQ$int16,\n  caretSlopeRun: $6uUbQ$int16,\n  caretOffset: $6uUbQ$int16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$int16, 4),\n  metricDataFormat: $6uUbQ$int16,\n  numberOfMetrics: $6uUbQ$uint16 // Number of advance heights in the Vertical Metrics table\n\n});\nlet $344073dd270f0e62$var$VmtxEntry = new $6uUbQ$Struct({\n  advance: $6uUbQ$uint16,\n  bearing: $6uUbQ$int16 // The top sidebearing of the glyph\n\n});\nvar // Vertical Metrics Table\n$344073dd270f0e62$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  metrics: new $6uUbQ$LazyArray($344073dd270f0e62$var$VmtxEntry, t => t.parent.vhea.numberOfMetrics),\n  bearings: new $6uUbQ$LazyArray($6uUbQ$int16, t => t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\nlet $3793b781918cfced$var$shortFrac = new $6uUbQ$Fixed(16, \"BE\", 14);\nlet $3793b781918cfced$var$Correspondence = new $6uUbQ$Struct({\n  fromCoord: $3793b781918cfced$var$shortFrac,\n  toCoord: $3793b781918cfced$var$shortFrac\n});\nlet $3793b781918cfced$var$Segment = new $6uUbQ$Struct({\n  pairCount: $6uUbQ$uint16,\n  correspondence: new $6uUbQ$Array($3793b781918cfced$var$Correspondence, \"pairCount\")\n});\nvar $3793b781918cfced$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  axisCount: $6uUbQ$uint32,\n  segment: new $6uUbQ$Array($3793b781918cfced$var$Segment, \"axisCount\")\n});\n\nclass $6cb7dd5f47d82580$var$UnboundedArrayAccessor {\n  getItem(index) {\n    if (this._items[index] == null) {\n      let pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  }\n\n  inspect() {\n    return `[UnboundedArray ${this.type.constructor.name}]`;\n  }\n\n  constructor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n}\n\nclass $6cb7dd5f47d82580$export$c5af1eebc882e39a extends $6uUbQ$Array {\n  decode(stream, parent) {\n    return new $6cb7dd5f47d82580$var$UnboundedArrayAccessor(this.type, stream, parent);\n  }\n\n  constructor(type) {\n    super(type, 0);\n  }\n\n}\n\nlet $6cb7dd5f47d82580$export$8351f8c2ae2f103c = function () {\n  let ValueType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : $6uUbQ$uint16;\n\n  // Helper class that makes internal structures invisible to pointers\n  class Shadow {\n    decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    }\n\n    size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    }\n\n    encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    }\n\n    constructor(type) {\n      this.type = type;\n    }\n\n  }\n\n  ValueType = new Shadow(ValueType);\n  let BinarySearchHeader = new $6uUbQ$Struct({\n    unitSize: $6uUbQ$uint16,\n    nUnits: $6uUbQ$uint16,\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16\n  });\n  let LookupSegmentSingle = new $6uUbQ$Struct({\n    lastGlyph: $6uUbQ$uint16,\n    firstGlyph: $6uUbQ$uint16,\n    value: ValueType\n  });\n  let LookupSegmentArray = new $6uUbQ$Struct({\n    lastGlyph: $6uUbQ$uint16,\n    firstGlyph: $6uUbQ$uint16,\n    values: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array(ValueType, t => t.lastGlyph - t.firstGlyph + 1), {\n      type: \"parent\"\n    })\n  });\n  let LookupSingle = new $6uUbQ$Struct({\n    glyph: $6uUbQ$uint16,\n    value: ValueType\n  });\n  return new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    0: {\n      values: new $6cb7dd5f47d82580$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new $6uUbQ$Array(LookupSegmentSingle, t => t.binarySearchHeader.nUnits)\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new $6uUbQ$Array(LookupSegmentArray, t => t.binarySearchHeader.nUnits)\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new $6uUbQ$Array(LookupSingle, t => t.binarySearchHeader.nUnits)\n    },\n    8: {\n      firstGlyph: $6uUbQ$uint16,\n      count: $6uUbQ$uint16,\n      values: new $6uUbQ$Array(ValueType, \"count\")\n    }\n  });\n};\n\nfunction $6cb7dd5f47d82580$export$79f7d93d790934ba() {\n  let entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $6uUbQ$uint16;\n  let entry = Object.assign({\n    newState: $6uUbQ$uint16,\n    flags: $6uUbQ$uint16\n  }, entryData);\n  let Entry = new $6uUbQ$Struct(entry);\n  let StateArray = new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new $6uUbQ$Array($6uUbQ$uint16, t => t.nClasses));\n  let StateHeader = new $6uUbQ$Struct({\n    nClasses: $6uUbQ$uint32,\n    classTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(lookupType)),\n    stateArray: new $6uUbQ$Pointer($6uUbQ$uint32, StateArray),\n    entryTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))\n  });\n  return StateHeader;\n}\n\nfunction $6cb7dd5f47d82580$export$105027425199cc51() {\n  let entryData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let lookupType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $6uUbQ$uint16;\n  let ClassLookupTable = new $6uUbQ$Struct({\n    version() {\n      return 8;\n    },\n\n    firstGlyph: $6uUbQ$uint16,\n    values: new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16)\n  });\n  let entry = Object.assign({\n    newStateOffset: $6uUbQ$uint16,\n    // convert offset to stateArray index\n    newState: t => (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n    flags: $6uUbQ$uint16\n  }, entryData);\n  let Entry = new $6uUbQ$Struct(entry);\n  let StateArray = new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new $6uUbQ$Array($6uUbQ$uint8, t => t.nClasses));\n  let StateHeader1 = new $6uUbQ$Struct({\n    nClasses: $6uUbQ$uint16,\n    classTable: new $6uUbQ$Pointer($6uUbQ$uint16, ClassLookupTable),\n    stateArray: new $6uUbQ$Pointer($6uUbQ$uint16, StateArray),\n    entryTable: new $6uUbQ$Pointer($6uUbQ$uint16, new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))\n  });\n  return StateHeader1;\n}\n\nlet $6a3746e8c708f5a3$var$BslnSubtable = new $6uUbQ$VersionedStruct(\"format\", {\n  0: {\n    deltas: new $6uUbQ$Array($6uUbQ$int16, 32)\n  },\n  1: {\n    deltas: new $6uUbQ$Array($6uUbQ$int16, 32),\n    mappingData: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($6uUbQ$uint16)\n  },\n  2: {\n    standardGlyph: $6uUbQ$uint16,\n    controlPoints: new $6uUbQ$Array($6uUbQ$uint16, 32)\n  },\n  3: {\n    standardGlyph: $6uUbQ$uint16,\n    controlPoints: new $6uUbQ$Array($6uUbQ$uint16, 32),\n    mappingData: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($6uUbQ$uint16)\n  }\n});\nvar $6a3746e8c708f5a3$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  format: $6uUbQ$uint16,\n  defaultBaseline: $6uUbQ$uint16,\n  subtable: $6a3746e8c708f5a3$var$BslnSubtable\n});\nlet $d0c76fac617b308a$var$Setting = new $6uUbQ$Struct({\n  setting: $6uUbQ$uint16,\n  nameIndex: $6uUbQ$int16,\n  name: t => t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nlet $d0c76fac617b308a$var$FeatureName = new $6uUbQ$Struct({\n  feature: $6uUbQ$uint16,\n  nSettings: $6uUbQ$uint16,\n  settingTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($d0c76fac617b308a$var$Setting, \"nSettings\"), {\n    type: \"parent\"\n  }),\n  featureFlags: new $6uUbQ$Bitfield($6uUbQ$uint8, [null, null, null, null, null, null, \"hasDefault\", \"exclusive\"]),\n  defaultSetting: $6uUbQ$uint8,\n  nameIndex: $6uUbQ$int16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nvar $d0c76fac617b308a$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  featureNameCount: $6uUbQ$uint16,\n  reserved1: new $6uUbQ$Reserved($6uUbQ$uint16),\n  reserved2: new $6uUbQ$Reserved($6uUbQ$uint32),\n  featureNames: new $6uUbQ$Array($d0c76fac617b308a$var$FeatureName, \"featureNameCount\")\n});\nlet $e83fd065f00fcd01$var$Axis = new $6uUbQ$Struct({\n  axisTag: new $6uUbQ$String(4),\n  minValue: $6uUbQ$fixed32,\n  defaultValue: $6uUbQ$fixed32,\n  maxValue: $6uUbQ$fixed32,\n  flags: $6uUbQ$uint16,\n  nameID: $6uUbQ$uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID]\n});\nlet $e83fd065f00fcd01$var$Instance = new $6uUbQ$Struct({\n  nameID: $6uUbQ$uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID],\n  flags: $6uUbQ$uint16,\n  coord: new $6uUbQ$Array($6uUbQ$fixed32, t => t.parent.axisCount),\n  postscriptNameID: new $6uUbQ$Optional($6uUbQ$uint16, t => t.parent.instanceSize - t._currentOffset > 0)\n});\nvar $e83fd065f00fcd01$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  offsetToData: $6uUbQ$uint16,\n  countSizePairs: $6uUbQ$uint16,\n  axisCount: $6uUbQ$uint16,\n  axisSize: $6uUbQ$uint16,\n  instanceCount: $6uUbQ$uint16,\n  instanceSize: $6uUbQ$uint16,\n  axis: new $6uUbQ$Array($e83fd065f00fcd01$var$Axis, \"axisCount\"),\n  instance: new $6uUbQ$Array($e83fd065f00fcd01$var$Instance, \"instanceCount\")\n});\nlet $dbe33c8d3a7f131c$var$shortFrac = new $6uUbQ$Fixed(16, \"BE\", 14);\n\nclass $dbe33c8d3a7f131c$var$Offset {\n  static decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n  }\n\n}\n\nlet $dbe33c8d3a7f131c$var$gvar = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  axisCount: $6uUbQ$uint16,\n  globalCoordCount: $6uUbQ$uint16,\n  globalCoords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array(new $6uUbQ$Array($dbe33c8d3a7f131c$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n  glyphCount: $6uUbQ$uint16,\n  flags: $6uUbQ$uint16,\n  offsetToData: $6uUbQ$uint32,\n  offsets: new $6uUbQ$Array(new $6uUbQ$Pointer($dbe33c8d3a7f131c$var$Offset, \"void\", {\n    relativeTo: ctx => ctx.offsetToData,\n    allowNull: false\n  }), t => t.glyphCount + 1)\n});\nvar $dbe33c8d3a7f131c$export$2e2bcd8739ae039 = $dbe33c8d3a7f131c$var$gvar;\nlet $05b01887df96c4ee$var$ClassTable = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  coverage: $6uUbQ$uint16,\n  subFeatureFlags: $6uUbQ$uint32,\n  stateTable: new (0, $6cb7dd5f47d82580$export$105027425199cc51)()\n});\nlet $05b01887df96c4ee$var$WidthDeltaRecord = new $6uUbQ$Struct({\n  justClass: $6uUbQ$uint32,\n  beforeGrowLimit: $6uUbQ$fixed32,\n  beforeShrinkLimit: $6uUbQ$fixed32,\n  afterGrowLimit: $6uUbQ$fixed32,\n  afterShrinkLimit: $6uUbQ$fixed32,\n  growFlags: $6uUbQ$uint16,\n  shrinkFlags: $6uUbQ$uint16\n});\nlet $05b01887df96c4ee$var$WidthDeltaCluster = new $6uUbQ$Array($05b01887df96c4ee$var$WidthDeltaRecord, $6uUbQ$uint32);\nlet $05b01887df96c4ee$var$ActionData = new $6uUbQ$VersionedStruct(\"actionType\", {\n  0: {\n    lowerLimit: $6uUbQ$fixed32,\n    upperLimit: $6uUbQ$fixed32,\n    order: $6uUbQ$uint16,\n    glyphs: new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16)\n  },\n  1: {\n    addGlyph: $6uUbQ$uint16\n  },\n  2: {\n    substThreshold: $6uUbQ$fixed32,\n    addGlyph: $6uUbQ$uint16,\n    substGlyph: $6uUbQ$uint16\n  },\n  3: {},\n  4: {\n    variationAxis: $6uUbQ$uint32,\n    minimumLimit: $6uUbQ$fixed32,\n    noStretchValue: $6uUbQ$fixed32,\n    maximumLimit: $6uUbQ$fixed32\n  },\n  5: {\n    flags: $6uUbQ$uint16,\n    glyph: $6uUbQ$uint16\n  }\n});\nlet $05b01887df96c4ee$var$Action = new $6uUbQ$Struct({\n  actionClass: $6uUbQ$uint16,\n  actionType: $6uUbQ$uint16,\n  actionLength: $6uUbQ$uint32,\n  actionData: $05b01887df96c4ee$var$ActionData,\n  padding: new $6uUbQ$Reserved($6uUbQ$uint8, t => t.actionLength - t._currentOffset)\n});\nlet $05b01887df96c4ee$var$PostcompensationAction = new $6uUbQ$Array($05b01887df96c4ee$var$Action, $6uUbQ$uint32);\nlet $05b01887df96c4ee$var$PostCompensationTable = new $6uUbQ$Struct({\n  lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$PostcompensationAction))\n});\nlet $05b01887df96c4ee$var$JustificationTable = new $6uUbQ$Struct({\n  classTable: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$ClassTable, {\n    type: \"parent\"\n  }),\n  wdcOffset: $6uUbQ$uint16,\n  postCompensationTable: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$PostCompensationTable, {\n    type: \"parent\"\n  }),\n  widthDeltaClusters: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$WidthDeltaCluster, {\n    type: \"parent\",\n    relativeTo: ctx => ctx.wdcOffset\n  }))\n});\nvar $05b01887df96c4ee$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  format: $6uUbQ$uint16,\n  horizontal: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$JustificationTable),\n  vertical: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$JustificationTable)\n});\nlet $03ee6ebd54db1053$var$LigatureData = {\n  action: $6uUbQ$uint16\n};\nlet $03ee6ebd54db1053$var$ContextualData = {\n  markIndex: $6uUbQ$uint16,\n  currentIndex: $6uUbQ$uint16\n};\nlet $03ee6ebd54db1053$var$InsertionData = {\n  currentInsertIndex: $6uUbQ$uint16,\n  markedInsertIndex: $6uUbQ$uint16\n};\nlet $03ee6ebd54db1053$var$SubstitutionTable = new $6uUbQ$Struct({\n  items: new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)(new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)()))\n});\nlet $03ee6ebd54db1053$var$SubtableData = new $6uUbQ$VersionedStruct(\"type\", {\n  0: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)()\n  },\n  1: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$ContextualData),\n    substitutionTable: new $6uUbQ$Pointer($6uUbQ$uint32, $03ee6ebd54db1053$var$SubstitutionTable)\n  },\n  2: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$LigatureData),\n    ligatureActions: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint32)),\n    components: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16)),\n    ligatureList: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16))\n  },\n  4: {\n    lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)()\n  },\n  5: {\n    stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$InsertionData),\n    insertionActions: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16))\n  }\n});\nlet $03ee6ebd54db1053$var$Subtable = new $6uUbQ$Struct({\n  length: $6uUbQ$uint32,\n  coverage: $6uUbQ$uint24,\n  type: $6uUbQ$uint8,\n  subFeatureFlags: $6uUbQ$uint32,\n  table: $03ee6ebd54db1053$var$SubtableData,\n  padding: new $6uUbQ$Reserved($6uUbQ$uint8, t => t.length - t._currentOffset)\n});\nlet $03ee6ebd54db1053$var$FeatureEntry = new $6uUbQ$Struct({\n  featureType: $6uUbQ$uint16,\n  featureSetting: $6uUbQ$uint16,\n  enableFlags: $6uUbQ$uint32,\n  disableFlags: $6uUbQ$uint32\n});\nlet $03ee6ebd54db1053$var$MorxChain = new $6uUbQ$Struct({\n  defaultFlags: $6uUbQ$uint32,\n  chainLength: $6uUbQ$uint32,\n  nFeatureEntries: $6uUbQ$uint32,\n  nSubtables: $6uUbQ$uint32,\n  features: new $6uUbQ$Array($03ee6ebd54db1053$var$FeatureEntry, \"nFeatureEntries\"),\n  subtables: new $6uUbQ$Array($03ee6ebd54db1053$var$Subtable, \"nSubtables\")\n});\nvar $03ee6ebd54db1053$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$uint16,\n  unused: new $6uUbQ$Reserved($6uUbQ$uint16),\n  nChains: $6uUbQ$uint32,\n  chains: new $6uUbQ$Array($03ee6ebd54db1053$var$MorxChain, \"nChains\")\n});\nlet $b7492a80b0d1a056$var$OpticalBounds = new $6uUbQ$Struct({\n  left: $6uUbQ$int16,\n  top: $6uUbQ$int16,\n  right: $6uUbQ$int16,\n  bottom: $6uUbQ$int16\n});\nvar $b7492a80b0d1a056$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n  version: $6uUbQ$fixed32,\n  format: $6uUbQ$uint16,\n  lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($b7492a80b0d1a056$var$OpticalBounds)\n});\nlet $c3395722bea751e2$var$tables = {};\nvar $c3395722bea751e2$export$2e2bcd8739ae039 = $c3395722bea751e2$var$tables;\n$c3395722bea751e2$var$tables.cmap = (0, $26a62205ad06574e$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.head = (0, $f2612a29f92ac062$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hhea = (0, $2c179dd593583073$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hmtx = (0, $bdc9060542264b85$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.maxp = (0, $dbf51cb3d3fe409d$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.name = (0, $2bcf221753ec8e32$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"OS/2\"] = (0, $84b272aa31b70606$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.post = (0, $32d9e2eb9565d93c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.fpgm = (0, $5c0f37ca5ffb1850$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.loca = (0, $2b2b260902b1c57e$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.prep = (0, $7afb878c7bea4f66$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"cvt \"] = (0, $5202bd9d9ad8eaac$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.glyf = (0, $6c92b6371bce8bd9$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"CFF \"] = (0, $822ac0d589e4e237$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"CFF2\"] = (0, $822ac0d589e4e237$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.VORG = (0, $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.EBLC = (0, $9911c4c7201c13de$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.CBLC = $c3395722bea751e2$var$tables.EBLC;\n$c3395722bea751e2$var$tables.sbix = (0, $abb847051efd51b1$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.COLR = (0, $eb629188f3dfefdd$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.CPAL = (0, $08734b8e7dc64587$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.BASE = (0, $497cef411d884e34$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GDEF = (0, $cf5f33c63ef209e6$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GPOS = (0, $47e0e8ef515d9903$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GSUB = (0, $d3f442064af66e06$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.JSTF = (0, $71cfb3c4767fbd0c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.HVAR = (0, $d059a6bd2d3b5b63$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.DSIG = (0, $dceeca3e1977ce30$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.gasp = (0, $8acd740a9435aad0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hdmx = (0, $b5f380243c34d6a0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.kern = (0, $ca2df1256966e313$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.LTSH = (0, $7a9f92b0c46ebe33$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.PCLT = (0, $2b2ccc419d152631$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.VDMX = (0, $ca5b40b9bcda9c9b$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.vhea = (0, $69530a3c40755af0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.vmtx = (0, $344073dd270f0e62$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.avar = (0, $3793b781918cfced$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.bsln = (0, $6a3746e8c708f5a3$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.feat = (0, $d0c76fac617b308a$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.fvar = (0, $e83fd065f00fcd01$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.gvar = (0, $dbe33c8d3a7f131c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.just = (0, $05b01887df96c4ee$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.morx = (0, $03ee6ebd54db1053$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.opbd = (0, $b7492a80b0d1a056$export$2e2bcd8739ae039);\nlet $816c07a04b6dba87$var$TableEntry = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  checkSum: $6uUbQ$uint32,\n  offset: new $6uUbQ$Pointer($6uUbQ$uint32, \"void\", {\n    type: \"global\"\n  }),\n  length: $6uUbQ$uint32\n});\nlet $816c07a04b6dba87$var$Directory = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  numTables: $6uUbQ$uint16,\n  searchRange: $6uUbQ$uint16,\n  entrySelector: $6uUbQ$uint16,\n  rangeShift: $6uUbQ$uint16,\n  tables: new $6uUbQ$Array($816c07a04b6dba87$var$TableEntry, \"numTables\")\n});\n\n$816c07a04b6dba87$var$Directory.process = function () {\n  let tables = {};\n\n  for (let table of this.tables) tables[table.tag] = table;\n\n  this.tables = tables;\n};\n\n$816c07a04b6dba87$var$Directory.preEncode = function () {\n  if (!Array.isArray(this.tables)) {\n    let tables = [];\n\n    for (let tag in this.tables) {\n      let table = this.tables[tag];\n      if (table) tables.push({\n        tag: tag,\n        checkSum: 0,\n        offset: new $6uUbQ$VoidPointer((0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag], table),\n        length: (0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag].size(table)\n      });\n    }\n\n    this.tables = tables;\n  }\n\n  this.tag = \"true\";\n  this.numTables = this.tables.length;\n  let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n  let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n  this.searchRange = maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nvar $816c07a04b6dba87$export$2e2bcd8739ae039 = $816c07a04b6dba87$var$Directory;\n\nfunction $12727730ddfc8bfe$export$2e0ae67339d5f1ac(arr, cmp) {\n  let min = 0;\n  let max = arr.length - 1;\n\n  while (min <= max) {\n    let mid = min + max >> 1;\n    let res = cmp(arr[mid]);\n    if (res < 0) max = mid - 1;else if (res > 0) min = mid + 1;else return mid;\n  }\n\n  return -1;\n}\n\nfunction $12727730ddfc8bfe$export$d02631cccf789723(index, end) {\n  let range1 = [];\n\n  while (index < end) range1.push(index++);\n\n  return range1;\n}\n\nconst $12727730ddfc8bfe$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\"); // Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\n\nconst $12727730ddfc8bfe$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst $12727730ddfc8bfe$var$LOOKUP = new Uint8Array(256);\n\nfor (let i = 0; i < $12727730ddfc8bfe$var$CHARS.length; i++) $12727730ddfc8bfe$var$LOOKUP[$12727730ddfc8bfe$var$CHARS.charCodeAt(i)] = i;\n\nfunction $12727730ddfc8bfe$export$94fdf11bafc8de6b(base64) {\n  let bufferLength = base64.length * 0.75;\n\n  if (base64[base64.length - 1] === \"=\") {\n    bufferLength--;\n    if (base64[base64.length - 2] === \"=\") bufferLength--;\n  }\n\n  let bytes = new Uint8Array(bufferLength);\n  let p = 0;\n\n  for (let i1 = 0, len = base64.length; i1 < len; i1 += 4) {\n    let encoded1 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1)];\n    let encoded2 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n    let encoded3 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n    let encoded4 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n    bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n    bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n    bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n  }\n\n  return bytes;\n}\n\nclass $f08dd41ef10b694c$export$2e2bcd8739ae039 {\n  findSubtable(cmapTable, pairs) {\n    for (let [platformID, encodingID] of pairs) for (let cmap of cmapTable.tables) {\n      if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n    }\n\n    return null;\n  }\n\n  lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;else if (variationSelector) {\n      let gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) return gid;\n    }\n    let cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4:\n        {\n          let min = 0;\n          let max = cmap.segCount - 1;\n\n          while (min <= max) {\n            let mid = min + max >> 1;\n            if (codepoint < cmap.startCode.get(mid)) max = mid - 1;else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;else {\n              let rangeOffset = cmap.idRangeOffset.get(mid);\n              let gid;\n              if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);else {\n                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                gid = cmap.glyphIndexArray.get(index) || 0;\n                if (gid !== 0) gid += cmap.idDelta.get(mid);\n              }\n              return gid & 0xffff;\n            }\n          }\n\n          return 0;\n        }\n\n      case 8:\n        throw new Error(\"TODO: cmap format 8\");\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13:\n        {\n          let min = 0;\n          let max = cmap.nGroups - 1;\n\n          while (min <= max) {\n            let mid = min + max >> 1;\n            let group = cmap.groups.get(mid);\n            if (codepoint < group.startCharCode) max = mid - 1;else if (codepoint > group.endCharCode) min = mid + 1;else {\n              if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);else return group.glyphID;\n            }\n          }\n\n          return 0;\n        }\n\n      case 14:\n        throw new Error(\"TODO: cmap format 14\");\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) return 0;\n    let selectors = this.uvs.varSelectors.toArray();\n    let i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(selectors, x => variationSelector - x.varSelector);\n    let sel = selectors[i];\n    if (i !== -1 && sel.defaultUVS) i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.defaultUVS, x => codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0);\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS, x => codepoint - x.unicodeValue);\n      if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n    }\n\n    return 0;\n  }\n\n  getCharacterSet() {\n    let cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        return (0, $12727730ddfc8bfe$export$d02631cccf789723)(0, cmap.codeMap.length);\n\n      case 4:\n        {\n          let res = [];\n          let endCodes = cmap.endCode.toArray();\n\n          for (let i = 0; i < endCodes.length; i++) {\n            let tail = endCodes[i] + 1;\n            let start = cmap.startCode.get(i);\n            res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(start, tail));\n          }\n\n          return res;\n        }\n\n      case 8:\n        throw new Error(\"TODO: cmap format 8\");\n\n      case 6:\n      case 10:\n        return (0, $12727730ddfc8bfe$export$d02631cccf789723)(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13:\n        {\n          let res = [];\n\n          for (let group of cmap.groups.toArray()) res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n\n          return res;\n        }\n\n      case 14:\n        throw new Error(\"TODO: cmap format 14\");\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  codePointsForGlyph(gid) {\n    let cmap = this.cmap;\n\n    switch (cmap.version) {\n      case 0:\n        {\n          let res = [];\n\n          for (let i = 0; i < 256; i++) if (cmap.codeMap.get(i) === gid) res.push(i);\n\n          return res;\n        }\n\n      case 4:\n        {\n          let res = [];\n\n          for (let i = 0; i < cmap.segCount; i++) {\n            let end = cmap.endCode.get(i);\n            let start = cmap.startCode.get(i);\n            let rangeOffset = cmap.idRangeOffset.get(i);\n            let delta = cmap.idDelta.get(i);\n\n            for (var c = start; c <= end; c++) {\n              let g = 0;\n              if (rangeOffset === 0) g = c + delta;else {\n                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n                g = cmap.glyphIndexArray.get(index) || 0;\n                if (g !== 0) g += delta;\n              }\n              if (g === gid) res.push(c);\n            }\n          }\n\n          return res;\n        }\n\n      case 12:\n        {\n          let res = [];\n\n          for (let group of cmap.groups.toArray()) if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));\n\n          return res;\n        }\n\n      case 13:\n        {\n          let res = [];\n\n          for (let group of cmap.groups.toArray()) if (gid === group.glyphID) res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n\n          return res;\n        }\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  constructor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [// 32-bit subtables\n    [3, 10], [0, 6], [0, 4], // 16-bit subtables\n    [3, 1], [0, 3], [0, 2], [0, 1], [0, 0]]); // If not unicode cmap was found, take the first table with a supported encoding.\n\n    if (!this.cmap) for (let cmap of cmapTable.tables) {\n      let encoding = (0, $e449ad78d50845fe$export$badc544e0651b6b1)(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n      let mapping = (0, $e449ad78d50845fe$export$1dceb3c14ed68bee)(encoding);\n\n      if (mapping) {\n        this.cmap = cmap.table;\n        this.encoding = mapping;\n      }\n    }\n    if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f08dd41ef10b694c$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f08dd41ef10b694c$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\n\nclass $0bba3a9db57637f3$export$2e2bcd8739ae039 {\n  process(glyphs, positions) {\n    for (let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      let left = glyphs[glyphIndex].id;\n      let right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  }\n\n  getKerning(left, right) {\n    let res = 0;\n\n    for (let table of this.kern.tables) {\n      if (table.coverage.crossStream) continue;\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) continue;\n          break;\n\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) continue;\n          break;\n\n        default:\n          throw new Error(`Unsupported kerning table version ${table.version}`);\n      }\n\n      let val = 0;\n      let s = table.subtable;\n\n      switch (table.format) {\n        case 0:\n          let pairIdx = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(s.pairs, function (pair) {\n            return left - pair.left || right - pair.right;\n          });\n          if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n          break;\n\n        case 2:\n          let leftOffset = 0,\n              rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];else leftOffset = s.array.off;\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          let index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n      } // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n\n\n      if (table.coverage.override) res = val;else res += val;\n    }\n\n    return res;\n  }\n\n  constructor(font) {\n    this.kern = font.kern;\n  }\n\n}\n\nclass $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039 {\n  positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    let clusterStart = 0;\n    let clusterEnd = 0;\n\n    for (let index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.isMark) clusterEnd = index;else {\n        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    return positions;\n  }\n\n  positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    let base = glyphs[clusterStart];\n    let baseBox = base.cbox.copy(); // adjust bounding box for ligature glyphs\n\n    if (base.codePoints.length > 1) // LTR. TODO: RTL support.\n      baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n    let xOffset = -positions[clusterStart].xAdvance;\n    let yOffset = 0;\n    let yGap = this.font.unitsPerEm / 16; // position each of the mark glyphs relative to the base glyph\n\n    for (let index = clusterStart + 1; index <= clusterEnd; index++) {\n      let mark = glyphs[index];\n      let markBox = mark.cbox;\n      let position = positions[index];\n      let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== \"Not_Reordered\") {\n        position.xOffset = position.yOffset = 0; // x positioning\n\n        switch (combiningClass) {\n          case \"Double_Above\":\n          case \"Double_Below\":\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case \"Attached_Below_Left\":\n          case \"Below_Left\":\n          case \"Above_Left\":\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case \"Attached_Above_Right\":\n          case \"Below_Right\":\n          case \"Above_Right\":\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default:\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        } // y positioning\n\n\n        switch (combiningClass) {\n          case \"Double_Below\":\n          case \"Below_Left\":\n          case \"Below\":\n          case \"Below_Right\":\n          case \"Attached_Below_Left\":\n          case \"Attached_Below\":\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case \"Double_Above\":\n          case \"Above_Left\":\n          case \"Above\":\n          case \"Above_Right\":\n          case \"Attached_Above\":\n          case \"Attached_Above_Right\":\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  }\n\n  getCombiningClass(codePoint) {\n    let combiningClass = (0, $6uUbQ$getCombiningClass)(codePoint); // Thai / Lao need some per-character work\n\n    if ((codePoint & -256) === 0x0e00) {\n      if (combiningClass === \"Not_Reordered\") switch (codePoint) {\n        case 0x0e31:\n        case 0x0e34:\n        case 0x0e35:\n        case 0x0e36:\n        case 0x0e37:\n        case 0x0e47:\n        case 0x0e4c:\n        case 0x0e3d:\n        case 0x0e4e:\n          return \"Above_Right\";\n\n        case 0x0eb1:\n        case 0x0eb4:\n        case 0x0eb5:\n        case 0x0eb6:\n        case 0x0eb7:\n        case 0x0ebb:\n        case 0x0ecc:\n        case 0x0ecd:\n          return \"Above\";\n\n        case 0x0ebc:\n          return \"Below\";\n      } else if (codePoint === 0x0e3a) return \"Below_Right\";\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n      case \"CCC10\":\n      case \"CCC11\":\n      case \"CCC12\":\n      case \"CCC13\":\n      case \"CCC14\":\n      case \"CCC15\":\n      case \"CCC16\":\n      case \"CCC17\":\n      case \"CCC18\":\n      case \"CCC20\":\n      case \"CCC22\":\n        return \"Below\";\n\n      case \"CCC23\":\n        return \"Attached_Above\";\n\n      case \"CCC24\":\n        return \"Above_Right\";\n\n      case \"CCC25\":\n      case \"CCC19\":\n        return \"Above_Left\";\n\n      case \"CCC26\":\n        return \"Above\";\n\n      case \"CCC21\":\n        break;\n      // Arabic and Syriac\n\n      case \"CCC27\":\n      case \"CCC28\":\n      case \"CCC30\":\n      case \"CCC31\":\n      case \"CCC33\":\n      case \"CCC34\":\n      case \"CCC35\":\n      case \"CCC36\":\n        return \"Above\";\n\n      case \"CCC29\":\n      case \"CCC32\":\n        return \"Below\";\n      // Thai\n\n      case \"CCC103\":\n        return \"Below_Right\";\n\n      case \"CCC107\":\n        return \"Above_Right\";\n      // Lao\n\n      case \"CCC118\":\n        return \"Below\";\n\n      case \"CCC122\":\n        return \"Above\";\n      // Tibetan\n\n      case \"CCC129\":\n      case \"CCC132\":\n        return \"Below\";\n\n      case \"CCC130\":\n        return \"Above\";\n    }\n\n    return combiningClass;\n  }\n\n  constructor(font) {\n    this.font = font;\n  }\n\n}\n\nclass $f34600ab9d7f70d8$export$2e2bcd8739ae039 {\n  /**\n  * The width of the bounding box\n  * @type {number}\n  */\n  get width() {\n    return this.maxX - this.minX;\n  }\n  /**\n  * The height of the bounding box\n  * @type {number}\n  */\n\n\n  get height() {\n    return this.maxY - this.minY;\n  }\n\n  addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) this.minX = x;\n      if (x > this.maxX) this.maxX = x;\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) this.minY = y;\n      if (y > this.maxY) this.maxY = y;\n    }\n  }\n\n  copy() {\n    return new $f34600ab9d7f70d8$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n  }\n\n  constructor() {\n    let minX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    let minY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    let maxX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Infinity;\n    let maxY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -Infinity;\n\n    /**\n    * The minimum X position in the bounding box\n    * @type {number}\n    */\n    this.minX = minX;\n    /**\n    * The minimum Y position in the bounding box\n    * @type {number}\n    */\n\n    this.minY = minY;\n    /**\n    * The maxmimum X position in the bounding box\n    * @type {number}\n    */\n\n    this.maxX = maxX;\n    /**\n    * The maxmimum Y position in the bounding box\n    * @type {number}\n    */\n\n    this.maxY = maxY;\n  }\n\n} // This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\n\n\nconst $130d1a642ebcd2b7$var$UNICODE_SCRIPTS = {\n  Caucasian_Albanian: \"aghb\",\n  Arabic: \"arab\",\n  Imperial_Aramaic: \"armi\",\n  Armenian: \"armn\",\n  Avestan: \"avst\",\n  Balinese: \"bali\",\n  Bamum: \"bamu\",\n  Bassa_Vah: \"bass\",\n  Batak: \"batk\",\n  Bengali: [\"bng2\", \"beng\"],\n  Bopomofo: \"bopo\",\n  Brahmi: \"brah\",\n  Braille: \"brai\",\n  Buginese: \"bugi\",\n  Buhid: \"buhd\",\n  Chakma: \"cakm\",\n  Canadian_Aboriginal: \"cans\",\n  Carian: \"cari\",\n  Cham: \"cham\",\n  Cherokee: \"cher\",\n  Coptic: \"copt\",\n  Cypriot: \"cprt\",\n  Cyrillic: \"cyrl\",\n  Devanagari: [\"dev2\", \"deva\"],\n  Deseret: \"dsrt\",\n  Duployan: \"dupl\",\n  Egyptian_Hieroglyphs: \"egyp\",\n  Elbasan: \"elba\",\n  Ethiopic: \"ethi\",\n  Georgian: \"geor\",\n  Glagolitic: \"glag\",\n  Gothic: \"goth\",\n  Grantha: \"gran\",\n  Greek: \"grek\",\n  Gujarati: [\"gjr2\", \"gujr\"],\n  Gurmukhi: [\"gur2\", \"guru\"],\n  Hangul: \"hang\",\n  Han: \"hani\",\n  Hanunoo: \"hano\",\n  Hebrew: \"hebr\",\n  Hiragana: \"hira\",\n  Pahawh_Hmong: \"hmng\",\n  Katakana_Or_Hiragana: \"hrkt\",\n  Old_Italic: \"ital\",\n  Javanese: \"java\",\n  Kayah_Li: \"kali\",\n  Katakana: \"kana\",\n  Kharoshthi: \"khar\",\n  Khmer: \"khmr\",\n  Khojki: \"khoj\",\n  Kannada: [\"knd2\", \"knda\"],\n  Kaithi: \"kthi\",\n  Tai_Tham: \"lana\",\n  Lao: \"lao \",\n  Latin: \"latn\",\n  Lepcha: \"lepc\",\n  Limbu: \"limb\",\n  Linear_A: \"lina\",\n  Linear_B: \"linb\",\n  Lisu: \"lisu\",\n  Lycian: \"lyci\",\n  Lydian: \"lydi\",\n  Mahajani: \"mahj\",\n  Mandaic: \"mand\",\n  Manichaean: \"mani\",\n  Mende_Kikakui: \"mend\",\n  Meroitic_Cursive: \"merc\",\n  Meroitic_Hieroglyphs: \"mero\",\n  Malayalam: [\"mlm2\", \"mlym\"],\n  Modi: \"modi\",\n  Mongolian: \"mong\",\n  Mro: \"mroo\",\n  Meetei_Mayek: \"mtei\",\n  Myanmar: [\"mym2\", \"mymr\"],\n  Old_North_Arabian: \"narb\",\n  Nabataean: \"nbat\",\n  Nko: \"nko \",\n  Ogham: \"ogam\",\n  Ol_Chiki: \"olck\",\n  Old_Turkic: \"orkh\",\n  Oriya: [\"ory2\", \"orya\"],\n  Osmanya: \"osma\",\n  Palmyrene: \"palm\",\n  Pau_Cin_Hau: \"pauc\",\n  Old_Permic: \"perm\",\n  Phags_Pa: \"phag\",\n  Inscriptional_Pahlavi: \"phli\",\n  Psalter_Pahlavi: \"phlp\",\n  Phoenician: \"phnx\",\n  Miao: \"plrd\",\n  Inscriptional_Parthian: \"prti\",\n  Rejang: \"rjng\",\n  Runic: \"runr\",\n  Samaritan: \"samr\",\n  Old_South_Arabian: \"sarb\",\n  Saurashtra: \"saur\",\n  Shavian: \"shaw\",\n  Sharada: \"shrd\",\n  Siddham: \"sidd\",\n  Khudawadi: \"sind\",\n  Sinhala: \"sinh\",\n  Sora_Sompeng: \"sora\",\n  Sundanese: \"sund\",\n  Syloti_Nagri: \"sylo\",\n  Syriac: \"syrc\",\n  Tagbanwa: \"tagb\",\n  Takri: \"takr\",\n  Tai_Le: \"tale\",\n  New_Tai_Lue: \"talu\",\n  Tamil: [\"tml2\", \"taml\"],\n  Tai_Viet: \"tavt\",\n  Telugu: [\"tel2\", \"telu\"],\n  Tifinagh: \"tfng\",\n  Tagalog: \"tglg\",\n  Thaana: \"thaa\",\n  Thai: \"thai\",\n  Tibetan: \"tibt\",\n  Tirhuta: \"tirh\",\n  Ugaritic: \"ugar\",\n  Vai: \"vai \",\n  Warang_Citi: \"wara\",\n  Old_Persian: \"xpeo\",\n  Cuneiform: \"xsux\",\n  Yi: \"yi  \",\n  Inherited: \"zinh\",\n  Common: \"zyyy\",\n  Unknown: \"zzzz\"\n};\nconst $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS = {};\n\nfor (let script in $130d1a642ebcd2b7$var$UNICODE_SCRIPTS) {\n  let tag = $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) for (let t of tag) $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[t] = script;else $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag] = script;\n}\n\nfunction $130d1a642ebcd2b7$export$b32f0b5f69d65e51(script1) {\n  return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script1];\n}\n\nfunction $130d1a642ebcd2b7$export$ce50e82f12a827a4(tag) {\n  return $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag];\n}\n\nfunction $130d1a642ebcd2b7$export$e5cb25e204fb8450(string) {\n  let len = string.length;\n  let idx = 0;\n\n  while (idx < len) {\n    let code = string.charCodeAt(idx++); // Check if this is a high surrogate\n\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      let next = string.charCodeAt(idx); // Check if this is a low surrogate\n\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    let script2 = (0, $6uUbQ$getScript)(code);\n    if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script2];\n  }\n\n  return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;\n}\n\nfunction $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints) {\n  for (let i = 0; i < codePoints.length; i++) {\n    let codePoint = codePoints[i];\n    let script3 = (0, $6uUbQ$getScript)(codePoint);\n    if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script3];\n  }\n\n  return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;\n} // The scripts in this map are written from right to left\n\n\nconst $130d1a642ebcd2b7$var$RTL = {\n  arab: true,\n  hebr: true,\n  syrc: true,\n  thaa: true,\n  cprt: true,\n  khar: true,\n  phnx: true,\n  \"nko \": true,\n  lydi: true,\n  avst: true,\n  armi: true,\n  phli: true,\n  prti: true,\n  sarb: true,\n  orkh: true,\n  samr: true,\n  mand: true,\n  merc: true,\n  mero: true,\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,\n  mend: true,\n  nbat: true,\n  narb: true,\n  palm: true,\n  phlp: true // Psalter Pahlavi\n\n};\n\nfunction $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script4) {\n  if ($130d1a642ebcd2b7$var$RTL[script4]) return \"rtl\";\n  return \"ltr\";\n}\n\nclass $be07b3e97a42687a$export$2e2bcd8739ae039 {\n  /**\n  * The total advance width of the run.\n  * @type {number}\n  */\n  get advanceWidth() {\n    let width = 0;\n\n    for (let position of this.positions) width += position.xAdvance;\n\n    return width;\n  }\n  /**\n  * The total advance height of the run.\n  * @type {number}\n  */\n\n\n  get advanceHeight() {\n    let height = 0;\n\n    for (let position of this.positions) height += position.yAdvance;\n\n    return height;\n  }\n  /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */\n\n\n  get bbox() {\n    let bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n    let x = 0;\n    let y = 0;\n\n    for (let index = 0; index < this.glyphs.length; index++) {\n      let glyph = this.glyphs[index];\n      let p = this.positions[index];\n      let b = glyph.bbox;\n      bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n      bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n      x += p.xAdvance;\n      y += p.yAdvance;\n    }\n\n    return bbox;\n  }\n\n  constructor(glyphs, features, script, language, direction) {\n    /**\n    * An array of Glyph objects in the run\n    * @type {Glyph[]}\n    */\n    this.glyphs = glyphs;\n    /**\n    * An array of GlyphPosition objects for each glyph in the run\n    * @type {GlyphPosition[]}\n    */\n\n    this.positions = null;\n    /**\n    * The script that was requested for shaping. This was either passed in or detected automatically.\n    * @type {string}\n    */\n\n    this.script = script;\n    /**\n    * The language requested for shaping, as passed in. If `null`, the default language for the\n    * script was used.\n    * @type {string}\n    */\n\n    this.language = language || null;\n    /**\n    * The direction requested for shaping, as passed in (either ltr or rtl).\n    * If `null`, the default direction of the script is used.\n    * @type {string}\n    */\n\n    this.direction = direction || $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);\n    /**\n    * The features requested during shaping. This is a combination of user\n    * specified features and features chosen by the shaper.\n    * @type {object}\n    */\n\n    this.features = {}; // Convert features to an object\n\n    if (Array.isArray(features)) for (let tag of features) this.features[tag] = true;else if (typeof features === \"object\") this.features = features;\n  }\n\n}\n\nclass $1ac75d9a55b67f01$export$2e2bcd8739ae039 {\n  constructor() {\n    let xAdvance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let yAdvance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let xOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let yOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    /**\n    * The amount to move the virtual pen in the X direction after rendering this glyph.\n    * @type {number}\n    */\n    this.xAdvance = xAdvance;\n    /**\n    * The amount to move the virtual pen in the Y direction after rendering this glyph.\n    * @type {number}\n    */\n\n    this.yAdvance = yAdvance;\n    /**\n    * The offset from the pen position in the X direction at which to render this glyph.\n    * @type {number}\n    */\n\n    this.xOffset = xOffset;\n    /**\n    * The offset from the pen position in the Y direction at which to render this glyph.\n    * @type {number}\n    */\n\n    this.yOffset = yOffset;\n  }\n\n} // see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\n\n\nconst $3b6302b64eccc32c$var$features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n  // upperAndLowerCase: 0          # deprecated\n  // allCaps: 1                    # deprecated\n  // allLowerCase: 2               # deprecated\n  // smallCaps: 3                  # deprecated\n  // initialCaps: 4                # deprecated\n  // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n  // formInterrobang: 6\n  // smartQuotes: 8\n  // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n  // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n  // hanjaToHangul: 1\n  // hiraganaToKatakana: 2\n  // katakanaToHiragana: 3\n  // kanaToRomanization: 4\n  // romanizationToHiragana: 5\n  // romanizationToKatakana: 6\n  // hanjaToHangulAltOne: 7\n  // hanjaToHangulAltTwo: 8\n  // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: {\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nconst $3b6302b64eccc32c$var$feature = (name, selector) => [$3b6302b64eccc32c$var$features[name].code, $3b6302b64eccc32c$var$features[name][selector]];\n\nconst $3b6302b64eccc32c$var$OTMapping = {\n  rlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"requiredLigatures\"),\n  clig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"contextualLigatures\"),\n  dlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"rareLigatures\"),\n  hlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"historicalLigatures\"),\n  liga: $3b6302b64eccc32c$var$feature(\"ligatures\", \"commonLigatures\"),\n  hist: $3b6302b64eccc32c$var$feature(\"ligatures\", \"historicalLigatures\"),\n  smcp: $3b6302b64eccc32c$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n  pcap: $3b6302b64eccc32c$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n  frac: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n  dnom: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n  numr: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n  afrc: $3b6302b64eccc32c$var$feature(\"fractions\", \"verticalFractions\"),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n  case: $3b6302b64eccc32c$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n  ccmp: $3b6302b64eccc32c$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n  cpct: $3b6302b64eccc32c$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n  valt: $3b6302b64eccc32c$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n  swsh: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n  cswh: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n  curs: $3b6302b64eccc32c$var$feature(\"cursiveConnection\", \"cursive\"),\n  c2pc: $3b6302b64eccc32c$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n  c2sc: $3b6302b64eccc32c$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n  init: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n  fin2: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n  medi: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n  med2: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n  fin3: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n  fina: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n  pkna: $3b6302b64eccc32c$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n  half: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"halfWidthText\"),\n  halt: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n  hkna: $3b6302b64eccc32c$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n  vkna: $3b6302b64eccc32c$var$feature(\"alternateKana\", \"alternateVertKana\"),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n  ital: $3b6302b64eccc32c$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n  lnum: $3b6302b64eccc32c$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n  onum: $3b6302b64eccc32c$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n  mgrk: $3b6302b64eccc32c$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n  calt: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n  vrt2: $3b6302b64eccc32c$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n  vert: $3b6302b64eccc32c$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n  tnum: $3b6302b64eccc32c$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n  pnum: $3b6302b64eccc32c$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n  sups: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"superiors\"),\n  subs: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"inferiors\"),\n  ordn: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"ordinals\"),\n  pwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"proportionalText\"),\n  hwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"halfWidthText\"),\n  qwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"quarterWidthText\"),\n  twid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"thirdWidthText\"),\n  fwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"proportionalText\"),\n  palt: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"altProportionalText\"),\n  trad: $3b6302b64eccc32c$var$feature(\"characterShape\", \"traditionalCharacters\"),\n  smpl: $3b6302b64eccc32c$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n  jp78: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1978Characters\"),\n  jp83: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1983Characters\"),\n  jp90: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1990Characters\"),\n  jp04: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS2004Characters\"),\n  expt: $3b6302b64eccc32c$var$feature(\"characterShape\", \"expertCharacters\"),\n  hojo: $3b6302b64eccc32c$var$feature(\"characterShape\", \"hojoCharacters\"),\n  nlck: $3b6302b64eccc32c$var$feature(\"characterShape\", \"NLCCharacters\"),\n  tnam: $3b6302b64eccc32c$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n  ruby: $3b6302b64eccc32c$var$feature(\"rubyKana\", \"rubyKana\"),\n  titl: $3b6302b64eccc32c$var$feature(\"styleOptions\", \"titlingCaps\"),\n  zero: $3b6302b64eccc32c$var$feature(\"typographicExtras\", \"slashedZero\"),\n  ss01: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n  ss02: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n  ss03: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n  ss04: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n  ss05: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n  ss06: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n  ss07: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n  ss08: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n  ss09: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n  ss10: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n  ss11: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n  ss12: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n  ss13: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n  ss14: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n  ss15: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n  ss16: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n  ss17: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n  ss18: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n  ss19: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n  ss20: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n}; // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\n\nfor (let i = 1; i <= 99; i++) $3b6302b64eccc32c$var$OTMapping[`cv${`00${i}`.slice(-2)}`] = [$3b6302b64eccc32c$var$features.characterAlternatives.code, i]; // create inverse mapping\n\n\nlet $3b6302b64eccc32c$var$AATMapping = {};\n\nfor (let ot in $3b6302b64eccc32c$var$OTMapping) {\n  let aat = $3b6302b64eccc32c$var$OTMapping[ot];\n  if ($3b6302b64eccc32c$var$AATMapping[aat[0]] == null) $3b6302b64eccc32c$var$AATMapping[aat[0]] = {};\n  $3b6302b64eccc32c$var$AATMapping[aat[0]][aat[1]] = ot;\n}\n\nfunction $3b6302b64eccc32c$export$b813f7d2a1677c16(features1) {\n  let res = {};\n\n  for (let k in features1) {\n    let r;\n\n    if (r = $3b6302b64eccc32c$var$OTMapping[k]) {\n      if (res[r[0]] == null) res[r[0]] = {};\n      res[r[0]][r[1]] = features1[k];\n    }\n  }\n\n  return res;\n} // Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\n\n\nfunction $3b6302b64eccc32c$var$mapFeatureStrings(f) {\n  let [type, setting] = f;\n  if (isNaN(type)) var typeCode = $3b6302b64eccc32c$var$features[type] && $3b6302b64eccc32c$var$features[type].code;else var typeCode = type;\n  if (isNaN(setting)) var settingCode = $3b6302b64eccc32c$var$features[type] && $3b6302b64eccc32c$var$features[type][setting];else var settingCode = setting;\n  return [typeCode, settingCode];\n}\n\nfunction $3b6302b64eccc32c$export$bd6df347a4f391c4(features2) {\n  let res = {};\n  if (Array.isArray(features2)) for (let k = 0; k < features2.length; k++) {\n    let r;\n    let f = $3b6302b64eccc32c$var$mapFeatureStrings(features2[k]);\n    if (r = $3b6302b64eccc32c$var$AATMapping[f[0]] && $3b6302b64eccc32c$var$AATMapping[f[0]][f[1]]) res[r] = true;\n  } else if (typeof features2 === \"object\") for (let type in features2) {\n    let feature1 = features2[type];\n\n    for (let setting in feature1) {\n      let r;\n      let f = $3b6302b64eccc32c$var$mapFeatureStrings([type, setting]);\n      if (feature1[setting] && (r = $3b6302b64eccc32c$var$AATMapping[f[0]] && $3b6302b64eccc32c$var$AATMapping[f[0]][f[1]])) res[r] = true;\n    }\n  }\n  return Object.keys(res);\n}\n\nclass $ff5ce077dae0f144$export$2e2bcd8739ae039 {\n  lookup(glyph) {\n    switch (this.table.version) {\n      case 0:\n        return this.table.values.getItem(glyph);\n\n      case 2:\n      case 4:\n        {\n          let min = 0;\n          let max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.firstGlyph === 0xffff) return null;\n            if (glyph < seg.firstGlyph) max = mid - 1;else if (glyph > seg.lastGlyph) min = mid + 1;else {\n              if (this.table.version === 2) return seg.value;else return seg.values[glyph - seg.firstGlyph];\n            }\n          }\n\n          return null;\n        }\n\n      case 6:\n        {\n          let min = 0;\n          let max = this.table.binarySearchHeader.nUnits - 1;\n\n          while (min <= max) {\n            var mid = min + max >> 1;\n            var seg = this.table.segments[mid]; // special end of search value\n\n            if (seg.glyph === 0xffff) return null;\n            if (glyph < seg.glyph) max = mid - 1;else if (glyph > seg.glyph) min = mid + 1;else return seg.value;\n          }\n\n          return null;\n        }\n\n      case 8:\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n  }\n\n  glyphsForValue(classValue) {\n    let res = [];\n\n    switch (this.table.version) {\n      case 2:\n      case 4:\n        for (let segment of this.table.segments) if (this.table.version === 2 && segment.value === classValue) res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(segment.firstGlyph, segment.lastGlyph + 1));else {\n          for (let index = 0; index < segment.values.length; index++) if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n        }\n\n        break;\n\n      case 6:\n        for (let segment1 of this.table.segments) if (segment1.value === classValue) res.push(segment1.glyph);\n\n        break;\n\n      case 8:\n        for (let i = 0; i < this.table.values.length; i++) if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);\n\n        break;\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n\n    return res;\n  }\n\n  constructor(table) {\n    this.table = table;\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $ff5ce077dae0f144$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\nconst $50c7aac9316f2948$var$START_OF_TEXT_STATE = 0;\nconst $50c7aac9316f2948$var$START_OF_LINE_STATE = 1;\nconst $50c7aac9316f2948$var$END_OF_TEXT_CLASS = 0;\nconst $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS = 1;\nconst $50c7aac9316f2948$var$DELETED_GLYPH_CLASS = 2;\nconst $50c7aac9316f2948$var$END_OF_LINE_CLASS = 3;\nconst $50c7aac9316f2948$var$DONT_ADVANCE = 0x4000;\n\nclass $50c7aac9316f2948$export$2e2bcd8739ae039 {\n  process(glyphs, reverse, processEntry) {\n    let currentState = $50c7aac9316f2948$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n\n    let index = reverse ? glyphs.length - 1 : 0;\n    let dir = reverse ? -1 : 1;\n\n    while (dir === 1 && index <= glyphs.length || dir === -1 && index >= -1) {\n      let glyph = null;\n      let classCode = $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;\n      let shouldAdvance = true;\n      if (index === glyphs.length || index === -1) classCode = $50c7aac9316f2948$var$END_OF_TEXT_CLASS;else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) classCode = $50c7aac9316f2948$var$DELETED_GLYPH_CLASS;else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) classCode = $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;\n        }\n      }\n      let row = this.stateTable.stateArray.getItem(currentState);\n      let entryIndex = row[classCode];\n      let entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== $50c7aac9316f2948$var$END_OF_TEXT_CLASS && classCode !== $50c7aac9316f2948$var$DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & $50c7aac9316f2948$var$DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) index += dir;\n    }\n\n    return glyphs;\n  }\n  /**\n  * Performs a depth-first traversal of the glyph strings\n  * represented by the state machine.\n  */\n\n\n  traverse(opts) {\n    let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let visited = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n    if (visited.has(state)) return;\n    visited.add(state);\n    let {\n      nClasses: nClasses,\n      stateArray: stateArray,\n      entryTable: entryTable\n    } = this.stateTable;\n    let row = stateArray.getItem(state); // Skip predefined classes\n\n    for (let classCode = 4; classCode < nClasses; classCode++) {\n      let entryIndex = row[classCode];\n      let entry = entryTable.getItem(entryIndex); // Try all glyphs in the class\n\n      for (let glyph of this.lookupTable.glyphsForValue(classCode)) {\n        if (opts.enter) opts.enter(glyph, entry);\n        if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n        if (opts.exit) opts.exit(glyph, entry);\n      }\n    }\n  }\n\n  constructor(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(stateTable.classTable);\n  }\n\n} // indic replacement flags\n\n\nconst $55f71433a605c87d$var$MARK_FIRST = 0x8000;\nconst $55f71433a605c87d$var$MARK_LAST = 0x2000;\nconst $55f71433a605c87d$var$VERB = 0x000F; // contextual substitution and glyph insertion flag\n\nconst $55f71433a605c87d$var$SET_MARK = 0x8000; // ligature entry flags\n\nconst $55f71433a605c87d$var$SET_COMPONENT = 0x8000;\nconst $55f71433a605c87d$var$PERFORM_ACTION = 0x2000; // ligature action masks\n\nconst $55f71433a605c87d$var$LAST_MASK = 0x80000000;\nconst $55f71433a605c87d$var$STORE_MASK = 0x40000000;\nconst $55f71433a605c87d$var$OFFSET_MASK = 0x3FFFFFFF;\nconst $55f71433a605c87d$var$VERTICAL_ONLY = 0x800000;\nconst $55f71433a605c87d$var$REVERSE_DIRECTION = 0x400000;\nconst $55f71433a605c87d$var$HORIZONTAL_AND_VERTICAL = 0x200000; // glyph insertion flags\n\nconst $55f71433a605c87d$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst $55f71433a605c87d$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nconst $55f71433a605c87d$var$CURRENT_INSERT_BEFORE = 0x0800;\nconst $55f71433a605c87d$var$MARKED_INSERT_BEFORE = 0x0400;\nconst $55f71433a605c87d$var$CURRENT_INSERT_COUNT = 0x03E0;\nconst $55f71433a605c87d$var$MARKED_INSERT_COUNT = 0x001F;\n\nclass $55f71433a605c87d$export$2e2bcd8739ae039 {\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n  process(glyphs) {\n    let features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags; // enable/disable the requested features\n\n      for (let feature of chain.features) {\n        let f;\n\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (let subtable of chain.subtables) if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n    } // remove deleted glyphs\n\n\n    let index = glyphs.length - 1;\n\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n      index--;\n    }\n\n    return glyphs;\n  }\n\n  processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n    let reverse = !!(this.subtable.coverage & $55f71433a605c87d$var$REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  }\n\n  getStateMachine(subtable) {\n    return new (0, $50c7aac9316f2948$export$2e2bcd8739ae039)(subtable.table.stateTable);\n  }\n\n  getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n\n      case 1:\n        return this.processContextualSubstitution;\n\n      case 2:\n        return this.processLigature;\n\n      case 4:\n        return this.processNoncontextualSubstitutions;\n\n      case 5:\n        return this.processGlyphInsertion;\n\n      default:\n        throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n    }\n  }\n\n  processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & $55f71433a605c87d$var$MARK_FIRST) this.firstGlyph = index;\n    if (entry.flags & $55f71433a605c87d$var$MARK_LAST) this.lastGlyph = index;\n    $55f71433a605c87d$var$reorderGlyphs(this.glyphs, entry.flags & $55f71433a605c87d$var$VERB, this.firstGlyph, this.lastGlyph);\n  }\n\n  processContextualSubstitution(glyph, entry, index) {\n    let subsitutions = this.subtable.table.substitutionTable.items;\n\n    if (entry.markIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.markIndex);\n      let lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.currentIndex);\n      let lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);\n      glyph = this.glyphs[index];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n    }\n\n    if (entry.flags & $55f71433a605c87d$var$SET_MARK) this.markedGlyph = index;\n  }\n\n  processLigature(glyph, entry, index) {\n    if (entry.flags & $55f71433a605c87d$var$SET_COMPONENT) this.ligatureStack.push(index);\n\n    if (entry.flags & $55f71433a605c87d$var$PERFORM_ACTION) {\n      let actions = this.subtable.table.ligatureActions;\n      let components = this.subtable.table.components;\n      let ligatureList = this.subtable.table.ligatureList;\n      let actionIndex = entry.action;\n      let last = false;\n      let ligatureIndex = 0;\n      let codePoints = [];\n      let ligatureGlyphs = [];\n\n      while (!last) {\n        let componentGlyph = this.ligatureStack.pop();\n        codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n        let action = actions.getItem(actionIndex++);\n        last = !!(action & $55f71433a605c87d$var$LAST_MASK);\n        let store = !!(action & $55f71433a605c87d$var$STORE_MASK);\n        let offset = (action & $55f71433a605c87d$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n\n        offset += this.glyphs[componentGlyph].id;\n        let component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          let ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n      } // Put ligature glyph indexes back on the stack\n\n\n      this.ligatureStack.push(...ligatureGlyphs);\n    }\n  }\n\n  processNoncontextualSubstitutions(subtable, glyphs, index) {\n    let lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n\n      if (glyph.id !== 0xffff) {\n        let gid = lookupTable.lookup(glyph.id);\n        if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n  }\n\n  _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    let insertions = [];\n\n    while (count--) {\n      let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) glyphIndex++;\n    this.glyphs.splice(glyphIndex, 0, ...insertions);\n  }\n\n  processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & $55f71433a605c87d$var$SET_MARK) this.markedIndex = index;\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      let count = (entry.flags & $55f71433a605c87d$var$MARKED_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & $55f71433a605c87d$var$MARKED_INSERT_BEFORE);\n\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      let count = (entry.flags & $55f71433a605c87d$var$CURRENT_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & $55f71433a605c87d$var$CURRENT_INSERT_BEFORE);\n\n      this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n    }\n  }\n\n  getSupportedFeatures() {\n    let features = [];\n\n    for (let chain of this.morx.chains) for (let feature of chain.features) features.push([feature.featureType, feature.featureSetting]);\n\n    return features;\n  }\n\n  generateInputs(gid) {\n    if (!this.inputCache) this.generateInputCache();\n    return this.inputCache[gid] || [];\n  }\n\n  generateInputCache() {\n    this.inputCache = {};\n\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      for (let subtable of chain.subtables) if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n    }\n  }\n\n  generateInputsForSubtable(subtable) {\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) return;\n    let reverse = !!(subtable.coverage & $55f71433a605c87d$var$REVERSE_DIRECTION);\n    if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n    this.subtable = subtable;\n    this.ligatureStack = [];\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n    let input = [];\n    let stack = [];\n    this.glyphs = [];\n    stateMachine.traverse({\n      enter: (glyph, entry) => {\n        let glyphs = this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: this.ligatureStack.slice()\n        }); // Add glyph to input and glyphs to process.\n\n        let g1 = this.font.getGlyph(glyph);\n        input.push(g1);\n        glyphs.push(input[input.length - 1]); // Process ligature substitution\n\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1); // Add input to result if only one matching (non-deleted) glyph remains.\n\n        let count = 0;\n        let found = 0;\n\n        for (let i = 0; i < glyphs.length && count <= 1; i++) if (glyphs[i].id !== 0xffff) {\n          count++;\n          found = glyphs[i].id;\n        }\n\n        if (count === 1) {\n          let result = input.map(g => g.id);\n          let cache1 = this.inputCache[found];\n          if (cache1) cache1.push(result);else this.inputCache[found] = [result];\n        }\n      },\n      exit: () => {\n        ({\n          glyphs: this.glyphs,\n          ligatureStack: this.ligatureStack\n        } = stack.pop());\n        input.pop();\n      }\n    });\n  }\n\n  constructor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $55f71433a605c87d$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null); // swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\n\nfunction $55f71433a605c87d$var$swap(glyphs, rangeA, rangeB) {\n  let reverseA = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  let reverseB = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) end.reverse();\n  let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n  if (reverseA) start.reverse();\n  glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n  return glyphs;\n}\n\nfunction $55f71433a605c87d$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  let length = lastGlyph - firstGlyph + 1;\n\n  switch (verb) {\n    case 0:\n      return glyphs;\n\n    case 1:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15:\n      return $55f71433a605c87d$var$swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(`Unknown verb: ${verb}`);\n  }\n}\n\nclass $ba6dd74203be8728$export$2e2bcd8739ae039 {\n  substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n    this.morxProcessor.process(glyphRun.glyphs, $3b6302b64eccc32c$export$b813f7d2a1677c16(glyphRun.features));\n  }\n\n  getAvailableFeatures(script, language) {\n    return $3b6302b64eccc32c$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n  }\n\n  stringsForGlyph(gid) {\n    let glyphStrings = this.morxProcessor.generateInputs(gid);\n    let result = new Set();\n\n    for (let glyphs of glyphStrings) this._addStrings(glyphs, 0, result, \"\");\n\n    return result;\n  }\n\n  _addStrings(glyphs, index, strings, string) {\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (let codePoint of codePoints) {\n      let s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);else strings.add(s);\n    }\n  }\n\n  constructor(font) {\n    this.font = font;\n    this.morxProcessor = new (0, $55f71433a605c87d$export$2e2bcd8739ae039)(font);\n    this.fallbackPosition = false;\n  }\n\n}\n\nclass $94d7a73bd2edfc9a$export$2e2bcd8739ae039 {\n  /**\n  * Adds the given features to the last stage.\n  * Ignores features that have already been applied.\n  */\n  _addFeatures(features, global) {\n    let stageIndex = this.stages.length - 1;\n    let stage = this.stages[stageIndex];\n\n    for (let feature of features) if (this.allFeatures[feature] == null) {\n      stage.push(feature);\n      this.allFeatures[feature] = stageIndex;\n      if (global) this.globalFeatures[feature] = true;\n    }\n  }\n  /**\n  * Add features to the last stage\n  */\n\n\n  add(arg) {\n    let global = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (this.stages.length === 0) this.stages.push([]);\n    if (typeof arg === \"string\") arg = [arg];\n    if (Array.isArray(arg)) this._addFeatures(arg, global);else if (typeof arg === \"object\") {\n      this._addFeatures(arg.global || [], true);\n\n      this._addFeatures(arg.local || [], false);\n    } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n  }\n  /**\n  * Add a new stage\n  */\n\n\n  addStage(arg, global) {\n    if (typeof arg === \"function\") this.stages.push(arg, []);else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  }\n\n  setFeatureOverrides(features) {\n    if (Array.isArray(features)) this.add(features);else if (typeof features === \"object\") for (let tag in features) {\n      if (features[tag]) this.add(tag);else if (this.allFeatures[tag] != null) {\n        let stage = this.stages[this.allFeatures[tag]];\n        stage.splice(stage.indexOf(tag), 1);\n        delete this.allFeatures[tag];\n        delete this.globalFeatures[tag];\n      }\n    }\n  }\n  /**\n  * Assigns the global features to the given glyphs\n  */\n\n\n  assignGlobalFeatures(glyphs) {\n    for (let glyph of glyphs) for (let feature in this.globalFeatures) glyph.features[feature] = true;\n  }\n  /**\n  * Executes the planned stages using the given OTProcessor\n  */\n\n\n  process(processor, glyphs, positions) {\n    for (let stage of this.stages) {\n      if (typeof stage === \"function\") {\n        if (!positions) stage(this.font, glyphs, this);\n      } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n    }\n  }\n\n  constructor(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n}\n\nconst $649970d87335b30f$var$VARIATION_FEATURES = [\"rvrn\"];\nconst $649970d87335b30f$var$COMMON_FEATURES = [\"ccmp\", \"locl\", \"rlig\", \"mark\", \"mkmk\"];\nconst $649970d87335b30f$var$FRACTIONAL_FEATURES = [\"frac\", \"numr\", \"dnom\"];\nconst $649970d87335b30f$var$HORIZONTAL_FEATURES = [\"calt\", \"clig\", \"liga\", \"rclt\", \"curs\", \"kern\"];\nconst $649970d87335b30f$var$VERTICAL_FEATURES = [\"vert\"];\nconst $649970d87335b30f$var$DIRECTIONAL_FEATURES = {\n  ltr: [\"ltra\", \"ltrm\"],\n  rtl: [\"rtla\", \"rtlm\"]\n};\n\nclass $649970d87335b30f$export$2e2bcd8739ae039 {\n  static plan(plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(plan);\n    this.planFeatures(plan);\n    this.planPostprocessing(plan, features); // Assign the global features to all the glyphs\n\n    plan.assignGlobalFeatures(glyphs); // Assign local features to glyphs\n\n    this.assignFeatures(plan, glyphs);\n  }\n\n  static planPreprocessing(plan) {\n    plan.add({\n      global: [...$649970d87335b30f$var$VARIATION_FEATURES, ...$649970d87335b30f$var$DIRECTIONAL_FEATURES[plan.direction]],\n      local: $649970d87335b30f$var$FRACTIONAL_FEATURES\n    });\n  }\n\n  static planFeatures(plan) {// Do nothing by default. Let subclasses override this.\n  }\n\n  static planPostprocessing(plan, userFeatures) {\n    plan.add([...$649970d87335b30f$var$COMMON_FEATURES, ...$649970d87335b30f$var$HORIZONTAL_FEATURES]);\n    plan.setFeatureOverrides(userFeatures);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (let i = 0; i < glyphs.length; i++) {\n      let glyph = glyphs[i];\n\n      if (glyph.codePoints[0] === 0x2044) {\n        let start = i;\n        let end = i + 1; // Apply numerator\n\n        while (start > 0 && (0, $6uUbQ$isDigit)(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        } // Apply denominator\n\n\n        while (end < glyphs.length && (0, $6uUbQ$isDigit)(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        } // Apply fraction slash\n\n\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($649970d87335b30f$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\nconst $764eb544bbe1ccf0$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nconst $764eb544bbe1ccf0$var$FEATURES = [\"isol\", \"fina\", \"fin2\", \"fin3\", \"medi\", \"med2\", \"init\"];\nconst $764eb544bbe1ccf0$var$ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  \"DALATH RISH\": 5,\n  Transparent: 6\n};\nconst $764eb544bbe1ccf0$var$ISOL = \"isol\";\nconst $764eb544bbe1ccf0$var$FINA = \"fina\";\nconst $764eb544bbe1ccf0$var$FIN2 = \"fin2\";\nconst $764eb544bbe1ccf0$var$FIN3 = \"fin3\";\nconst $764eb544bbe1ccf0$var$MEDI = \"medi\";\nconst $764eb544bbe1ccf0$var$MED2 = \"med2\";\nconst $764eb544bbe1ccf0$var$INIT = \"init\";\nconst $764eb544bbe1ccf0$var$NONE = null; // Each entry is [prevAction, curAction, nextState]\n\nconst $764eb544bbe1ccf0$var$STATE_TABLE = [//   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n// State 0: prev was U,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 6]], // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$FIN2, 5], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 6]], // State 2: prev was D/L in ISOL form,  willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 1], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 3], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 4], [$764eb544bbe1ccf0$var$INIT, $764eb544bbe1ccf0$var$FINA, 6]], // State 3: prev was D in FINA form,  willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 1], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 3], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 4], [$764eb544bbe1ccf0$var$MEDI, $764eb544bbe1ccf0$var$FINA, 6]], // State 4: prev was FINA ALAPH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$FIN2, 5], [$764eb544bbe1ccf0$var$MED2, $764eb544bbe1ccf0$var$ISOL, 6]], // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$FIN2, 5], [$764eb544bbe1ccf0$var$ISOL, $764eb544bbe1ccf0$var$ISOL, 6]], // State 6: prev was DALATH/RISH,  not willing to join.\n[[$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$NONE, 0], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 1], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 2], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$FIN3, 5], [$764eb544bbe1ccf0$var$NONE, $764eb544bbe1ccf0$var$ISOL, 6]]];\n\nclass $764eb544bbe1ccf0$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n  static planFeatures(plan) {\n    plan.add([\"ccmp\", \"locl\"]);\n\n    for (let i = 0; i < $764eb544bbe1ccf0$var$FEATURES.length; i++) {\n      let feature = $764eb544bbe1ccf0$var$FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage(\"mset\");\n  }\n\n  static assignFeatures(plan, glyphs) {\n    super.assignFeatures(plan, glyphs);\n    let prev = -1;\n    let state = 0;\n    let actions = []; // Apply the state machine to map glyphs to features\n\n    for (let i = 0; i < glyphs.length; i++) {\n      let curAction, prevAction;\n      var glyph = glyphs[i];\n      let type = $764eb544bbe1ccf0$var$getShapingClass(glyph.codePoints[0]);\n\n      if (type === $764eb544bbe1ccf0$var$ShapingClasses.Transparent) {\n        actions[i] = $764eb544bbe1ccf0$var$NONE;\n        continue;\n      }\n\n      [prevAction, curAction, state] = $764eb544bbe1ccf0$var$STATE_TABLE[state][type];\n      if (prevAction !== $764eb544bbe1ccf0$var$NONE && prev !== -1) actions[prev] = prevAction;\n      actions[i] = curAction;\n      prev = i;\n    } // Apply the chosen features to their respective glyphs\n\n\n    for (let index = 0; index < glyphs.length; index++) {\n      let feature;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) glyph.features[feature] = true;\n    }\n  }\n\n}\n\nfunction $764eb544bbe1ccf0$var$getShapingClass(codePoint) {\n  let res = $764eb544bbe1ccf0$var$trie.get(codePoint);\n  if (res) return res - 1;\n  let category = (0, $6uUbQ$getCategory)(codePoint);\n  if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $764eb544bbe1ccf0$var$ShapingClasses.Transparent;\n  return $764eb544bbe1ccf0$var$ShapingClasses.Non_Joining;\n}\n\nclass $85d408632270248b$export$2e2bcd8739ae039 {\n  reset() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  }\n\n  get cur() {\n    return this.glyphs[this.index] || null;\n  }\n\n  shouldIgnore(glyph) {\n    return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n  }\n\n  move(dir) {\n    this.index += dir;\n\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) this.index += dir;\n\n    if (0 > this.index || this.index >= this.glyphs.length) return null;\n    return this.glyphs[this.index];\n  }\n\n  next() {\n    return this.move(1);\n  }\n\n  prev() {\n    return this.move(-1);\n  }\n\n  peek() {\n    let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let idx = this.index;\n    let res = this.increment(count);\n    this.index = idx;\n    return res;\n  }\n\n  peekIndex() {\n    let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let idx = this.index;\n    this.increment(count);\n    let res = this.index;\n    this.index = idx;\n    return res;\n  }\n\n  increment() {\n    let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n\n    while (count--) this.move(dir);\n\n    return this.glyphs[this.index];\n  }\n\n  constructor(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n}\n\nconst $a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS = [\"DFLT\", \"dflt\", \"latn\"];\n\nclass $a83b9c36aaa94fd3$export$2e2bcd8739ae039 {\n  findScript(script) {\n    if (this.table.scriptList == null) return null;\n    if (!Array.isArray(script)) script = [script];\n\n    for (let s of script) for (let entry of this.table.scriptList) {\n      if (entry.tag === s) return entry;\n    }\n\n    return null;\n  }\n\n  selectScript(script, language, direction) {\n    let changed = false;\n    let entry;\n\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) entry = this.findScript($a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS);\n      if (!entry) return this.scriptTag;\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction || direction !== this.direction) this.direction = direction || $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);\n    if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (let lang of this.script.langSysRecords) if (lang.tag === language) {\n        this.language = lang.langSys;\n        this.languageTag = lang.tag;\n        break;\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    } // Build a feature lookup table\n\n\n    if (changed) {\n      this.features = {};\n      if (this.language) for (let featureIndex of this.language.featureIndexes) {\n        let record = this.table.featureList[featureIndex];\n        let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n        this.features[record.tag] = substituteFeature || record.feature;\n      }\n    }\n\n    return this.scriptTag;\n  }\n\n  lookupsForFeatures() {\n    let userFeatures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let exclude = arguments.length > 1 ? arguments[1] : undefined;\n    let lookups = [];\n\n    for (let tag of userFeatures) {\n      let feature = this.features[tag];\n      if (!feature) continue;\n\n      for (let lookupIndex of feature.lookupListIndexes) {\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort((a, b) => a.index - b.index);\n    return lookups;\n  }\n\n  substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) return null;\n    let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    let substitutions = record.featureTableSubstitution.substitutions;\n\n    for (let substitution of substitutions) {\n      if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n    }\n\n    return null;\n  }\n\n  findVariationsIndex(coords) {\n    let variations = this.table.featureVariations;\n    if (!variations) return -1;\n    let records = variations.featureVariationRecords;\n\n    for (let i = 0; i < records.length; i++) {\n      let conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) return i;\n    }\n\n    return -1;\n  }\n\n  variationConditionsMatch(conditions, coords) {\n    return conditions.every(condition => {\n      let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    let lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  }\n\n  applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new (0, $85d408632270248b$export$2e2bcd8739ae039)(glyphs);\n\n    for (let {\n      feature: feature,\n      lookup: lookup\n    } of lookups) {\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (let table of lookup.subTables) {\n          let res = this.applyLookup(lookup.lookupType, table);\n          if (res) break;\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  }\n\n  applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  }\n\n  applyLookupList(lookupRecords) {\n    let options = this.glyphIterator.options;\n    let glyphIndex = this.glyphIterator.index;\n\n    for (let lookupRecord of lookupRecords) {\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex); // Get the lookup and setup flags for subtables\n\n      let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index); // Apply lookup subtables until one matches\n\n      for (let table of lookup.subTables) {\n        if (this.applyLookup(lookup.lookupType, table)) break;\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  }\n\n  coverageIndex(coverage, glyph) {\n    if (glyph == null) glyph = this.glyphIterator.cur.id;\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (let range of coverage.rangeRecords) {\n          if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n        }\n\n        break;\n    }\n\n    return -1;\n  }\n\n  match(sequenceIndex, sequence, fn, matched) {\n    let pos = this.glyphIterator.index;\n    let glyph = this.glyphIterator.increment(sequenceIndex);\n    let idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) matched.push(this.glyphIterator.index);\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) return false;\n    return matched || true;\n  }\n\n  sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => component === glyph.id);\n  }\n\n  sequenceMatchIndices(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => {\n      // If the current feature doesn't apply to this glyph,\n      if (!(this.currentFeature in glyph.features)) return false;\n      return component === glyph.id;\n    }, []);\n  }\n\n  coverageSequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (coverage, glyph) => this.coverageIndex(coverage, glyph.id) >= 0);\n  }\n\n  getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1:\n        let i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];\n        break;\n\n      case 2:\n        for (let range of classDef.classRangeRecord) {\n          if (range.start <= glyph && glyph <= range.end) return range.class;\n        }\n\n        break;\n    }\n\n    return 0;\n  }\n\n  classSequenceMatches(sequenceIndex, sequence, classDef) {\n    return this.match(sequenceIndex, sequence, (classID, glyph) => classID === this.getClassID(glyph.id, classDef));\n  }\n\n  applyContext(table) {\n    let index, set;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) return false;\n        set = table.ruleSets[index];\n\n        for (let rule of set) {\n          if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) return false;\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) return false;\n        set = table.classSet[index];\n\n        for (let rule1 of set) {\n          if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n        break;\n    }\n\n    return false;\n  }\n\n  applyChainingContext(table) {\n    let index;\n\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) return false;\n        let set = table.chainRuleSets[index];\n\n        for (let rule of set) {\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) return false;\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        let rules = table.chainClassSet[index];\n        if (!rules) return false;\n\n        for (let rule2 of rules) {\n          if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n        break;\n    }\n\n    return false;\n  }\n\n  constructor(font, table) {\n    this.font = font;\n    this.table = table;\n    this.script = null;\n    this.scriptTag = null;\n    this.language = null;\n    this.languageTag = null;\n    this.features = {};\n    this.lookups = {}; // Setup variation substitutions\n\n    this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1; // initialize to default script + language\n\n    this.selectScript(); // current context (set by applyFeatures)\n\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n}\n\nclass $10e7b257e1a9a756$export$2e2bcd8739ae039 {\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n    this.substituted = true;\n    let GDEF = this._font.GDEF;\n\n    if (GDEF && GDEF.glyphClassDef) {\n      // TODO: clean this up\n      let classID = (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.glyphClassDef);\n      this.isBase = classID === 1;\n      this.isLigature = classID === 2;\n      this.isMark = classID === 3;\n      this.markAttachmentType = GDEF.markAttachClassDef ? (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n    } else {\n      this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $6uUbQ$isMark));\n      this.isBase = !this.isMark;\n      this.isLigature = this.codePoints.length > 1;\n      this.markAttachmentType = 0;\n    }\n  }\n\n  copy() {\n    return new $10e7b257e1a9a756$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n  }\n\n  constructor(font, id) {\n    let codePoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let features = arguments.length > 3 ? arguments[3] : undefined;\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n    this.features = {};\n    if (Array.isArray(features)) for (let i = 0; i < features.length; i++) {\n      let feature = features[i];\n      this.features[feature] = true;\n    } else if (typeof features === \"object\") Object.assign(this.features, features);\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n}\n\nclass $e1c6bbc8cb416f8c$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n  static planFeatures(plan) {\n    plan.add([\"ljmo\", \"vjmo\", \"tjmo\"], false);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    let state = 0;\n    let i = 0;\n\n    while (i < glyphs.length) {\n      let action;\n      let glyph = glyphs[i];\n      let code = glyph.codePoints[0];\n      let type = $e1c6bbc8cb416f8c$var$getType(code);\n      [action, state] = $e1c6bbc8cb416f8c$var$STATE_TABLE[state][type];\n\n      switch (action) {\n        case $e1c6bbc8cb416f8c$var$DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) i = $e1c6bbc8cb416f8c$var$decompose(glyphs, i, plan.font);\n          break;\n\n        case $e1c6bbc8cb416f8c$var$COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = $e1c6bbc8cb416f8c$var$compose(glyphs, i, plan.font);\n          break;\n\n        case $e1c6bbc8cb416f8c$var$TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case $e1c6bbc8cb416f8c$var$INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($e1c6bbc8cb416f8c$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nconst $e1c6bbc8cb416f8c$var$HANGUL_BASE = 0xac00;\nconst $e1c6bbc8cb416f8c$var$HANGUL_END = 0xd7a4;\nconst $e1c6bbc8cb416f8c$var$HANGUL_COUNT = $e1c6bbc8cb416f8c$var$HANGUL_END - $e1c6bbc8cb416f8c$var$HANGUL_BASE + 1;\nconst $e1c6bbc8cb416f8c$var$L_BASE = 0x1100; // lead\n\nconst $e1c6bbc8cb416f8c$var$V_BASE = 0x1161; // vowel\n\nconst $e1c6bbc8cb416f8c$var$T_BASE = 0x11a7; // trail\n\nconst $e1c6bbc8cb416f8c$var$L_COUNT = 19;\nconst $e1c6bbc8cb416f8c$var$V_COUNT = 21;\nconst $e1c6bbc8cb416f8c$var$T_COUNT = 28;\nconst $e1c6bbc8cb416f8c$var$L_END = $e1c6bbc8cb416f8c$var$L_BASE + $e1c6bbc8cb416f8c$var$L_COUNT - 1;\nconst $e1c6bbc8cb416f8c$var$V_END = $e1c6bbc8cb416f8c$var$V_BASE + $e1c6bbc8cb416f8c$var$V_COUNT - 1;\nconst $e1c6bbc8cb416f8c$var$T_END = $e1c6bbc8cb416f8c$var$T_BASE + $e1c6bbc8cb416f8c$var$T_COUNT - 1;\nconst $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE = 0x25cc;\n\nconst $e1c6bbc8cb416f8c$var$isL = code => 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\n\nconst $e1c6bbc8cb416f8c$var$isV = code => 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\n\nconst $e1c6bbc8cb416f8c$var$isT = code => 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\n\nconst $e1c6bbc8cb416f8c$var$isTone = code => 0x302e <= code && code <= 0x302f;\n\nconst $e1c6bbc8cb416f8c$var$isLVT = code => $e1c6bbc8cb416f8c$var$HANGUL_BASE <= code && code <= $e1c6bbc8cb416f8c$var$HANGUL_END;\n\nconst $e1c6bbc8cb416f8c$var$isLV = code => code - $e1c6bbc8cb416f8c$var$HANGUL_BASE < $e1c6bbc8cb416f8c$var$HANGUL_COUNT && (code - $e1c6bbc8cb416f8c$var$HANGUL_BASE) % $e1c6bbc8cb416f8c$var$T_COUNT === 0;\n\nconst $e1c6bbc8cb416f8c$var$isCombiningL = code => $e1c6bbc8cb416f8c$var$L_BASE <= code && code <= $e1c6bbc8cb416f8c$var$L_END;\n\nconst $e1c6bbc8cb416f8c$var$isCombiningV = code => $e1c6bbc8cb416f8c$var$V_BASE <= code && code <= $e1c6bbc8cb416f8c$var$V_END;\n\nconst $e1c6bbc8cb416f8c$var$isCombiningT = code => $e1c6bbc8cb416f8c$var$T_BASE + 1 && 1 <= code && code <= $e1c6bbc8cb416f8c$var$T_END; // Character categories\n\n\nconst $e1c6bbc8cb416f8c$var$X = 0; // Other character\n\nconst $e1c6bbc8cb416f8c$var$L = 1; // Leading consonant\n\nconst $e1c6bbc8cb416f8c$var$V = 2; // Medial vowel\n\nconst $e1c6bbc8cb416f8c$var$T = 3; // Trailing consonant\n\nconst $e1c6bbc8cb416f8c$var$LV = 4; // Composed <LV> syllable\n\nconst $e1c6bbc8cb416f8c$var$LVT = 5; // Composed <LVT> syllable\n\nconst $e1c6bbc8cb416f8c$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\n\nfunction $e1c6bbc8cb416f8c$var$getType(code) {\n  if ($e1c6bbc8cb416f8c$var$isL(code)) return $e1c6bbc8cb416f8c$var$L;\n  if ($e1c6bbc8cb416f8c$var$isV(code)) return $e1c6bbc8cb416f8c$var$V;\n  if ($e1c6bbc8cb416f8c$var$isT(code)) return $e1c6bbc8cb416f8c$var$T;\n  if ($e1c6bbc8cb416f8c$var$isLV(code)) return $e1c6bbc8cb416f8c$var$LV;\n  if ($e1c6bbc8cb416f8c$var$isLVT(code)) return $e1c6bbc8cb416f8c$var$LVT;\n  if ($e1c6bbc8cb416f8c$var$isTone(code)) return $e1c6bbc8cb416f8c$var$M;\n  return $e1c6bbc8cb416f8c$var$X;\n} // State machine actions\n\n\nconst $e1c6bbc8cb416f8c$var$NO_ACTION = 0;\nconst $e1c6bbc8cb416f8c$var$DECOMPOSE = 1;\nconst $e1c6bbc8cb416f8c$var$COMPOSE = 2;\nconst $e1c6bbc8cb416f8c$var$TONE_MARK = 4;\nconst $e1c6bbc8cb416f8c$var$INVALID = 5; // Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\n\nconst $e1c6bbc8cb416f8c$var$STATE_TABLE = [//       X                 L                 V                T                  LV                LVT               M\n// State 0: start state\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$INVALID, 0]], // State 1: <L>\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$COMPOSE, 2], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$INVALID, 0]], // State 2: <L,V> or <LV>\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$COMPOSE, 3], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$TONE_MARK, 0]], // State 3: <L,V,T> or <LVT>\n[[$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 1], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$NO_ACTION, 0], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 2], [$e1c6bbc8cb416f8c$var$DECOMPOSE, 3], [$e1c6bbc8cb416f8c$var$TONE_MARK, 0]]];\n\nfunction $e1c6bbc8cb416f8c$var$getGlyph(font, code, features) {\n  return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction $e1c6bbc8cb416f8c$var$decompose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyph.codePoints[0];\n  let s = code - $e1c6bbc8cb416f8c$var$HANGUL_BASE;\n  let t = $e1c6bbc8cb416f8c$var$T_BASE + s % $e1c6bbc8cb416f8c$var$T_COUNT;\n  s = s / $e1c6bbc8cb416f8c$var$T_COUNT | 0;\n  let l = $e1c6bbc8cb416f8c$var$L_BASE + s / $e1c6bbc8cb416f8c$var$V_COUNT | 0;\n  let v = $e1c6bbc8cb416f8c$var$V_BASE + s % $e1c6bbc8cb416f8c$var$V_COUNT; // Don't decompose if all of the components are not available\n\n  if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $e1c6bbc8cb416f8c$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i; // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n\n  let ljmo = $e1c6bbc8cb416f8c$var$getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n  let vjmo = $e1c6bbc8cb416f8c$var$getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n  let insert = [ljmo, vjmo];\n\n  if (t > $e1c6bbc8cb416f8c$var$T_BASE) {\n    let tjmo = $e1c6bbc8cb416f8c$var$getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice(i, 1, ...insert);\n  return i + insert.length - 1;\n}\n\nfunction $e1c6bbc8cb416f8c$var$compose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n  let type = $e1c6bbc8cb416f8c$var$getType(code);\n  let prev = glyphs[i - 1].codePoints[0];\n  let prevType = $e1c6bbc8cb416f8c$var$getType(prev); // Figure out what type of syllable we're dealing with\n\n  let lv, ljmo, vjmo, tjmo;\n\n  if (prevType === $e1c6bbc8cb416f8c$var$LV && type === $e1c6bbc8cb416f8c$var$T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === $e1c6bbc8cb416f8c$var$V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    let l = ljmo.codePoints[0];\n    let v = vjmo.codePoints[0]; // Make sure L and V are combining characters\n\n    if ($e1c6bbc8cb416f8c$var$isCombiningL(l) && $e1c6bbc8cb416f8c$var$isCombiningV(v)) lv = $e1c6bbc8cb416f8c$var$HANGUL_BASE + ((l - $e1c6bbc8cb416f8c$var$L_BASE) * $e1c6bbc8cb416f8c$var$V_COUNT + (v - $e1c6bbc8cb416f8c$var$V_BASE)) * $e1c6bbc8cb416f8c$var$T_COUNT;\n  }\n\n  let t = tjmo && tjmo.codePoints[0] || $e1c6bbc8cb416f8c$var$T_BASE;\n\n  if (lv != null && (t === $e1c6bbc8cb416f8c$var$T_BASE || $e1c6bbc8cb416f8c$var$isCombiningT(t))) {\n    let s = lv + (t - $e1c6bbc8cb416f8c$var$T_BASE); // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n\n    if (font.hasGlyphForCodePoint(s)) {\n      let del = prevType === $e1c6bbc8cb416f8c$var$V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, $e1c6bbc8cb416f8c$var$getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  } // Didn't compose (either a non-combining component or unsupported by font).\n\n\n  if (ljmo) ljmo.features.ljmo = true;\n  if (vjmo) vjmo.features.vjmo = true;\n  if (tjmo) tjmo.features.tjmo = true;\n\n  if (prevType === $e1c6bbc8cb416f8c$var$LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    $e1c6bbc8cb416f8c$var$decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction $e1c6bbc8cb416f8c$var$getLength(code) {\n  switch ($e1c6bbc8cb416f8c$var$getType(code)) {\n    case $e1c6bbc8cb416f8c$var$LV:\n    case $e1c6bbc8cb416f8c$var$LVT:\n      return 1;\n\n    case $e1c6bbc8cb416f8c$var$V:\n      return 2;\n\n    case $e1c6bbc8cb416f8c$var$T:\n      return 3;\n  }\n}\n\nfunction $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0]; // Move tone mark to the beginning of the previous syllable, unless it is zero width\n\n  if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n  let prev = glyphs[i - 1].codePoints[0];\n  let len = $e1c6bbc8cb416f8c$var$getLength(prev);\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint($e1c6bbc8cb416f8c$var$DOTTED_CIRCLE)) {\n    let dottedCircle = $e1c6bbc8cb416f8c$var$getGlyph(font, $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE, glyph.features); // If the tone mark is zero width, insert the dotted circle before, otherwise after\n\n    let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n\nvar $4b0735ca6c692ea5$exports = {};\n$4b0735ca6c692ea5$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\nvar $aa333a9607471296$exports = {};\n$aa333a9607471296$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\nconst $90a9d3398ee54fe5$export$a513ea61a7bee91c = {\n  X: 1,\n  C: 2,\n  V: 4,\n  N: 8,\n  H: 16,\n  ZWNJ: 32,\n  ZWJ: 64,\n  M: 128,\n  SM: 256,\n  VD: 512,\n  A: 1024,\n  Placeholder: 2048,\n  Dotted_Circle: 4096,\n  RS: 8192,\n  Coeng: 16384,\n  Repha: 32768,\n  Ra: 65536,\n  CM: 131072,\n  Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n\n};\nconst $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0 = {\n  Start: 1,\n  Ra_To_Become_Reph: 2,\n  Pre_M: 4,\n  Pre_C: 8,\n  Base_C: 16,\n  After_Main: 32,\n  Above_C: 64,\n  Before_Sub: 128,\n  Below_C: 256,\n  After_Sub: 512,\n  Before_Post: 1024,\n  Post_C: 2048,\n  After_Post: 4096,\n  Final_C: 8192,\n  SMVD: 16384,\n  End: 32768\n};\nconst $90a9d3398ee54fe5$export$8519deaa7de2b07 = $90a9d3398ee54fe5$export$a513ea61a7bee91c.C | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Ra | $90a9d3398ee54fe5$export$a513ea61a7bee91c.CM | $90a9d3398ee54fe5$export$a513ea61a7bee91c.V | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Placeholder | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Dotted_Circle;\nconst $90a9d3398ee54fe5$export$bbcd928767338e0d = $90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ | $90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWNJ;\nconst $90a9d3398ee54fe5$export$ca9599b2a300afc = $90a9d3398ee54fe5$export$a513ea61a7bee91c.H | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Coeng;\nconst $90a9d3398ee54fe5$export$e99d119da76a0fc5 = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Sub,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Sub,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n    rephMode: \"Explicit\",\n    blwfMode: \"Post_Only\"\n  },\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n    rephMode: \"Implicit\",\n    blwfMode: \"Post_Only\"\n  },\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: \"Last\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,\n    rephMode: \"Log_Repha\",\n    blwfMode: \"Pre_And_Post\"\n  },\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: \"First\",\n    rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n    rephMode: \"Vis_Repha\",\n    blwfMode: \"Pre_And_Post\"\n  }\n};\nconst $90a9d3398ee54fe5$export$f647c9cfdd77d95a = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\nconst {\n  decompositions: $7826f90f6f0cecc9$var$decompositions\n} = (0, /*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports));\nconst $7826f90f6f0cecc9$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"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\"));\nconst $7826f90f6f0cecc9$var$stateMachine = new (0, $6uUbQ$dfa)((0, /*@__PURE__*/$parcel$interopDefault($4b0735ca6c692ea5$exports)));\n\nclass $7826f90f6f0cecc9$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n  static planFeatures(plan) {\n    plan.addStage($7826f90f6f0cecc9$var$setupSyllables);\n    plan.addStage([\"locl\", \"ccmp\"]);\n    plan.addStage($7826f90f6f0cecc9$var$initialReordering);\n    plan.addStage(\"nukt\");\n    plan.addStage(\"akhn\");\n    plan.addStage(\"rphf\", false);\n    plan.addStage(\"rkrf\");\n    plan.addStage(\"pref\", false);\n    plan.addStage(\"blwf\", false);\n    plan.addStage(\"abvf\", false);\n    plan.addStage(\"half\", false);\n    plan.addStage(\"pstf\", false);\n    plan.addStage(\"vatu\");\n    plan.addStage(\"cjct\");\n    plan.addStage(\"cfar\", false);\n    plan.addStage($7826f90f6f0cecc9$var$finalReordering);\n    plan.addStage({\n      local: [\"init\"],\n      global: [\"pres\", \"abvs\", \"blws\", \"psts\", \"haln\", \"dist\", \"abvm\", \"blwm\", \"calt\", \"clig\"]\n    }); // Setup the indic config for the selected script\n\n    plan.unicodeScript = $130d1a642ebcd2b7$export$ce50e82f12a827a4(plan.script);\n    plan.indicConfig = (0, $90a9d3398ee54fe5$export$e99d119da76a0fc5)[plan.unicodeScript] || (0, $90a9d3398ee54fe5$export$e99d119da76a0fc5).Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\"; // TODO: turn off kern (Khmer) and liga features.\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      let d = (0, $90a9d3398ee54fe5$export$f647c9cfdd77d95a)[codepoint] || $7826f90f6f0cecc9$var$decompositions[codepoint];\n\n      if (d) {\n        let decomposed = d.map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($7826f90f6f0cecc9$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\n\nfunction $7826f90f6f0cecc9$var$indicCategory(glyph) {\n  return $7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction $7826f90f6f0cecc9$var$indicPosition(glyph) {\n  return 1 << ($7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\n\nclass $7826f90f6f0cecc9$var$IndicInfo {\n  constructor(category, position, syllableType, syllable) {\n    this.category = category;\n    this.position = position;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n\n}\n\nfunction $7826f90f6f0cecc9$var$setupSyllables(font, glyphs) {\n  let syllable = 0;\n  let last = 0;\n\n  for (let [start, end, tags] of $7826f90f6f0cecc9$var$stateMachine.match(glyphs.map($7826f90f6f0cecc9$var$indicCategory))) {\n    if (start > last) {\n      ++syllable;\n\n      for (let i = last; i < start; i++) glyphs[i].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).X, (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n    }\n\n    ++syllable; // Create shaper info\n\n    for (let i = start; i <= end; i++) glyphs[i].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo(1 << $7826f90f6f0cecc9$var$indicCategory(glyphs[i]), $7826f90f6f0cecc9$var$indicPosition(glyphs[i]), tags[0], syllable);\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n\n    for (let i = last; i < glyphs.length; i++) glyphs[i].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).X, (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n  }\n}\n\nfunction $7826f90f6f0cecc9$var$isConsonant(glyph) {\n  return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$8519deaa7de2b07);\n}\n\nfunction $7826f90f6f0cecc9$var$isJoiner(glyph) {\n  return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$bbcd928767338e0d);\n}\n\nfunction $7826f90f6f0cecc9$var$isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$ca9599b2a300afc);\n}\n\nfunction $7826f90f6f0cecc9$var$wouldSubstitute(glyphs, feature) {\n  for (let glyph of glyphs) glyph.features = {\n    [feature]: true\n  };\n\n  let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n  return glyphs.length === 1;\n}\n\nfunction $7826f90f6f0cecc9$var$consonantPosition(font, consonant, virama) {\n  let glyphs = [virama, consonant, virama];\n  if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;else if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;else if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;\n  return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n}\n\nfunction $7826f90f6f0cecc9$var$initialReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  let virama = font.glyphForCodePoint(indicConfig.virama).id;\n\n  if (virama) {\n    let info = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, virama, [indicConfig.virama]);\n\n    for (let i = 0; i < glyphs.length; i++) if (glyphs[i].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) glyphs[i].shaperInfo.position = $7826f90f6f0cecc9$var$consonantPosition(font, glyphs[i].copy(), info);\n  }\n\n  for (let start = 0, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, start)) {\n    let {\n      category: category,\n      syllableType: syllableType\n    } = glyphs[start].shaperInfo;\n    if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n\n    if (syllableType === \"broken_cluster\" && dottedCircle) {\n      let g = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo(1 << $7826f90f6f0cecc9$var$indicCategory(g), $7826f90f6f0cecc9$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable); // Insert after possible Repha.\n\n      let i = start;\n\n      while (i < end && glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha) i++;\n\n      glyphs.splice(i++, 0, g);\n      end++;\n    } // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n\n    let base = end;\n    let limit = start;\n    let hasReph = false; // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n\n    if (indicConfig.rephPos !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$7826f90f6f0cecc9$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)) {\n      // See if it matches the 'rphf' feature.\n      let g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n\n      if ($7826f90f6f0cecc9$var$wouldSubstitute(g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $7826f90f6f0cecc9$var$wouldSubstitute(g, \"rphf\")) {\n        limit += 2;\n\n        while (limit < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[limit])) limit++;\n\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha) {\n      limit++;\n\n      while (limit < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[limit])) limit++;\n\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case \"Last\":\n        {\n          // starting from the end of the syllable, move backwards\n          let i = end;\n          let seenBelow = false;\n\n          do {\n            let info = glyphs[--i].shaperInfo; // until a consonant is found\n\n            if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i])) {\n              // that does not have a below-base or post-base form\n              // (post-base forms have to follow below-base forms),\n              if (info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C && (info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C || seenBelow)) {\n                base = i;\n                break;\n              } // or that is not a pre-base reordering Ra,\n              //\n              // IMPLEMENTATION NOTES:\n              //\n              // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n              // by the logic above already.\n              //\n              // or arrive at the first consonant. The consonant stopped at will\n              // be the base.\n\n\n              if (info.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C) seenBelow = true;\n              base = i;\n            } else if (start < i && info.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ && glyphs[i - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) break;\n          } while (i > limit);\n\n          break;\n        }\n\n      case \"First\":\n        // The first consonant is always the base.\n        base = start; // Mark all subsequent consonants as below.\n\n        for (let i = base + 1; i < end; i++) if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;\n\n    } // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n\n\n    if (hasReph && base === start && limit - base <= 2) hasReph = false; // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n    // Reorder characters\n\n    for (let i1 = start; i1 < base; i1++) {\n      let info = glyphs[i1].shaperInfo;\n      info.position = Math.min((0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_C, info.position);\n    }\n\n    if (base < end) glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C; // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n\n    for (let i2 = base + 1; i2 < end; i2++) if (glyphs[i2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n      for (let j = i2 + 1; j < end; j++) if ($7826f90f6f0cecc9$var$isConsonant(glyphs[j])) {\n        glyphs[j].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Final_C;\n        break;\n      }\n\n      break;\n    } // Handle beginning Ra\n\n\n    if (hasReph) glyphs[start].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n\n    if (plan.isOldSpec) {\n      let disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n\n      for (let i = base + 1; i < end; i++) if (glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) {\n        let j;\n\n        for (j = end - 1; j > i; j--) {\n          if ($7826f90f6f0cecc9$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) break;\n        }\n\n        if (glyphs[j].shaperInfo.category !== (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && j > i) {\n          // Move Halant to after last consonant.\n          let t = glyphs[i];\n          glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n          glyphs[j] = t;\n        }\n\n        break;\n      }\n    } // Attach misc marks to previous char to move with them.\n\n\n    let lastPos = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Start;\n\n    for (let i3 = start; i3 < end; i3++) {\n      let info = glyphs[i3].shaperInfo;\n\n      if (info.category & ((0, $90a9d3398ee54fe5$export$bbcd928767338e0d) | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).N | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).RS | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).CM | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc) & info.category)) {\n        info.position = lastPos;\n\n        if (info.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && info.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (let j = i3; j > start; j--) if (glyphs[j - 1].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n            info.position = glyphs[j - 1].shaperInfo.position;\n            break;\n          }\n        }\n      } else if (info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) lastPos = info.position;\n    } // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n\n\n    let last = base;\n\n    for (let i4 = base + 1; i4 < end; i4++) {\n      if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i4])) {\n        for (let j = last + 1; j < i4; j++) if (glyphs[j].shaperInfo.position < (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;\n\n        last = i4;\n      } else if (glyphs[i4].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) last = i4;\n    }\n\n    let arr = glyphs.slice(start, end);\n    arr.sort((a, b) => a.shaperInfo.position - b.shaperInfo.position);\n    glyphs.splice(start, arr.length, ...arr); // Find base again\n\n    for (let i5 = start; i5 < end; i5++) if (glyphs[i5].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) {\n      base = i5;\n      break;\n    } // Setup features now\n    // Reph\n\n\n    for (let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; i6++) glyphs[i6].features.rphf = true; // Pre-base\n\n\n    let blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n\n    for (let i7 = start; i7 < base; i7++) {\n      glyphs[i7].features.half = true;\n      if (blwf) glyphs[i7].features.blwf = true;\n    } // Post-base\n\n\n    for (let i8 = base + 1; i8 < end; i8++) {\n      glyphs[i8].features.abvf = true;\n      glyphs[i8].features.pstf = true;\n      glyphs[i8].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (let i = start; i + 1 < base; i++) if (glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Ra && glyphs[i + 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)) {\n        glyphs[i].features.blwf = true;\n        glyphs[i + 1].features.blwf = true;\n      }\n    }\n\n    let prefLen = 2;\n    if (features.pref && base + prefLen < end) // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (let i9 = base + 1; i9 + prefLen - 1 < end; i9++) {\n        let g = [glyphs[i9].copy(), glyphs[i9 + 1].copy()];\n\n        if ($7826f90f6f0cecc9$var$wouldSubstitute(g, \"pref\")) {\n          for (let j = 0; j < prefLen; j++) glyphs[i9++].features.pref = true; // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n\n\n          if (features.cfar) for (; i9 < end; i9++) glyphs[i9].features.cfar = true;\n          break;\n        }\n      } // Apply ZWJ/ZWNJ effects\n\n    for (let i10 = start + 1; i10 < end; i10++) if ($7826f90f6f0cecc9$var$isJoiner(glyphs[i10])) {\n      let nonJoiner = glyphs[i10].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWNJ;\n      let j = i10;\n\n      do {\n        j--; // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n        // being there, since we don't skip them for the CJCT\n        // feature (ie. F_MANUAL_ZWJ)\n        // A ZWNJ disables HALF.\n\n        if (nonJoiner) delete glyphs[j].features.half;\n      } while (j > start && !$7826f90f6f0cecc9$var$isConsonant(glyphs[j]));\n    }\n  }\n}\n\nfunction $7826f90f6f0cecc9$var$finalReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (let start = 0, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n    let tryPref = !!features.pref; // Find base again\n\n    let base = start;\n\n    for (; base < end; base++) if (glyphs[base].shaperInfo.position >= (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) {\n      if (tryPref && base + 1 < end) {\n        for (let i = base + 1; i < end; i++) if (glyphs[i].features.pref) {\n          if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n            // Ok, this was a 'pref' candidate but didn't form any.\n            // Base is around here...\n            base = i;\n\n            while (base < end && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[base])) base++;\n\n            glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).BASE_C;\n            tryPref = false;\n          }\n\n          break;\n        }\n      } // For Malayalam, skip over unformed below- (but NOT post-) forms.\n\n\n      if (plan.unicodeScript === \"Malayalam\") for (let i = base + 1; i < end; i++) {\n        while (i < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[i])) i++;\n\n        if (i === end || !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[i])) break;\n        i++; // Skip halant.\n\n        while (i < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[i])) i++;\n\n        if (i < end && $7826f90f6f0cecc9$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C) {\n          base = i;\n          glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n        }\n      }\n      if (start < base && glyphs[base].shaperInfo.position > (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) base--;\n      break;\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ) base--;\n    if (base < end) while (start < base && glyphs[base].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).N | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc))) base--; // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) {\n      // If we lost track of base, alas, position before last thingy.\n      let newPos = base === end ? base - 2 : base - 1; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n\n      if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc)))) newPos--; // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n\n\n        if ($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          {\n            if (newPos + 1 < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[newPos + 1])) newPos++;\n          } else newPos = start; // No move.\n\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n        // Now go see if there's actually any matras...\n        for (let i = newPos; i > start; i--) if (glyphs[i - 1].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n          let oldPos = i - 1;\n          if (oldPos < base && base <= newPos) base--;\n          let tmp = glyphs[oldPos];\n          glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n          glyphs[newPos] = tmp;\n          newPos--;\n        }\n      }\n    } // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n\n\n    if (start + 1 < end && glyphs[start].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && glyphs[start].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n      let newRephPos;\n      let rephPos = indicConfig.rephPos;\n      let found = false; // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n\n      if (rephPos !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) newRephPos++;\n\n        if (newRephPos < base && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && $7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n          found = true;\n        } // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n\n\n        if (!found && rephPos === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main) newRephPos++;\n\n          found = newRephPos < end;\n        } // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n\n\n        if (!found && rephPos === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Sub) {\n          newRephPos = base;\n\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ((0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C | (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post | (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD))) newRephPos++;\n\n          found = newRephPos < end;\n        }\n      } //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n\n\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n\n        while (newRephPos < base && !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) newRephPos++;\n\n        if (newRephPos < base && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && $7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n          found = true;\n        }\n      } // 6. Otherwise, reorder reph to the end of the syllable.\n\n\n      if (!found) {\n        newRephPos = end - 1;\n\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) newRephPos--; // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n\n\n        if ($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n          for (let i = base + 1; i < newRephPos; i++) if (glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) newRephPos--;\n        }\n      }\n\n      let reph = glyphs[start];\n      glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n      glyphs[newRephPos] = reph;\n      if (start < base && base <= newRephPos) base--;\n    } // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n\n\n    if (tryPref && base + 1 < end) {\n      for (let i = base + 1; i < end; i++) if (glyphs[i].features.pref) {\n        // 1. Only reorder a glyph produced by substitution during application\n        //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n        //    the feature generally but block it in certain contexts.)\n        // Note: We just check that something got substituted.  We don't check that\n        // the <pref> feature actually did it...\n        //\n        // Reorder pref only if it ligated.\n        if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n          // 2. Try to find a target position the same way as for pre-base matra.\n          //    If it is found, reorder pre-base consonant glyph.\n          //\n          // 3. If position is not found, reorder immediately before main\n          //    consonant.\n          let newPos = base; // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n          // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n          // We want to position matra after them.\n\n          if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n            while (newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc)))) newPos--; // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n            // split matra, it should be reordered to *before* the left part of such matra.\n\n\n            if (newPos > start && glyphs[newPos - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n              let oldPos = i;\n\n              for (let j = base + 1; j < oldPos; j++) if (glyphs[j].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n                newPos--;\n                break;\n              }\n            }\n          }\n\n          if (newPos > start && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos - 1])) // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n            {\n              if (newPos < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[newPos])) newPos++;\n            }\n\n          let oldPos = i;\n          let tmp = glyphs[oldPos];\n          glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n          glyphs[newPos] = tmp;\n          if (newPos <= base && base < oldPos) base++;\n        }\n\n        break;\n      }\n    } // Apply 'init' to the Left Matra if it's a word start.\n\n\n    if (glyphs[start].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M && (!start || !/Cf|Mn/.test((0, $6uUbQ$getCategory)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n  }\n}\n\nfunction $7826f90f6f0cecc9$var$nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n\n  return start;\n}\n\nconst {\n  categories: $7ab494fe977143c6$var$categories,\n  decompositions: $7ab494fe977143c6$var$decompositions\n} = (0, /*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports));\nconst $7ab494fe977143c6$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"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\"));\nconst $7ab494fe977143c6$var$stateMachine = new (0, $6uUbQ$dfa)((0, /*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports)));\n\nclass $7ab494fe977143c6$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n  static planFeatures(plan) {\n    plan.addStage($7ab494fe977143c6$var$setupSyllables); // Default glyph pre-processing group\n\n    plan.addStage([\"locl\", \"ccmp\", \"nukt\", \"akhn\"]); // Reordering group\n\n    plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);\n    plan.addStage([\"rphf\"], false);\n    plan.addStage($7ab494fe977143c6$var$recordRphf);\n    plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);\n    plan.addStage([\"pref\"]);\n    plan.addStage($7ab494fe977143c6$var$recordPref); // Orthographic unit shaping group\n\n    plan.addStage([\"rkrf\", \"abvf\", \"blwf\", \"half\", \"pstf\", \"vatu\", \"cjct\"]);\n    plan.addStage($7ab494fe977143c6$var$reorder); // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n    // Standard topographic presentation and positional feature application\n\n    plan.addStage([\"abvs\", \"blws\", \"pres\", \"psts\", \"dist\", \"abvm\", \"blwm\"]);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n\n      if ($7ab494fe977143c6$var$decompositions[codepoint]) {\n        let decomposed = $7ab494fe977143c6$var$decompositions[codepoint].map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font, g.id, [c], glyphs[i].features);\n        });\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($7ab494fe977143c6$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\n\nfunction $7ab494fe977143c6$var$useCategory(glyph) {\n  return $7ab494fe977143c6$var$trie.get(glyph.codePoints[0]);\n}\n\nclass $7ab494fe977143c6$var$USEInfo {\n  constructor(category, syllableType, syllable) {\n    this.category = category;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n\n}\n\nfunction $7ab494fe977143c6$var$setupSyllables(font, glyphs) {\n  let syllable = 0;\n\n  for (let [start, end, tags] of $7ab494fe977143c6$var$stateMachine.match(glyphs.map($7ab494fe977143c6$var$useCategory))) {\n    ++syllable; // Create shaper info\n\n    for (let i = start; i <= end; i++) glyphs[i].shaperInfo = new $7ab494fe977143c6$var$USEInfo($7ab494fe977143c6$var$categories[$7ab494fe977143c6$var$useCategory(glyphs[i])], tags[0], syllable); // Assign rphf feature\n\n\n    let limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n\n    for (let i1 = start; i1 < start + limit; i1++) glyphs[i1].features.rphf = true;\n  }\n}\n\nfunction $7ab494fe977143c6$var$clearSubstitutionFlags(font, glyphs) {\n  for (let glyph of glyphs) glyph.substituted = false;\n}\n\nfunction $7ab494fe977143c6$var$recordRphf(font, glyphs) {\n  for (let glyph of glyphs) if (glyph.substituted && glyph.features.rphf) // Mark a substituted repha.\n    glyph.shaperInfo.category = \"R\";\n}\n\nfunction $7ab494fe977143c6$var$recordPref(font, glyphs) {\n  for (let glyph of glyphs) if (glyph.substituted) // Mark a substituted pref as VPre, as they behave the same way.\n    glyph.shaperInfo.category = \"VPre\";\n}\n\nfunction $7ab494fe977143c6$var$reorder(font, glyphs) {\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (let start = 0, end = $7ab494fe977143c6$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7ab494fe977143c6$var$nextSyllable(glyphs, start)) {\n    let i, j;\n    let info = glyphs[start].shaperInfo;\n    let type = info.syllableType; // Only a few syllable types need reordering.\n\n    if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue; // Insert a dotted circle glyph in broken clusters.\n\n    if (type === \"broken_cluster\" && dottedCircle) {\n      let g = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info; // Insert after possible Repha.\n\n      for (i = start; i < end && glyphs[i].shaperInfo.category === \"R\"; i++);\n\n      glyphs.splice(++i, 0, g);\n      end++;\n    } // Move things forward.\n\n\n    if (info.category === \"R\" && end - start > 1) // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n\n        if ($7ab494fe977143c6$var$isBase(info) || $7ab494fe977143c6$var$isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if ($7ab494fe977143c6$var$isHalant(glyphs[i])) i--;\n          glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n          break;\n        }\n      } // Move things back.\n\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if ($7ab494fe977143c6$var$isBase(info) || $7ab494fe977143c6$var$isHalant(glyphs[i])) // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = $7ab494fe977143c6$var$isHalant(glyphs[i]) ? i + 1 : i;else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n    }\n  }\n}\n\nfunction $7ab494fe977143c6$var$nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n\n  return start;\n}\n\nfunction $7ab494fe977143c6$var$isHalant(glyph) {\n  return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\n\nfunction $7ab494fe977143c6$var$isBase(info) {\n  return info.category === \"B\" || info.category === \"GB\";\n}\n\nconst $102b6fe50f1d50b4$var$SHAPERS = {\n  arab: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  mong: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  syrc: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  \"nko \": (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  phag: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  mand: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  mani: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  phlp: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n  hang: (0, $e1c6bbc8cb416f8c$export$2e2bcd8739ae039),\n  bng2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  beng: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  dev2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  deva: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  gjr2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  gujr: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  guru: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  gur2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  knda: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  knd2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  mlm2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  mlym: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  ory2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  orya: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  taml: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  tml2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  telu: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  tel2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  khmr: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  bali: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  batk: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  brah: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  bugi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  buhd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  cakm: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  cham: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  dupl: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  egyp: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  gran: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  hano: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  java: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  kthi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  kali: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  khar: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  khoj: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sind: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  lepc: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  limb: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  mahj: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  modi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  saur: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  shrd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sidd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sinh: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n  sund: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  sylo: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tglg: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tagb: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tale: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  lana: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tavt: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  takr: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tibt: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tfng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  tirh: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n  latn: (0, $649970d87335b30f$export$2e2bcd8739ae039),\n  DFLT: (0, $649970d87335b30f$export$2e2bcd8739ae039 // Default\n  )\n};\n\nfunction $102b6fe50f1d50b4$export$7877a478dd30fd3d(script) {\n  if (!Array.isArray(script)) script = [script];\n\n  for (let s of script) {\n    let shaper = $102b6fe50f1d50b4$var$SHAPERS[s];\n    if (shaper) return shaper;\n  }\n\n  return 0, $649970d87335b30f$export$2e2bcd8739ae039;\n}\n\nclass $0a876c45f1f7c41c$export$2e2bcd8739ae039 extends (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039) {\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          let index = this.coverageIndex(table.coverage);\n          if (index === -1) return false;\n          let glyph = this.glyphIterator.cur;\n\n          switch (table.version) {\n            case 1:\n              glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n              break;\n\n            case 2:\n              glyph.id = table.substitute.get(index);\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          let index = this.coverageIndex(table.coverage);\n\n          if (index !== -1) {\n            let sequence = table.sequences.get(index);\n\n            if (sequence.length === 0) {\n              // If the sequence length is zero, delete the glyph.\n              // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n              this.glyphs.splice(this.glyphIterator.index, 1);\n              return true;\n            }\n\n            this.glyphIterator.cur.id = sequence[0];\n            this.glyphIterator.cur.ligatureComponent = 0;\n            let features = this.glyphIterator.cur.features;\n            let curGlyph = this.glyphIterator.cur;\n            let replacement = sequence.slice(1).map((gid, i) => {\n              let glyph = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, gid, undefined, features);\n              glyph.shaperInfo = curGlyph.shaperInfo;\n              glyph.isLigated = curGlyph.isLigated;\n              glyph.ligatureComponent = i + 1;\n              glyph.substituted = true;\n              glyph.isMultiplied = true;\n              return glyph;\n            });\n            this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n            return true;\n          }\n\n          return false;\n        }\n\n      case 3:\n        {\n          let index = this.coverageIndex(table.coverage);\n\n          if (index !== -1) {\n            let USER_INDEX = 0; // TODO\n\n            this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n            return true;\n          }\n\n          return false;\n        }\n\n      case 4:\n        {\n          let index = this.coverageIndex(table.coverage);\n          if (index === -1) return false;\n\n          for (let ligature of table.ligatureSets.get(index)) {\n            let matched = this.sequenceMatchIndices(1, ligature.components);\n            if (!matched) continue;\n            let curGlyph = this.glyphIterator.cur; // Concatenate all of the characters the new ligature will represent\n\n            let characters = curGlyph.codePoints.slice();\n\n            for (let index of matched) characters.push(...this.glyphs[index].codePoints); // Create the replacement ligature glyph\n\n\n            let ligatureGlyph = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, ligature.glyph, characters, curGlyph.features);\n            ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n            ligatureGlyph.isLigated = true;\n            ligatureGlyph.substituted = true; // From Harfbuzz:\n            // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n            //   the ligature to keep its old ligature id.  This will allow it to attach to\n            //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n            //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n            //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n            //   later, we don't want them to lose their ligature id/component, otherwise\n            //   GPOS will fail to correctly position the mark ligature on top of the\n            //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n            //\n            // - If a ligature is formed of components that some of which are also ligatures\n            //   themselves, and those ligature components had marks attached to *their*\n            //   components, we have to attach the marks to the new ligature component\n            //   positions!  Now *that*'s tricky!  And these marks may be following the\n            //   last component of the whole sequence, so we should loop forward looking\n            //   for them and update them.\n            //\n            //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n            //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n            //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n            //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n            //   the new ligature with a component value of 2.\n            //\n            //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n\n            let isMarkLigature = curGlyph.isMark;\n\n            for (let i = 0; i < matched.length && isMarkLigature; i++) isMarkLigature = this.glyphs[matched[i]].isMark;\n\n            ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n            let lastLigID = curGlyph.ligatureID;\n            let lastNumComps = curGlyph.codePoints.length;\n            let curComps = lastNumComps;\n            let idx = this.glyphIterator.index + 1; // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n            // This allows GPOS to attach marks to the correct ligature components.\n\n            for (let matchIndex of matched) {\n              // Don't assign new ligature components for mark ligatures (see above)\n              if (isMarkLigature) idx = matchIndex;else while (idx < matchIndex) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                idx++;\n              }\n              lastLigID = this.glyphs[idx].ligatureID;\n              lastNumComps = this.glyphs[idx].codePoints.length;\n              curComps += lastNumComps;\n              idx++; // skip base glyph\n            } // Adjust ligature components for any marks following\n\n\n            if (lastLigID && !isMarkLigature) for (let i1 = idx; i1 < this.glyphs.length; i1++) {\n              if (this.glyphs[i1].ligatureID === lastLigID) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                this.glyphs[i1].ligatureComponent = ligatureComponent;\n              } else break;\n            } // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n\n            for (let i2 = matched.length - 1; i2 >= 0; i2--) this.glyphs.splice(matched[i2], 1);\n\n            this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n            return true;\n          }\n\n          return false;\n        }\n\n      case 5:\n        return this.applyContext(table);\n\n      case 6:\n        return this.applyChainingContext(table);\n\n      case 7:\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n    }\n  }\n\n}\n\nclass $c96c93587d49c14d$export$2e2bcd8739ae039 extends (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039) {\n  applyPositionValue(sequenceIndex, value) {\n    let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n    if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n    if (value.xPlacement != null) position.xOffset += value.xPlacement;\n    if (value.yPlacement != null) position.yOffset += value.yPlacement; // Adjustments for font variations\n\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n    } // TODO: device tables\n\n  }\n\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1:\n        {\n          let index = this.coverageIndex(table.coverage);\n          if (index === -1) return false;\n\n          switch (table.version) {\n            case 1:\n              this.applyPositionValue(0, table.value);\n              break;\n\n            case 2:\n              this.applyPositionValue(0, table.values.get(index));\n              break;\n          }\n\n          return true;\n        }\n\n      case 2:\n        {\n          let nextGlyph = this.glyphIterator.peek();\n          if (!nextGlyph) return false;\n          let index = this.coverageIndex(table.coverage);\n          if (index === -1) return false;\n\n          switch (table.version) {\n            case 1:\n              let set = table.pairSets.get(index);\n\n              for (let pair of set) if (pair.secondGlyph === nextGlyph.id) {\n                this.applyPositionValue(0, pair.value1);\n                this.applyPositionValue(1, pair.value2);\n                return true;\n              }\n\n              return false;\n\n            case 2:\n              let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n              let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n              if (class1 === -1 || class2 === -1) return false;\n              var pair1 = table.classRecords.get(class1).get(class2);\n              this.applyPositionValue(0, pair1.value1);\n              this.applyPositionValue(1, pair1.value2);\n              return true;\n          }\n        }\n\n      case 3:\n        {\n          let nextIndex = this.glyphIterator.peekIndex();\n          let nextGlyph = this.glyphs[nextIndex];\n          if (!nextGlyph) return false;\n          let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n          if (!curRecord || !curRecord.exitAnchor) return false;\n          let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n          if (!nextRecord || !nextRecord.entryAnchor) return false;\n          let entry = this.getAnchor(nextRecord.entryAnchor);\n          let exit = this.getAnchor(curRecord.exitAnchor);\n          let cur = this.positions[this.glyphIterator.index];\n          let next = this.positions[nextIndex];\n          let d;\n\n          switch (this.direction) {\n            case \"ltr\":\n              cur.xAdvance = exit.x + cur.xOffset;\n              d = entry.x + next.xOffset;\n              next.xAdvance -= d;\n              next.xOffset -= d;\n              break;\n\n            case \"rtl\":\n              d = exit.x + cur.xOffset;\n              cur.xAdvance -= d;\n              cur.xOffset -= d;\n              next.xAdvance = entry.x + next.xOffset;\n              break;\n          }\n\n          if (this.glyphIterator.flags.rightToLeft) {\n            this.glyphIterator.cur.cursiveAttachment = nextIndex;\n            cur.yOffset = entry.y - exit.y;\n          } else {\n            nextGlyph.cursiveAttachment = this.glyphIterator.index;\n            cur.yOffset = exit.y - entry.y;\n          }\n\n          return true;\n        }\n\n      case 4:\n        {\n          let markIndex = this.coverageIndex(table.markCoverage);\n          if (markIndex === -1) return false; // search backward for a base glyph\n\n          let baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n\n          if (baseGlyphIndex < 0) return false;\n          let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n          if (baseIndex === -1) return false;\n          let markRecord = table.markArray[markIndex];\n          let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 5:\n        {\n          let markIndex = this.coverageIndex(table.markCoverage);\n          if (markIndex === -1) return false; // search backward for a base glyph\n\n          let baseGlyphIndex = this.glyphIterator.index;\n\n          while (--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n\n          if (baseGlyphIndex < 0) return false;\n          let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n          if (ligIndex === -1) return false;\n          let ligAttach = table.ligatureArray[ligIndex];\n          let markGlyph = this.glyphIterator.cur;\n          let ligGlyph = this.glyphs[baseGlyphIndex];\n          let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n          let markRecord = table.markArray[markIndex];\n          let baseAnchor = ligAttach[compIndex][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n          return true;\n        }\n\n      case 6:\n        {\n          let mark1Index = this.coverageIndex(table.mark1Coverage);\n          if (mark1Index === -1) return false; // get the previous mark to attach to\n\n          let prevIndex = this.glyphIterator.peekIndex(-1);\n          let prev = this.glyphs[prevIndex];\n          if (!prev || !prev.isMark) return false;\n          let cur = this.glyphIterator.cur; // The following logic was borrowed from Harfbuzz\n\n          let good = false;\n\n          if (cur.ligatureID === prev.ligatureID) {\n            if (!cur.ligatureID) good = true;else if (cur.ligatureComponent === prev.ligatureComponent) good = true;\n          } else // If ligature ids don't match, it may be the case that one of the marks\n            // itself is a ligature, in which case match.\n            if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n\n          if (!good) return false;\n          let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n          if (mark2Index === -1) return false;\n          let markRecord = table.mark1Array[mark1Index];\n          let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n          this.applyAnchor(markRecord, baseAnchor, prevIndex);\n          return true;\n        }\n\n      case 7:\n        return this.applyContext(table);\n\n      case 8:\n        return this.applyChainingContext(table);\n\n      case 9:\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`Unsupported GPOS table: ${lookupType}`);\n    }\n  }\n\n  applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    let baseCoords = this.getAnchor(baseAnchor);\n    let markCoords = this.getAnchor(markRecord.markAnchor);\n    let basePos = this.positions[baseGlyphIndex];\n    let markPos = this.positions[this.glyphIterator.index];\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  }\n\n  getAnchor(anchor) {\n    // TODO: contour point, device tables\n    let x = anchor.xCoordinate;\n    let y = anchor.yCoordinate; // Adjustments for font variations\n\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    super.applyFeatures(userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) this.fixCursiveAttachment(i);\n\n    this.fixMarkAttachment();\n  }\n\n  fixCursiveAttachment(i) {\n    let glyph = this.glyphs[i];\n\n    if (glyph.cursiveAttachment != null) {\n      let j = glyph.cursiveAttachment;\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  }\n\n  fixMarkAttachment() {\n    for (let i = 0; i < this.glyphs.length; i++) {\n      let glyph = this.glyphs[i];\n\n      if (glyph.markAttachment != null) {\n        let j = glyph.markAttachment;\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n        if (this.direction === \"ltr\") for (let k = j; k < i; k++) {\n          this.positions[i].xOffset -= this.positions[k].xAdvance;\n          this.positions[i].yOffset -= this.positions[k].yAdvance;\n        } else for (let k1 = j + 1; k1 < i + 1; k1++) {\n          this.positions[i].xOffset += this.positions[k1].xAdvance;\n          this.positions[i].yOffset += this.positions[k1].yAdvance;\n        }\n      }\n    }\n  }\n\n}\n\nclass $a62492810de27e3d$export$2e2bcd8739ae039 {\n  setup(glyphRun) {\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(glyph => new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, glyph.id, [...glyph.codePoints])); // Select a script based on what is available in GSUB/GPOS.\n\n    let script = null;\n    if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction); // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n\n    this.shaper = $102b6fe50f1d50b4$export$7877a478dd30fd3d(script);\n    this.plan = new (0, $94d7a73bd2edfc9a$export$2e2bcd8739ae039)(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features); // Assign chosen features to output glyph run\n\n    for (let key in this.plan.allFeatures) glyphRun.features[key] = true;\n  }\n\n  substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos); // Map glyph infos back to normal Glyph objects\n\n      glyphRun.glyphs = this.glyphInfos.map(glyphInfo => this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n    }\n  }\n\n  position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n    if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions); // Reverse the glyphs and positions if the script is right-to-left\n\n    if (glyphRun.direction === \"rtl\") {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  }\n\n  zeroMarkAdvances(positions) {\n    for (let i = 0; i < this.glyphInfos.length; i++) if (this.glyphInfos[i].isMark) {\n      positions[i].xAdvance = 0;\n      positions[i].yAdvance = 0;\n    }\n  }\n\n  cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  }\n\n  constructor(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n    if (font.GSUB) this.GSUBProcessor = new (0, $0a876c45f1f7c41c$export$2e2bcd8739ae039)(font, font.GSUB);\n    if (font.GPOS) this.GPOSProcessor = new (0, $c96c93587d49c14d$export$2e2bcd8739ae039)(font, font.GPOS);\n  }\n\n}\n\nclass $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039 {\n  layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === \"string\") {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    } // Map string to glyphs if needed\n\n\n    if (typeof string === \"string\") {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) script = $130d1a642ebcd2b7$export$e5cb25e204fb8450(string);\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        let codePoints = [];\n\n        for (let glyph of string) codePoints.push(...glyph.codePoints);\n\n        script = $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    let glyphRun = new (0, $be07b3e97a42687a$export$2e2bcd8739ae039)(glyphs, features, script, language, direction); // Return early if there are no glyphs\n\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    } // Setup the advanced layout engine\n\n\n    if (this.engine && this.engine.setup) this.engine.setup(glyphRun); // Substitute and position the glyphs\n\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions); // Let the layout engine clean up any state it might have\n\n    if (this.engine && this.engine.cleanup) this.engine.cleanup();\n    return glyphRun;\n  }\n\n  substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n  }\n\n  position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(glyph => new (0, $1ac75d9a55b67f01$export$2e2bcd8739ae039)(glyph.advanceWidth));\n    let positioned = null; // Call the advanced layout engine. Returns the features applied.\n\n    if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun); // if there is no GPOS table, use unicode properties to position marks.\n\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new (0, $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039)(this.font);\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    } // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n\n\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) this.kernProcessor = new (0, $0bba3a9db57637f3$export$2e2bcd8739ae039)(this.font);\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  }\n\n  hideDefaultIgnorables(glyphs, positions) {\n    let space = this.font.glyphForCodePoint(0x20);\n\n    for (let i = 0; i < glyphs.length; i++) if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n      glyphs[i] = space;\n      positions[i].xAdvance = 0;\n      positions[i].yAdvance = 0;\n    }\n  }\n\n  isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    let plane = ch >> 16;\n    if (plane === 0) // BMP\n      switch (ch >> 8) {\n        case 0x00:\n          return ch === 0x00AD;\n\n        case 0x03:\n          return ch === 0x034F;\n\n        case 0x06:\n          return ch === 0x061C;\n\n        case 0x17:\n          return 0x17B4 <= ch && ch <= 0x17B5;\n\n        case 0x18:\n          return 0x180B <= ch && ch <= 0x180E;\n\n        case 0x20:\n          return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n\n        case 0xFE:\n          return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n\n        case 0xFF:\n          return 0xFFF0 <= ch && ch <= 0xFFF8;\n\n        default:\n          return false;\n      } else // Other planes\n      switch (plane) {\n        case 0x01:\n          return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n\n        case 0x0E:\n          return 0xE0000 <= ch && ch <= 0xE0FFF;\n\n        default:\n          return false;\n      }\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n    if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));\n    if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n    return features;\n  }\n\n  stringsForGlyph(gid) {\n    let result = new Set();\n\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n\n    for (let codePoint of codePoints) result.add(String.fromCodePoint(codePoint));\n\n    if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid)) result.add(string);\n    return Array.from(result);\n  }\n\n  constructor(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null; // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n\n    if (this.font.morx) this.engine = new (0, $ba6dd74203be8728$export$2e2bcd8739ae039)(this.font);else if (this.font.GSUB || this.font.GPOS) this.engine = new (0, $a62492810de27e3d$export$2e2bcd8739ae039)(this.font);\n  }\n\n}\n\nconst $f43aec954cdfdf21$var$SVG_COMMANDS = {\n  moveTo: \"M\",\n  lineTo: \"L\",\n  quadraticCurveTo: \"Q\",\n  bezierCurveTo: \"C\",\n  closePath: \"Z\"\n};\n\nclass $f43aec954cdfdf21$export$2e2bcd8739ae039 {\n  /**\n  * Compiles the path to a JavaScript function that can be applied with\n  * a graphics context in order to render the path.\n  * @return {string}\n  */\n  toFunction() {\n    return ctx => {\n      this.commands.forEach(c => {\n        return ctx[c.command].apply(ctx, c.args);\n      });\n    };\n  }\n  /**\n  * Converts the path to an SVG path data string\n  * @return {string}\n  */\n\n\n  toSVG() {\n    let cmds = this.commands.map(c => {\n      let args = c.args.map(arg => Math.round(arg * 100) / 100);\n      return `${$f43aec954cdfdf21$var$SVG_COMMANDS[c.command]}${args.join(\" \")}`;\n    });\n    return cmds.join(\"\");\n  }\n  /**\n  * Gets the \"control box\" of a path.\n  * This is like the bounding box, but it includes all points including\n  * control points of bezier segments and is much faster to compute than\n  * the real bounding box.\n  * @type {BBox}\n  */\n\n\n  get cbox() {\n    if (!this._cbox) {\n      let cbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n\n      for (let command1 of this.commands) for (let i = 0; i < command1.args.length; i += 2) cbox.addPoint(command1.args[i], command1.args[i + 1]);\n\n      this._cbox = Object.freeze(cbox);\n    }\n\n    return this._cbox;\n  }\n  /**\n  * Gets the exact bounding box of the path by evaluating curve segments.\n  * Slower to compute than the control box, but more accurate.\n  * @type {BBox}\n  */\n\n\n  get bbox() {\n    if (this._bbox) return this._bbox;\n    let bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n    let cx = 0,\n        cy = 0;\n\n    let f = t => Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n\n    for (let c of this.commands) switch (c.command) {\n      case \"moveTo\":\n      case \"lineTo\":\n        let [x, y] = c.args;\n        bbox.addPoint(x, y);\n        cx = x;\n        cy = y;\n        break;\n\n      case \"quadraticCurveTo\":\n      case \"bezierCurveTo\":\n        if (c.command === \"quadraticCurveTo\") {\n          // http://fontforge.org/bezier.html\n          var [qp1x, qp1y, p3x, p3y] = c.args;\n          var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n\n          var cp1y = cy + 2 / 3 * (qp1y - cy);\n          var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n\n          var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n        } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args; // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\n\n        bbox.addPoint(p3x, p3y);\n        var p0 = [cx, cy];\n        var p1 = [cp1x, cp1y];\n        var p2 = [cp2x, cp2y];\n        var p3 = [p3x, p3y];\n\n        for (var i = 0; i <= 1; i++) {\n          let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n          let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n          c = 3 * p1[i] - 3 * p0[i];\n\n          if (a === 0) {\n            if (b === 0) continue;\n            let t = -c / b;\n\n            if (0 < t && t < 1) {\n              if (i === 0) bbox.addPoint(f(t), bbox.maxY);else if (i === 1) bbox.addPoint(bbox.maxX, f(t));\n            }\n\n            continue;\n          }\n\n          let b2ac = Math.pow(b, 2) - 4 * c * a;\n          if (b2ac < 0) continue;\n          let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n          if (0 < t1 && t1 < 1) {\n            if (i === 0) bbox.addPoint(f(t1), bbox.maxY);else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n          }\n\n          let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n          if (0 < t2 && t2 < 1) {\n            if (i === 0) bbox.addPoint(f(t2), bbox.maxY);else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n          }\n        }\n\n        cx = p3x;\n        cy = p3y;\n        break;\n    }\n\n    return this._bbox = Object.freeze(bbox);\n  }\n  /**\n  * Applies a mapping function to each point in the path.\n  * @param {function} fn\n  * @return {Path}\n  */\n\n\n  mapPoints(fn) {\n    let path = new $f43aec954cdfdf21$export$2e2bcd8739ae039();\n\n    for (let c of this.commands) {\n      let args = [];\n\n      for (let i = 0; i < c.args.length; i += 2) {\n        let [x, y] = fn(c.args[i], c.args[i + 1]);\n        args.push(x, y);\n      }\n\n      path[c.command](...args);\n    }\n\n    return path;\n  }\n  /**\n  * Transforms the path by the given matrix.\n  */\n\n\n  transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints((x, y) => {\n      const tx = m0 * x + m2 * y + m4;\n      const ty = m1 * x + m3 * y + m5;\n      return [tx, ty];\n    });\n  }\n  /**\n  * Translates the path by the given offset.\n  */\n\n\n  translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n  /**\n  * Rotates the path by the given angle (in radians).\n  */\n\n\n  rotate(angle) {\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n  /**\n  * Scales the path.\n  */\n\n\n  scale(scaleX) {\n    let scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  }\n\n  constructor() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n}\n\nfor (let command of [\"moveTo\", \"lineTo\", \"quadraticCurveTo\", \"bezierCurveTo\", \"closePath\"]) $f43aec954cdfdf21$export$2e2bcd8739ae039.prototype[command] = function () {\n  this._bbox = this._cbox = null;\n\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  this.commands.push({\n    command: command,\n    args: args\n  });\n  return this;\n};\n\nvar $7713b9b7b438dff8$export$2e2bcd8739ae039 = [\".notdef\", \".null\", \"nonmarkingreturn\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"Adieresis\", \"Aring\", \"Ccedilla\", \"Eacute\", \"Ntilde\", \"Odieresis\", \"Udieresis\", \"aacute\", \"agrave\", \"acircumflex\", \"adieresis\", \"atilde\", \"aring\", \"ccedilla\", \"eacute\", \"egrave\", \"ecircumflex\", \"edieresis\", \"iacute\", \"igrave\", \"icircumflex\", \"idieresis\", \"ntilde\", \"oacute\", \"ograve\", \"ocircumflex\", \"odieresis\", \"otilde\", \"uacute\", \"ugrave\", \"ucircumflex\", \"udieresis\", \"dagger\", \"degree\", \"cent\", \"sterling\", \"section\", \"bullet\", \"paragraph\", \"germandbls\", \"registered\", \"copyright\", \"trademark\", \"acute\", \"dieresis\", \"notequal\", \"AE\", \"Oslash\", \"infinity\", \"plusminus\", \"lessequal\", \"greaterequal\", \"yen\", \"mu\", \"partialdiff\", \"summation\", \"product\", \"pi\", \"integral\", \"ordfeminine\", \"ordmasculine\", \"Omega\", \"ae\", \"oslash\", \"questiondown\", \"exclamdown\", \"logicalnot\", \"radical\", \"florin\", \"approxequal\", \"Delta\", \"guillemotleft\", \"guillemotright\", \"ellipsis\", \"nonbreakingspace\", \"Agrave\", \"Atilde\", \"Otilde\", \"OE\", \"oe\", \"endash\", \"emdash\", \"quotedblleft\", \"quotedblright\", \"quoteleft\", \"quoteright\", \"divide\", \"lozenge\", \"ydieresis\", \"Ydieresis\", \"fraction\", \"currency\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"daggerdbl\", \"periodcentered\", \"quotesinglbase\", \"quotedblbase\", \"perthousand\", \"Acircumflex\", \"Ecircumflex\", \"Aacute\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Oacute\", \"Ocircumflex\", \"apple\", \"Ograve\", \"Uacute\", \"Ucircumflex\", \"Ugrave\", \"dotlessi\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"Lslash\", \"lslash\", \"Scaron\", \"scaron\", \"Zcaron\", \"zcaron\", \"brokenbar\", \"Eth\", \"eth\", \"Yacute\", \"yacute\", \"Thorn\", \"thorn\", \"minus\", \"multiply\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"onehalf\", \"onequarter\", \"threequarters\", \"franc\", \"Gbreve\", \"gbreve\", \"Idotaccent\", \"Scedilla\", \"scedilla\", \"Cacute\", \"cacute\", \"Ccaron\", \"ccaron\", \"dcroat\"];\n\nclass $f92906be28e61769$export$2e2bcd8739ae039 {\n  _getPath() {\n    return new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n  }\n\n  _getCBox() {\n    return this.path.cbox;\n  }\n\n  _getBBox() {\n    return this.path.bbox;\n  }\n\n  _getTableMetrics(table) {\n    if (this.id < table.metrics.length) return table.metrics.get(this.id);\n    let metric = table.metrics.get(table.metrics.length - 1);\n    let res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n    return res;\n  }\n\n  _getMetrics(cbox) {\n    if (this._metrics) return this._metrics;\n\n    let {\n      advance: advanceWidth,\n      bearing: leftBearing\n    } = this._getTableMetrics(this._font.hmtx); // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n\n\n    if (this._font.vmtx) var {\n      advance: advanceHeight,\n      bearing: topBearing\n    } = this._getTableMetrics(this._font.vmtx);else {\n      let os2;\n      if (typeof cbox === \"undefined\" || cbox === null) ({\n        cbox: cbox\n      } = this);\n\n      if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n      } else {\n        let {\n          hhea: hhea\n        } = this._font;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n    if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    return this._metrics = {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    };\n  }\n  /**\n  * The glyph’s control box.\n  * This is often the same as the bounding box, but is faster to compute.\n  * Because of the way bezier curves are defined, some of the control points\n  * can be outside of the bounding box. Where `bbox` takes this into account,\n  * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n  * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n  * for a more detailed description.\n  *\n  * @type {BBox}\n  */\n\n\n  get cbox() {\n    return this._getCBox();\n  }\n  /**\n  * The glyph’s bounding box, i.e. the rectangle that encloses the\n  * glyph outline as tightly as possible.\n  * @type {BBox}\n  */\n\n\n  get bbox() {\n    return this._getBBox();\n  }\n  /**\n  * A vector Path object representing the glyph outline.\n  * @type {Path}\n  */\n\n\n  get path() {\n    // Cache the path so we only decode it once\n    // Decoding is actually performed by subclasses\n    return this._getPath();\n  }\n  /**\n  * Returns a path scaled to the given font size.\n  * @param {number} size\n  * @return {Path}\n  */\n\n\n  getScaledPath(size) {\n    let scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n  /**\n  * The glyph's advance width.\n  * @type {number}\n  */\n\n\n  get advanceWidth() {\n    return this._getMetrics().advanceWidth;\n  }\n  /**\n  * The glyph's advance height.\n  * @type {number}\n  */\n\n\n  get advanceHeight() {\n    return this._getMetrics().advanceHeight;\n  }\n\n  get ligatureCaretPositions() {}\n\n  _getName() {\n    let {\n      post: post\n    } = this._font;\n    if (!post) return null;\n\n    switch (post.version) {\n      case 1:\n        return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id];\n\n      case 2:\n        let id = post.glyphNameIndex[this.id];\n        if (id < (0, $7713b9b7b438dff8$export$2e2bcd8739ae039).length) return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[id];\n        return post.names[id - (0, $7713b9b7b438dff8$export$2e2bcd8739ae039).length];\n\n      case 2.5:\n        return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n  /**\n  * The glyph's name\n  * @type {string}\n  */\n\n\n  get name() {\n    return this._getName();\n  }\n  /**\n  * Renders the glyph to the given graphics context, at the specified font size.\n  * @param {CanvasRenderingContext2d} ctx\n  * @param {number} size\n  */\n\n\n  render(ctx, size) {\n    ctx.save();\n    let scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n    let fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n    ctx.restore();\n  }\n\n  constructor(id, codePoints, font) {\n    /**\n    * The glyph id in the font\n    * @type {number}\n    */\n    this.id = id;\n    /**\n    * An array of unicode code points that are represented by this glyph.\n    * There can be multiple code points in the case of ligatures and other glyphs\n    * that represent multiple visual characters.\n    * @type {number[]}\n    */\n\n    this.codePoints = codePoints;\n    this._font = font; // TODO: get this info from GDEF if available\n\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $6uUbQ$isMark));\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"path\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"name\", null); // The header for both simple and composite glyphs\n\nlet $69aac16029968692$var$GlyfHeader = new $6uUbQ$Struct({\n  numberOfContours: $6uUbQ$int16,\n  xMin: $6uUbQ$int16,\n  yMin: $6uUbQ$int16,\n  xMax: $6uUbQ$int16,\n  yMax: $6uUbQ$int16\n}); // Flags for simple glyphs\n\nconst $69aac16029968692$var$ON_CURVE = 1;\nconst $69aac16029968692$var$X_SHORT_VECTOR = 2;\nconst $69aac16029968692$var$Y_SHORT_VECTOR = 4;\nconst $69aac16029968692$var$REPEAT = 8;\nconst $69aac16029968692$var$SAME_X = 16;\nconst $69aac16029968692$var$SAME_Y = 32; // Flags for composite glyphs\n\nconst $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS = 1;\nconst $69aac16029968692$var$ARGS_ARE_XY_VALUES = 2;\nconst $69aac16029968692$var$ROUND_XY_TO_GRID = 4;\nconst $69aac16029968692$var$WE_HAVE_A_SCALE = 8;\nconst $69aac16029968692$var$MORE_COMPONENTS = 32;\nconst $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nconst $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO = 128;\nconst $69aac16029968692$var$WE_HAVE_INSTRUCTIONS = 256;\nconst $69aac16029968692$var$USE_MY_METRICS = 512;\nconst $69aac16029968692$var$OVERLAP_COMPOUND = 1024;\nconst $69aac16029968692$var$SCALED_COMPONENT_OFFSET = 2048;\nconst $69aac16029968692$var$UNSCALED_COMPONENT_OFFSET = 4096;\n\nclass $69aac16029968692$export$baf26146a414f24a {\n  copy() {\n    return new $69aac16029968692$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n  }\n\n  constructor(onCurve, endContour) {\n    let x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n} // Represents a component in a composite glyph\n\n\nclass $69aac16029968692$var$Component {\n  constructor(glyphID, dx, dy) {\n    this.glyphID = glyphID;\n    this.dx = dx;\n    this.dy = dy;\n    this.pos = 0;\n    this.scaleX = this.scaleY = 1;\n    this.scale01 = this.scale10 = 0;\n  }\n\n}\n\nclass $69aac16029968692$export$2e2bcd8739ae039 extends (0, $f92906be28e61769$export$2e2bcd8739ae039) {\n  // Parses just the glyph header and returns the bounding box\n  _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) return this.path.cbox;\n\n    let stream = this._font._getTableStream(\"glyf\");\n\n    stream.pos += this._font.loca.offsets[this.id];\n    let glyph = $69aac16029968692$var$GlyfHeader.decode(stream);\n    let cbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  } // Parses a single glyph coordinate\n\n\n  _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) val = -val;\n      val += prev;\n    } else if (same) var val = prev;else var val = prev + stream.readInt16BE();\n\n    return val;\n  } // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n\n\n  _decode() {\n    let glyfPos = this._font.loca.offsets[this.id];\n    let nextPos = this._font.loca.offsets[this.id + 1]; // Nothing to do if there is no data for this glyph\n\n    if (glyfPos === nextPos) return null;\n\n    let stream = this._font._getTableStream(\"glyf\");\n\n    stream.pos += glyfPos;\n    let startPos = stream.pos;\n    let glyph = $69aac16029968692$var$GlyfHeader.decode(stream);\n    if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n    return glyph;\n  }\n\n  _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n    let endPtsOfContours = new $6uUbQ$Array($6uUbQ$uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16).decode(stream);\n    let flags = [];\n    let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag); // check for repeat flag\n\n      if (flag & $69aac16029968692$var$REPEAT) {\n        let count = stream.readUInt8();\n\n        for (let j = 0; j < count; j++) flags.push(flag);\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      let point = new $69aac16029968692$export$baf26146a414f24a(!!(flag & $69aac16029968692$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    let px = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $69aac16029968692$var$X_SHORT_VECTOR, flag & $69aac16029968692$var$SAME_X);\n    }\n\n    let py = 0;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $69aac16029968692$var$Y_SHORT_VECTOR, flag & $69aac16029968692$var$SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = glyph.points.slice();\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  }\n\n  _decodeComposite(glyph, stream) {\n    let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // this is a composite glyph\n    glyph.components = [];\n    let haveInstructions = false;\n    let flags = $69aac16029968692$var$MORE_COMPONENTS;\n\n    while (flags & $69aac16029968692$var$MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      let gPos = stream.pos - offset;\n      let glyphID = stream.readUInt16BE();\n      if (!haveInstructions) haveInstructions = (flags & $69aac16029968692$var$WE_HAVE_INSTRUCTIONS) !== 0;\n\n      if (flags & $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new $69aac16029968692$var$Component(glyphID, dx, dy);\n      component.pos = gPos;\n      if (flags & $69aac16029968692$var$WE_HAVE_A_SCALE) // fixed number with 14 bits of fraction\n        component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;else if (flags & $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      } else if (flags & $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n        component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n      }\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = [];\n\n      for (let j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new $69aac16029968692$export$baf26146a414f24a(true, true, component.dx, component.dy));\n      }\n\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (let i = 0; i < points.length; i++) {\n        let point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  }\n\n  _getPhantomPoints(glyph) {\n    let cbox = this._getCBox(true);\n\n    if (this._metrics == null) this._metrics = (0, $f92906be28e61769$export$2e2bcd8739ae039).prototype._getMetrics.call(this, cbox);\n    let {\n      advanceWidth: advanceWidth,\n      advanceHeight: advanceHeight,\n      leftBearing: leftBearing,\n      topBearing: topBearing\n    } = this._metrics;\n    return [new $69aac16029968692$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0), new $69aac16029968692$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0), new $69aac16029968692$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing), new $69aac16029968692$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)];\n  } // Decodes font data, resolves composite glyphs, and returns an array of contours\n\n\n  _getContours() {\n    let glyph = this._decode();\n\n    if (!glyph) return [];\n    let points = [];\n    if (glyph.numberOfContours < 0) // resolve composite glyphs\n      for (let component of glyph.components) {\n        let contours = this._font.getGlyph(component.glyphID)._getContours();\n\n        for (let i = 0; i < contours.length; i++) {\n          let contour = contours[i];\n\n          for (let j = 0; j < contour.length; j++) {\n            let point = contour[j];\n            let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n            let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n            points.push(new $69aac16029968692$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));\n          }\n        }\n      } else points = glyph.points || []; // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    let contours = [];\n    let cur = [];\n\n    for (let k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  }\n\n  _getMetrics() {\n    if (this._metrics) return this._metrics;\n\n    let cbox = this._getCBox(true);\n\n    super._getMetrics(cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    return this._metrics;\n  } // Converts contours to a Path object that can be rendered\n\n\n  _getPath() {\n    let contours = this._getContours();\n\n    let path = new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n\n    for (let i = 0; i < contours.length; i++) {\n      let contour = contours[i];\n      let firstPt = contour[0];\n      let lastPt = contour[contour.length - 1];\n      let start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;else // Start at the middle if both the first and last points are off curve\n          firstPt = new $69aac16029968692$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (let j = start; j < contour.length; j++) {\n        let pt = contour[j];\n        let prevPt = j === 0 ? firstPt : contour[j - 1];\n        if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;else if (!prevPt.onCurve && !pt.onCurve) {\n          let midX = (prevPt.x + pt.x) / 2;\n          let midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n        } else throw new Error(\"Unknown TTF path state\");\n      } // Connect the first and last points\n\n\n      if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      path.closePath();\n    }\n\n    return path;\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTF\");\n  }\n\n}\n\nclass $62cc5109c6101893$export$2e2bcd8739ae039 extends (0, $f92906be28e61769$export$2e2bcd8739ae039) {\n  _getName() {\n    if (this._font.CFF2) return super._getName();\n    return this._font[\"CFF \"].getGlyphName(this.id);\n  }\n\n  bias(s) {\n    if (s.length < 1240) return 107;else if (s.length < 33900) return 1131;else return 32768;\n  }\n\n  _getPath() {\n    let cff = this._font.CFF2 || this._font[\"CFF \"];\n    let {\n      stream: stream\n    } = cff;\n    let str = cff.topDict.CharStrings[this.id];\n    let end = str.offset + str.length;\n    stream.pos = str.offset;\n    let path = new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n    let stack = [];\n    let trans = [];\n    let width = null;\n    let nStems = 0;\n    let x1 = 0,\n        y1 = 0;\n    let usedGsubrs;\n    let usedSubrs;\n    let open = false;\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n    let gsubrs = cff.globalSubrIndex || [];\n    let gsubrsBias = this.bias(gsubrs);\n    let privateDict = cff.privateDictForGlyph(this.id) || {};\n    let subrs = privateDict.Subrs || [];\n    let subrsBias = this.bias(subrs);\n    let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    let vsindex = privateDict.vsindex;\n    let variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) checkWidth();\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) path.closePath();\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    let parse = function () {\n      while (stream.pos < end) {\n        let op = stream.readUInt8();\n\n        if (op < 32) {\n          let index, subr, phase;\n\n          switch (op) {\n            case 1:\n            case 3:\n            case 18:\n            case 23:\n              parseStems();\n              break;\n\n            case 4:\n              if (stack.length > 1) checkWidth();\n              y1 += stack.shift();\n              moveTo(x1, y1);\n              break;\n\n            case 5:\n              while (stack.length >= 2) {\n                x1 += stack.shift();\n                y1 += stack.shift();\n                path.lineTo(x1, y1);\n              }\n\n              break;\n\n            case 6:\n            case 7:\n              phase = op === 6;\n\n              while (stack.length >= 1) {\n                if (phase) x1 += stack.shift();else y1 += stack.shift();\n                path.lineTo(x1, y1);\n                phase = !phase;\n              }\n\n              break;\n\n            case 8:\n              while (stack.length > 0) {\n                var c1x = x1 + stack.shift();\n                var c1y = y1 + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x1 = c2x + stack.shift();\n                y1 = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n              }\n\n              break;\n\n            case 10:\n              index = stack.pop() + subrsBias;\n              subr = subrs[index];\n\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 11:\n              if (cff.version >= 2) break;\n              return;\n\n            case 14:\n              if (cff.version >= 2) break;\n              if (stack.length > 0) checkWidth();\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n\n              break;\n\n            case 15:\n              if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n              vsindex = stack.pop();\n              break;\n\n            case 16:\n              {\n                if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                let numBlends = stack.pop();\n                let numOperands = numBlends * blendVector.length;\n                let delta = stack.length - numOperands;\n                let base = delta - numBlends;\n\n                for (let i = 0; i < numBlends; i++) {\n                  let sum = stack[base + i];\n\n                  for (let j = 0; j < blendVector.length; j++) sum += blendVector[j] * stack[delta++];\n\n                  stack[base + i] = sum;\n                }\n\n                while (numOperands--) stack.pop();\n\n                break;\n              }\n\n            case 19:\n            case 20:\n              parseStems();\n              stream.pos += nStems + 7 >> 3;\n              break;\n\n            case 21:\n              if (stack.length > 2) checkWidth();\n              x1 += stack.shift();\n              y1 += stack.shift();\n              moveTo(x1, y1);\n              break;\n\n            case 22:\n              if (stack.length > 1) checkWidth();\n              x1 += stack.shift();\n              moveTo(x1, y1);\n              break;\n\n            case 24:\n              while (stack.length >= 8) {\n                var c1x = x1 + stack.shift();\n                var c1y = y1 + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x1 = c2x + stack.shift();\n                y1 = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n              }\n\n              x1 += stack.shift();\n              y1 += stack.shift();\n              path.lineTo(x1, y1);\n              break;\n\n            case 25:\n              while (stack.length >= 8) {\n                x1 += stack.shift();\n                y1 += stack.shift();\n                path.lineTo(x1, y1);\n              }\n\n              var c1x = x1 + stack.shift();\n              var c1y = y1 + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x1 = c2x + stack.shift();\n              y1 = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n              break;\n\n            case 26:\n              if (stack.length % 2) x1 += stack.shift();\n\n              while (stack.length >= 4) {\n                c1x = x1;\n                c1y = y1 + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x1 = c2x;\n                y1 = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n              }\n\n              break;\n\n            case 27:\n              if (stack.length % 2) y1 += stack.shift();\n\n              while (stack.length >= 4) {\n                c1x = x1 + stack.shift();\n                c1y = y1;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x1 = c2x + stack.shift();\n                y1 = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n              }\n\n              break;\n\n            case 28:\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29:\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n\n              break;\n\n            case 30:\n            case 31:\n              phase = op === 31;\n\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x1 + stack.shift();\n                  c1y = y1;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y1 = c2y + stack.shift();\n                  x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x1;\n                  c1y = y1 + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x1 = c2x + stack.shift();\n                  y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                phase = !phase;\n              }\n\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n\n              switch (op) {\n                case 3:\n                  let a = stack.pop();\n                  let b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5:\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9:\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14:\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18:\n                  stack.pop();\n                  break;\n\n                case 20:\n                  let val = stack.pop();\n                  let idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21:\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22:\n                  let s1 = stack.pop();\n                  let s2 = stack.pop();\n                  let v1 = stack.pop();\n                  let v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23:\n                  stack.push(Math.random());\n                  break;\n\n                case 24:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26:\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27:\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28:\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29:\n                  idx = stack.pop();\n                  if (idx < 0) idx = 0;else if (idx > stack.length - 1) idx = stack.length - 1;\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30:\n                  let n = stack.pop();\n                  let j = stack.pop();\n                  if (j >= 0) while (j > 0) {\n                    var t = stack[n - 1];\n\n                    for (let i = n - 2; i >= 0; i--) stack[i + 1] = stack[i];\n\n                    stack[0] = t;\n                    j--;\n                  } else while (j < 0) {\n                    var t = stack[0];\n\n                    for (let i = 0; i <= n; i++) stack[i] = stack[i + 1];\n\n                    stack[n - 1] = t;\n                    j++;\n                  }\n                  break;\n\n                case 34:\n                  c1x = x1 + stack.shift();\n                  c1y = y1;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  let c3x = c2x + stack.shift();\n                  let c3y = c2y;\n                  let c4x = c3x + stack.shift();\n                  let c4y = c3y;\n                  let c5x = c4x + stack.shift();\n                  let c5y = c4y;\n                  let c6x = c5x + stack.shift();\n                  let c6y = c5y;\n                  x1 = c6x;\n                  y1 = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35:\n                  let pts = [];\n\n                  for (let i = 0; i <= 5; i++) {\n                    x1 += stack.shift();\n                    y1 += stack.shift();\n                    pts.push(x1, y1);\n                  }\n\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  stack.shift(); // fd\n\n                  break;\n\n                case 36:\n                  c1x = x1 + stack.shift();\n                  c1y = y1 + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x1 = c6x;\n                  y1 = c6y;\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37:\n                  let startx = x1;\n                  let starty = y1;\n                  pts = [];\n\n                  for (let i1 = 0; i1 <= 4; i1++) {\n                    x1 += stack.shift();\n                    y1 += stack.shift();\n                    pts.push(x1, y1);\n                  }\n\n                  if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                    x1 += stack.shift();\n                    y1 = starty;\n                  } else {\n                    x1 = startx;\n                    y1 += stack.shift();\n                  }\n\n                  pts.push(x1, y1);\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(`Unknown op: 12 ${op}`);\n              }\n\n              break;\n\n            default:\n              throw new Error(`Unknown op: ${op}`);\n          }\n        } else if (op < 247) stack.push(op - 139);else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else stack.push(stream.readInt32BE() / 65536);\n      }\n    };\n\n    parse();\n    if (open) path.closePath();\n    return path;\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"CFF\");\n  }\n\n}\n\nlet $25d8f049c222084c$var$SBIXImage = new $6uUbQ$Struct({\n  originX: $6uUbQ$uint16,\n  originY: $6uUbQ$uint16,\n  type: new $6uUbQ$String(4),\n  data: new $6uUbQ$Buffer(t => t.parent.buflen - t._currentOffset)\n});\n\nclass $25d8f049c222084c$export$2e2bcd8739ae039 extends (0, $69aac16029968692$export$2e2bcd8739ae039) {\n  /**\n  * Returns an object representing a glyph image at the given point size.\n  * The object has a data property with a Buffer containing the actual image data,\n  * along with the image type, and origin.\n  *\n  * @param {number} size\n  * @return {object}\n  */\n  getImageForSize(size) {\n    for (let i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) break;\n    }\n\n    let offsets = table.imageOffsets;\n    let start = offsets[this.id];\n    let end = offsets[this.id + 1];\n    if (start === end) return null;\n    this._font.stream.pos = start;\n    return $25d8f049c222084c$var$SBIXImage.decode(this._font.stream, {\n      buflen: end - start\n    });\n  }\n\n  render(ctx, size) {\n    let img = this.getImageForSize(size);\n\n    if (img != null) {\n      let scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {\n        height: size,\n        x: img.originX,\n        y: (this.bbox.minY - img.originY) * scale\n      });\n    }\n\n    if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"SBIX\");\n  }\n\n}\n\nclass $0d411f0165859681$var$COLRLayer {\n  constructor(glyph, color) {\n    this.glyph = glyph;\n    this.color = color;\n  }\n\n}\n\nclass $0d411f0165859681$export$2e2bcd8739ae039 extends (0, $f92906be28e61769$export$2e2bcd8739ae039) {\n  _getBBox() {\n    let bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)();\n\n    for (let i = 0; i < this.layers.length; i++) {\n      let layer = this.layers[i];\n      let b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n  /**\n  * Returns an array of objects containing the glyph and color for\n  * each layer in the composite color glyph.\n  * @type {object[]}\n  */\n\n\n  get layers() {\n    let cpal = this._font.CPAL;\n    let colr = this._font.COLR;\n    let low = 0;\n    let high = colr.baseGlyphRecord.length - 1;\n\n    while (low <= high) {\n      let mid = low + high >> 1;\n      var rec = colr.baseGlyphRecord[mid];\n      if (this.id < rec.gid) high = mid - 1;else if (this.id > rec.gid) low = mid + 1;else {\n        var baseLayer = rec;\n        break;\n      }\n    } // if base glyph not found in COLR table,\n    // default to normal glyph from glyf or CFF\n\n\n    if (baseLayer == null) {\n      var g = this._font._getBaseGlyph(this.id);\n\n      var color = {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 255\n      };\n      return [new $0d411f0165859681$var$COLRLayer(g, color)];\n    } // otherwise, return an array of all the layers\n\n\n    let layers = [];\n\n    for (let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n      var rec = colr.layerRecords[i];\n      var color = cpal.colorRecords[rec.paletteIndex];\n\n      var g = this._font._getBaseGlyph(rec.gid);\n\n      layers.push(new $0d411f0165859681$var$COLRLayer(g, color));\n    }\n\n    return layers;\n  }\n\n  render(ctx, size) {\n    for (let {\n      glyph: glyph,\n      color: color\n    } of this.layers) {\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"COLR\");\n  }\n\n}\n\nconst $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst $0bb840cac04e911b$var$TUPLE_COUNT_MASK = 0x0fff;\nconst $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD = 0x8000;\nconst $0bb840cac04e911b$var$INTERMEDIATE_TUPLE = 0x4000;\nconst $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS = 0x2000;\nconst $0bb840cac04e911b$var$TUPLE_INDEX_MASK = 0x0fff;\nconst $0bb840cac04e911b$var$POINTS_ARE_WORDS = 0x80;\nconst $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK = 0x7f;\nconst $0bb840cac04e911b$var$DELTAS_ARE_ZERO = 0x80;\nconst $0bb840cac04e911b$var$DELTAS_ARE_WORDS = 0x40;\nconst $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK = 0x3f;\n\nclass $0bb840cac04e911b$export$2e2bcd8739ae039 {\n  normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    let normalized = [];\n\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      let axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n    } // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n\n\n    if (this.font.avar) for (var i = 0; i < this.font.avar.segment.length; i++) {\n      let segment = this.font.avar.segment[i];\n\n      for (let j = 0; j < segment.correspondence.length; j++) {\n        let pair = segment.correspondence[j];\n\n        if (j >= 1 && normalized[i] < pair.fromCoord) {\n          let prev = segment.correspondence[j - 1];\n          normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n          break;\n        }\n      }\n    }\n    return normalized;\n  }\n\n  transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) return;\n    let {\n      gvar: gvar\n    } = this.font;\n    if (gid >= gvar.glyphCount) return;\n    let offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) return; // Read the gvar data for this glyph\n\n    let {\n      stream: stream\n    } = this.font;\n    stream.pos = offset;\n    if (stream.pos >= stream.length) return;\n    let tupleCount = stream.readUInt16BE();\n    let offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    let origPoints = glyphPoints.map(pt => pt.copy());\n    tupleCount &= $0bb840cac04e911b$var$TUPLE_COUNT_MASK;\n\n    for (let i = 0; i < tupleCount; i++) {\n      let tupleDataSize = stream.readUInt16BE();\n      let tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n\n        for (let a = 0; a < gvar.axisCount; a++) tupleCoords.push(stream.readInt16BE() / 16384);\n      } else {\n        if ((tupleIndex & $0bb840cac04e911b$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n        var tupleCoords = gvar.globalCoords[tupleIndex & $0bb840cac04e911b$var$TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & $0bb840cac04e911b$var$INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n\n        for (let a = 0; a < gvar.axisCount; a++) startCoords.push(stream.readInt16BE() / 16384);\n\n        var endCoords = [];\n\n        for (let a1 = 0; a1 < gvar.axisCount; a1++) endCoords.push(stream.readInt16BE() / 16384);\n      } // Get the factor at which to apply this tuple\n\n\n      let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      if (tupleIndex & $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();else var points = sharedPoints; // points.length = 0 means there are deltas for all points\n\n      let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      let xDeltas = this.decodeDeltas(nPoints);\n      let yDeltas = this.decodeDeltas(nPoints);\n      if (points.length === 0) for (let i = 0; i < glyphPoints.length; i++) {\n        var point = glyphPoints[i];\n        point.x += Math.round(xDeltas[i] * factor);\n        point.y += Math.round(yDeltas[i] * factor);\n      } else {\n        let outPoints = origPoints.map(pt => pt.copy());\n        let hasDelta = glyphPoints.map(() => false);\n\n        for (let i = 0; i < points.length; i++) {\n          let idx = points[i];\n\n          if (idx < glyphPoints.length) {\n            let point = outPoints[idx];\n            hasDelta[idx] = true;\n            point.x += Math.round(xDeltas[i] * factor);\n            point.y += Math.round(yDeltas[i] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (let i1 = 0; i1 < glyphPoints.length; i1++) {\n          let deltaX = outPoints[i1].x - origPoints[i1].x;\n          let deltaY = outPoints[i1].y - origPoints[i1].y;\n          glyphPoints[i1].x += deltaX;\n          glyphPoints[i1].y += deltaY;\n        }\n      }\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  }\n\n  decodePoints() {\n    let stream = this.font.stream;\n    let count = stream.readUInt8();\n    if (count & $0bb840cac04e911b$var$POINTS_ARE_WORDS) count = (count & $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    let points = new Uint16Array(count);\n    let i = 0;\n    let point = 0;\n\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK) + 1;\n      let fn = run & $0bb840cac04e911b$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (let j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  }\n\n  decodeDeltas(count) {\n    let stream = this.font.stream;\n    let i = 0;\n    let deltas = new Int16Array(count);\n\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK) + 1;\n      if (run & $0bb840cac04e911b$var$DELTAS_ARE_ZERO) i += runCount;else {\n        let fn = run & $0bb840cac04e911b$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n\n        for (let j = 0; j < runCount && i < count; j++) deltas[i++] = fn.call(stream);\n      }\n    }\n\n    return deltas;\n  }\n\n  tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    let normalized = this.normalizedCoords;\n    let {\n      gvar: gvar\n    } = this.font;\n    let factor = 1;\n\n    for (let i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) continue;\n      if (normalized[i] === 0) return 0;\n\n      if ((tupleIndex & $0bb840cac04e911b$var$INTERMEDIATE_TUPLE) === 0) {\n        if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n      }\n    }\n\n    return factor;\n  } // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n\n\n  interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) return;\n    let point = 0;\n\n    while (point < points.length) {\n      let firstPoint = point; // find the end point of the contour\n\n      let endPoint = point;\n      let pt = points[endPoint];\n\n      while (!pt.endContour) pt = points[++endPoint]; // find the first point that has a delta\n\n\n      while (point <= endPoint && !hasDelta[point]) point++;\n\n      if (point > endPoint) continue;\n      let firstDelta = point;\n      let curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      } // shift contour if we only have a single delta\n\n\n      if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n        if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n      }\n      point = endPoint + 1;\n    }\n  }\n\n  deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) return;\n    let iterable = [\"x\", \"y\"];\n\n    for (let i = 0; i < iterable.length; i++) {\n      let k = iterable[i];\n\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      let in1 = inPoints[ref1][k];\n      let in2 = inPoints[ref2][k];\n      let out1 = outPoints[ref1][k];\n      let out2 = outPoints[ref2][k]; // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n\n      if (in1 !== in2 || out1 === out2) {\n        let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (let p = p1; p <= p2; p++) {\n          let out = inPoints[p][k];\n          if (out <= in1) out += out1 - in1;else if (out >= in2) out += out2 - in2;else out = out1 + (out - in1) * scale;\n          outPoints[p][k] = out;\n        }\n      }\n    }\n  }\n\n  deltaShift(p1, p2, ref, inPoints, outPoints) {\n    let deltaX = outPoints[ref].x - inPoints[ref].x;\n    let deltaY = outPoints[ref].y - inPoints[ref].y;\n    if (deltaX === 0 && deltaY === 0) return;\n\n    for (let p = p1; p <= p2; p++) if (p !== ref) {\n      outPoints[p].x += deltaX;\n      outPoints[p].y += deltaY;\n    }\n  }\n\n  getAdvanceAdjustment(gid, table) {\n    let outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      let idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n      let entryFormat = table.advanceWidthMapping.entryFormat;\n      ({\n        outerIndex: outerIndex,\n        innerIndex: innerIndex\n      } = table.advanceWidthMapping.mapData[idx]);\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  } // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n\n\n  getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) return 0;\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) return 0;\n    let deltaSet = varData.deltaSets[innerIndex];\n    let blendVector = this.getBlendVector(itemStore, outerIndex);\n    let netAdjustment = 0;\n\n    for (let master = 0; master < varData.regionIndexCount; master++) netAdjustment += deltaSet.deltas[master] * blendVector[master];\n\n    return netAdjustment;\n  }\n\n  getBlendVector(itemStore, outerIndex) {\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n    let normalizedCoords = this.normalizedCoords;\n    let blendVector = []; // outer loop steps through master designs to be blended\n\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      let scalar = 1;\n      let regionIndex = varData.regionIndexes[master];\n      let axes = itemStore.variationRegionList.variationRegions[regionIndex]; // inner loop steps through axes in this region\n\n      for (let j = 0; j < axes.length; j++) {\n        let axis = axes[j];\n        let axisScalar; // compute the scalar contribution of this axis\n        // ignore invalid ranges\n\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;else if (axis.peakCoord === 0) axisScalar = 1;else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;else {\n          if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n        } // take product of all the axis scalars\n\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  }\n\n  constructor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map();\n  }\n\n}\n\nconst $5cc7476da92df375$var$resolved = Promise.resolve();\n\nclass $5cc7476da92df375$export$2e2bcd8739ae039 {\n  includeGlyph(glyph) {\n    if (typeof glyph === \"object\") glyph = glyph.id;\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  }\n\n  constructor(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {}; // always include the missing glyph\n\n    this.includeGlyph(0);\n  }\n\n} // Flags for simple glyphs\n\n\nconst $807e58506be70005$var$ON_CURVE = 1;\nconst $807e58506be70005$var$X_SHORT_VECTOR = 2;\nconst $807e58506be70005$var$Y_SHORT_VECTOR = 4;\nconst $807e58506be70005$var$REPEAT = 8;\nconst $807e58506be70005$var$SAME_X = 16;\nconst $807e58506be70005$var$SAME_Y = 32;\n\nclass $807e58506be70005$var$Point {\n  static size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  }\n\n  static encode(stream, value) {\n    if (value >= 0 && value <= 255) stream.writeUInt8(value);else stream.writeInt16BE(value);\n  }\n\n}\n\nlet $807e58506be70005$var$Glyf = new $6uUbQ$Struct({\n  numberOfContours: $6uUbQ$int16,\n  xMin: $6uUbQ$int16,\n  yMin: $6uUbQ$int16,\n  xMax: $6uUbQ$int16,\n  yMax: $6uUbQ$int16,\n  endPtsOfContours: new $6uUbQ$Array($6uUbQ$uint16, \"numberOfContours\"),\n  instructions: new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16),\n  flags: new $6uUbQ$Array($6uUbQ$uint8, 0),\n  xPoints: new $6uUbQ$Array($807e58506be70005$var$Point, 0),\n  yPoints: new $6uUbQ$Array($807e58506be70005$var$Point, 0)\n});\n\nclass $807e58506be70005$export$2e2bcd8739ae039 {\n  encodeSimple(path) {\n    let instructions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let endPtsOfContours = [];\n    let xPoints = [];\n    let yPoints = [];\n    let flags = [];\n    let same = 0;\n    let lastX = 0,\n        lastY = 0,\n        lastFlag = 0;\n    let pointCount = 0;\n\n    for (let i = 0; i < path.commands.length; i++) {\n      let c = path.commands[i];\n\n      for (let j = 0; j < c.args.length; j += 2) {\n        let x = c.args[j];\n        let y = c.args[j + 1];\n        let flag = 0; // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n\n        if (c.command === \"quadraticCurveTo\" && j === 2) {\n          let next = path.commands[i + 1];\n\n          if (next && next.command === \"quadraticCurveTo\") {\n            let midX = (lastX + next.args[0]) / 2;\n            let midY = (lastY + next.args[1]) / 2;\n            if (x === midX && y === midY) continue;\n          }\n        } // All points except control points are on curve.\n\n\n        if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $807e58506be70005$var$ON_CURVE;\n        flag = this._encodePoint(x, lastX, xPoints, flag, $807e58506be70005$var$X_SHORT_VECTOR, $807e58506be70005$var$SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, $807e58506be70005$var$Y_SHORT_VECTOR, $807e58506be70005$var$SAME_Y);\n\n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= $807e58506be70005$var$REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n\n          flags.push(flag);\n          lastFlag = flag;\n        }\n\n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n\n      if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n    } // Close the path if the last command didn't already\n\n\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n    let bbox = path.bbox;\n    let glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    let size = $807e58506be70005$var$Glyf.size(glyf);\n    let tail = 4 - size % 4;\n    let stream = new $6uUbQ$EncodeStream(size + tail);\n    $807e58506be70005$var$Glyf.encode(stream, glyf); // Align to 4-byte length\n\n    if (tail !== 0) stream.fill(0, tail);\n    return stream.buffer;\n  }\n\n  _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    let diff = value - last;\n    if (value === last) flag |= sameFlag;else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) diff = -diff;else flag |= sameFlag;\n      }\n\n      points.push(diff);\n    }\n    return flag;\n  }\n\n}\n\nclass $4abbb6a5dbdc441a$export$2e2bcd8739ae039 extends (0, $5cc7476da92df375$export$2e2bcd8739ae039) {\n  _addGlyph(gid) {\n    let glyph = this.font.getGlyph(gid);\n\n    let glyf = glyph._decode(); // get the offset to the glyph from the loca table\n\n\n    let curOffset = this.font.loca.offsets[gid];\n    let nextOffset = this.font.loca.offsets[gid + 1];\n\n    let stream = this.font._getTableStream(\"glyf\");\n\n    stream.pos += curOffset;\n    let buffer = stream.readBuffer(nextOffset - curOffset); // if it is a compound glyph, include its components\n\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Uint8Array(buffer);\n      let view = new DataView(buffer.buffer);\n\n      for (let component of glyf.components) {\n        gid = this.includeGlyph(component.glyphID);\n        view.setUint16(component.pos, gid);\n      }\n    } else if (glyf && this.font._variationProcessor) // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  }\n\n  encode() {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    }; // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n\n    let i = 0;\n\n    while (i < this.glyphs.length) this._addGlyph(this.glyphs[i++]);\n\n    let maxp = (0, $6uUbQ$clone)(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n    this.loca.offsets.push(this.offset);\n    let head = (0, $6uUbQ$clone)(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n    let hhea = (0, $6uUbQ$clone)(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length; // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n    // TODO: subset prep, cvt, fpgm?\n\n    return (0, $816c07a04b6dba87$export$2e2bcd8739ae039).toBuffer({\n      tables: {\n        head: head,\n        hhea: hhea,\n        loca: this.loca,\n        maxp: maxp,\n        \"cvt \": this.font[\"cvt \"],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n      }\n    });\n  }\n\n  constructor(font) {\n    super(font);\n    this.glyphEncoder = new (0, $807e58506be70005$export$2e2bcd8739ae039)();\n  }\n\n}\n\nclass $001d739428a71d5a$export$2e2bcd8739ae039 extends (0, $5cc7476da92df375$export$2e2bcd8739ae039) {\n  subsetCharstrings() {\n    this.charstrings = [];\n    let gsubrs = {};\n\n    for (let gid of this.glyphs) {\n      this.charstrings.push(this.cff.getCharString(gid));\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedGsubrs) gsubrs[subr] = true;\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  }\n\n  subsetSubrs(subrs, used) {\n    let res = [];\n\n    for (let i = 0; i < subrs.length; i++) {\n      let subr = subrs[i];\n\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else res.push(new Uint8Array([11])); // return\n\n    }\n\n    return res;\n  }\n\n  subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n    let used_fds = {};\n    let used_subrs = [];\n    let fd_select = {};\n\n    for (let gid of this.glyphs) {\n      let fd = this.cff.fdForGlyph(gid);\n      if (fd == null) continue;\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n        fd_select[fd] = topDict.FDArray.length - 1;\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(fd_select[fd]);\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedSubrs) used_subrs[fd_select[fd]][subr] = true;\n    }\n\n    for (let i = 0; i < topDict.FDArray.length; i++) {\n      let dict = topDict.FDArray[i];\n      delete dict.FontName;\n\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  }\n\n  createCIDFontdict(topDict) {\n    let used_subrs = {};\n\n    for (let gid of this.glyphs) {\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedSubrs) used_subrs[subr] = true;\n    }\n\n    let privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    topDict.FDArray = [{\n      Private: privateDict\n    }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{\n        first: 0,\n        fd: 0\n      }],\n      sentinel: this.charstrings.length\n    };\n  }\n\n  addString(string) {\n    if (!string) return null;\n    if (!this.strings) this.strings = [];\n    this.strings.push(string);\n    return (0, $229224aec43783c5$export$2e2bcd8739ae039).length + this.strings.length - 1;\n  }\n\n  encode() {\n    this.subsetCharstrings();\n    let charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{\n        first: 1,\n        nLeft: this.charstrings.length - 2\n      }]\n    };\n    let topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (let key of [\"version\", \"Notice\", \"Copyright\", \"FullName\", \"FamilyName\", \"Weight\", \"PostScript\", \"BaseFontName\", \"FontName\"]) topDict[key] = this.addString(this.cff.string(topDict[key]));\n\n    topDict.ROS = [this.addString(\"Adobe\"), this.addString(\"Identity\"), 0];\n    topDict.CIDCount = this.charstrings.length;\n    if (this.cff.isCIDFont) this.subsetFontdict(topDict);else this.createCIDFontdict(topDict);\n    let top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n    return (0, $b84fd3dd9d8eddb2$export$2e2bcd8739ae039).toBuffer(top);\n  }\n\n  constructor(font) {\n    super(font);\n    this.cff = this.font[\"CFF \"];\n    if (!this.cff) throw new Error(\"Not a CFF Font\");\n  }\n\n}\n\nclass $4c1709dee528ea76$export$2e2bcd8739ae039 {\n  static probe(buffer) {\n    let format = (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4));\n    return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n  }\n\n  setDefaultLanguage() {\n    let lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.defaultLanguage = lang;\n  }\n\n  _getTable(table) {\n    if (!(table.tag in this._tables)) try {\n      this._tables[table.tag] = this._decodeTable(table);\n    } catch (e) {\n      if ($d636bc798e7178db$export$bd5c5d8b8dcafd78) {\n        console.error(`Error decoding table ${table.tag}`);\n        console.error(e.stack);\n      }\n    }\n    return this._tables[table.tag];\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  }\n\n  _decodeDirectory() {\n    return this.directory = (0, $816c07a04b6dba87$export$2e2bcd8739ae039).decode(this.stream, {\n      _startOffset: 0\n    });\n  }\n\n  _decodeTable(table) {\n    let pos = this.stream.pos;\n\n    let stream = this._getTableStream(table.tag);\n\n    let result = (0, $c3395722bea751e2$export$2e2bcd8739ae039)[table.tag].decode(stream, this, table.length);\n    this.stream.pos = pos;\n    return result;\n  }\n  /**\n  * Gets a string from the font's `name` table\n  * `lang` is a BCP-47 language code.\n  * @return {string}\n  */\n\n\n  getName(key) {\n    let lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultLanguage || $d636bc798e7178db$export$42940898df819940;\n    let record = this.name && this.name.records[key];\n    if (record) // Attempt to retrieve the entry, depending on which translation is available:\n      return record[lang] || record[this.defaultLanguage] || record[$d636bc798e7178db$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n      || null;\n    return null;\n  }\n  /**\n  * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n  * @type {string}\n  */\n\n\n  get postscriptName() {\n    return this.getName(\"postscriptName\");\n  }\n  /**\n  * The font's full name, e.g. \"Helvetica Bold\"\n  * @type {string}\n  */\n\n\n  get fullName() {\n    return this.getName(\"fullName\");\n  }\n  /**\n  * The font's family name, e.g. \"Helvetica\"\n  * @type {string}\n  */\n\n\n  get familyName() {\n    return this.getName(\"fontFamily\");\n  }\n  /**\n  * The font's sub-family, e.g. \"Bold\".\n  * @type {string}\n  */\n\n\n  get subfamilyName() {\n    return this.getName(\"fontSubfamily\");\n  }\n  /**\n  * The font's copyright information\n  * @type {string}\n  */\n\n\n  get copyright() {\n    return this.getName(\"copyright\");\n  }\n  /**\n  * The font's version number\n  * @type {string}\n  */\n\n\n  get version() {\n    return this.getName(\"version\");\n  }\n  /**\n  * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n  * @type {number}\n  */\n\n\n  get ascent() {\n    return this.hhea.ascent;\n  }\n  /**\n  * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n  * @type {number}\n  */\n\n\n  get descent() {\n    return this.hhea.descent;\n  }\n  /**\n  * The amount of space that should be included between lines\n  * @type {number}\n  */\n\n\n  get lineGap() {\n    return this.hhea.lineGap;\n  }\n  /**\n  * The offset from the normal underline position that should be used\n  * @type {number}\n  */\n\n\n  get underlinePosition() {\n    return this.post.underlinePosition;\n  }\n  /**\n  * The weight of the underline that should be used\n  * @type {number}\n  */\n\n\n  get underlineThickness() {\n    return this.post.underlineThickness;\n  }\n  /**\n  * If this is an italic font, the angle the cursor should be drawn at to match the font design\n  * @type {number}\n  */\n\n\n  get italicAngle() {\n    return this.post.italicAngle;\n  }\n  /**\n  * The height of capital letters above the baseline.\n  * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n  * @type {number}\n  */\n\n\n  get capHeight() {\n    let os2 = this[\"OS/2\"];\n    return os2 ? os2.capHeight : this.ascent;\n  }\n  /**\n  * The height of lower case letters in the font.\n  * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n  * @type {number}\n  */\n\n\n  get xHeight() {\n    let os2 = this[\"OS/2\"];\n    return os2 ? os2.xHeight : 0;\n  }\n  /**\n  * The number of glyphs in the font.\n  * @type {number}\n  */\n\n\n  get numGlyphs() {\n    return this.maxp.numGlyphs;\n  }\n  /**\n  * The size of the font’s internal coordinate grid\n  * @type {number}\n  */\n\n\n  get unitsPerEm() {\n    return this.head.unitsPerEm;\n  }\n  /**\n  * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n  * @type {BBox}\n  */\n\n\n  get bbox() {\n    return Object.freeze(new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n  }\n\n  get _cmapProcessor() {\n    return new (0, $f08dd41ef10b694c$export$2e2bcd8739ae039)(this.cmap);\n  }\n  /**\n  * An array of all of the unicode code points supported by the font.\n  * @type {number[]}\n  */\n\n\n  get characterSet() {\n    return this._cmapProcessor.getCharacterSet();\n  }\n  /**\n  * Returns whether there is glyph in the font for the given unicode code point.\n  *\n  * @param {number} codePoint\n  * @return {boolean}\n  */\n\n\n  hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n  /**\n  * Maps a single unicode code point to a Glyph object.\n  * Does not perform any advanced substitutions (there is no context to do so).\n  *\n  * @param {number} codePoint\n  * @return {Glyph}\n  */\n\n\n  glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n  /**\n  * Returns an array of Glyph objects for the given string.\n  * This is only a one-to-one mapping from characters to glyphs.\n  * For most uses, you should use font.layout (described below), which\n  * provides a much more advanced mapping supporting AAT and OpenType shaping.\n  *\n  * @param {string} string\n  * @return {Glyph[]}\n  */\n\n\n  glyphsForString(string) {\n    let glyphs = [];\n    let len = string.length;\n    let idx = 0;\n    let last = -1;\n    let state = -1;\n\n    while (idx <= len) {\n      let code = 0;\n      let nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          let next = string.charCodeAt(idx);\n\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        } // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n\n\n        nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n      } else idx++;\n\n      if (state === 0 && nextState === 1) // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));else if (state === 0 && nextState === 0) // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  }\n\n  get _layoutEngine() {\n    return new (0, $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039)(this);\n  }\n  /**\n  * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n  *\n  * @param {string} string\n  * @param {string[]} [userFeatures]\n  * @param {string} [script]\n  * @param {string} [language]\n  * @param {string} [direction]\n  * @return {GlyphRun}\n  */\n\n\n  layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n  /**\n  * Returns an array of strings that map to the given glyph id.\n  * @param {number} gid - glyph id\n  */\n\n\n  stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n  /**\n  * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n  * (or mapped AAT tags) supported by the font.\n  * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n  * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n  *\n  * @type {string[]}\n  */\n\n\n  get availableFeatures() {\n    return this._layoutEngine.getAvailableFeatures();\n  }\n\n  getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  }\n\n  _getBaseGlyph(glyph) {\n    let characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) this._glyphs[glyph] = new (0, $69aac16029968692$export$2e2bcd8739ae039)(glyph, characters, this);else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new (0, $62cc5109c6101893$export$2e2bcd8739ae039)(glyph, characters, this);\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n  * Returns a glyph object for the given glyph id.\n  * You can pass the array of code points this glyph represents for\n  * your use later, and it will be stored in the glyph object.\n  *\n  * @param {number} glyph\n  * @param {number[]} characters\n  * @return {Glyph}\n  */\n\n\n  getGlyph(glyph) {\n    let characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) this._glyphs[glyph] = new (0, $25d8f049c222084c$export$2e2bcd8739ae039)(glyph, characters, this);else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new (0, $0d411f0165859681$export$2e2bcd8739ae039)(glyph, characters, this);else this._getBaseGlyph(glyph, characters);\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n  /**\n  * Returns a Subset for this font.\n  * @return {Subset}\n  */\n\n\n  createSubset() {\n    if (this.directory.tables[\"CFF \"]) return new (0, $001d739428a71d5a$export$2e2bcd8739ae039)(this);\n    return new (0, $4abbb6a5dbdc441a$export$2e2bcd8739ae039)(this);\n  }\n  /**\n  * Returns an object describing the available variation axes\n  * that this font supports. Keys are setting tags, and values\n  * contain the axis name, range, and default value.\n  *\n  * @type {object}\n  */\n\n\n  get variationAxes() {\n    let res = {};\n    if (!this.fvar) return res;\n\n    for (let axis of this.fvar.axis) res[axis.axisTag.trim()] = {\n      name: axis.name.en,\n      min: axis.minValue,\n      default: axis.defaultValue,\n      max: axis.maxValue\n    };\n\n    return res;\n  }\n  /**\n  * Returns an object describing the named variation instances\n  * that the font designer has specified. Keys are variation names\n  * and values are the variation settings for this instance.\n  *\n  * @type {object}\n  */\n\n\n  get namedVariations() {\n    let res = {};\n    if (!this.fvar) return res;\n\n    for (let instance of this.fvar.instance) {\n      let settings = {};\n\n      for (let i = 0; i < this.fvar.axis.length; i++) {\n        let axis = this.fvar.axis[i];\n        settings[axis.axisTag.trim()] = instance.coord[i];\n      }\n\n      res[instance.name.en] = settings;\n    }\n\n    return res;\n  }\n  /**\n  * Returns a new font with the given variation settings applied.\n  * Settings can either be an instance name, or an object containing\n  * variation tags as specified by the `variationAxes` property.\n  *\n  * @param {object} settings\n  * @return {TTFFont}\n  */\n\n\n  getVariation(settings) {\n    if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n    if (typeof settings === \"string\") settings = this.namedVariations[settings];\n    if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\"); // normalize the coordinates\n\n    let coords = this.fvar.axis.map((axis, i) => {\n      let axisTag = axis.axisTag.trim();\n      if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));else return axis.defaultValue;\n    });\n    let stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n    let font = new $4c1709dee528ea76$export$2e2bcd8739ae039(stream, coords);\n    font._tables = this._tables;\n    return font;\n  }\n\n  get _variationProcessor() {\n    if (!this.fvar) return null;\n    let variationCoords = this.variationCoords; // Ignore if no variation coords and not CFF2\n\n    if (!variationCoords && !this.CFF2) return null;\n    if (!variationCoords) variationCoords = this.fvar.axis.map(axis => axis.defaultValue);\n    return new (0, $0bb840cac04e911b$export$2e2bcd8739ae039)(this, variationCoords);\n  } // Standardized format plugin API\n\n\n  getFont(name) {\n    return this.getVariation(name);\n  }\n\n  constructor(stream) {\n    let variationCoords = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTF\");\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n\n    this._decodeDirectory(); // define properties for each table to lazily parse\n\n\n    for (let tag in this.directory.tables) {\n      let table = this.directory.tables[tag];\n      if ((0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag] && table.length > 0) Object.defineProperty(this, tag, {\n        get: this._getTable.bind(this, table)\n      });\n    }\n  }\n\n}\n\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([(0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\nlet $c1726355ecc5b889$var$WOFFDirectoryEntry = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  offset: new $6uUbQ$Pointer($6uUbQ$uint32, \"void\", {\n    type: \"global\"\n  }),\n  compLength: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  origChecksum: $6uUbQ$uint32\n});\nlet $c1726355ecc5b889$var$WOFFDirectory = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  flavor: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  numTables: $6uUbQ$uint16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  totalSfntSize: $6uUbQ$uint32,\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  metaOffset: $6uUbQ$uint32,\n  metaLength: $6uUbQ$uint32,\n  metaOrigLength: $6uUbQ$uint32,\n  privOffset: $6uUbQ$uint32,\n  privLength: $6uUbQ$uint32,\n  tables: new $6uUbQ$Array($c1726355ecc5b889$var$WOFFDirectoryEntry, \"numTables\")\n});\n\n$c1726355ecc5b889$var$WOFFDirectory.process = function () {\n  let tables1 = {};\n\n  for (let table of this.tables) tables1[table.tag] = table;\n\n  this.tables = tables1;\n};\n\nvar $c1726355ecc5b889$export$2e2bcd8739ae039 = $c1726355ecc5b889$var$WOFFDirectory;\n\nclass $760785214b9fc52c$export$2e2bcd8739ae039 extends (0, $4c1709dee528ea76$export$2e2bcd8739ae039) {\n  static probe(buffer) {\n    return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOFF\";\n  }\n\n  _decodeDirectory() {\n    this.directory = (0, $c1726355ecc5b889$export$2e2bcd8739ae039).decode(this.stream, {\n      _startOffset: 0\n    });\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n\n        let outBuffer = new Uint8Array(table.length);\n        let buf = (0, $6uUbQ$tinyinflate)(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new $6uUbQ$DecodeStream(buf);\n      } else return this.stream;\n    }\n\n    return null;\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"WOFF\");\n  }\n\n}\n\nclass $8046190c9f1ad19e$export$2e2bcd8739ae039 extends (0, $69aac16029968692$export$2e2bcd8739ae039) {\n  _decode() {\n    // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n    return this._font._transformedGlyphs[this.id];\n  }\n\n  _getCBox() {\n    return this.path.bbox;\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"WOFF2\");\n  }\n\n}\n\nconst $c28ec7bbb3b8de3a$var$Base128 = {\n  decode(stream) {\n    let result = 0;\n    let iterable = [0, 1, 2, 3, 4];\n\n    for (let j = 0; j < iterable.length; j++) {\n      let i = iterable[j];\n      let code = stream.readUInt8(); // If any of the top seven bits are set then we're about to overflow.\n\n      if (result & 0xe0000000) throw new Error(\"Overflow\");\n      result = result << 7 | code & 0x7f;\n      if ((code & 0x80) === 0) return result;\n    }\n\n    throw new Error(\"Bad base 128 number\");\n  }\n\n};\nlet $c28ec7bbb3b8de3a$var$knownTags = [\"cmap\", \"head\", \"hhea\", \"hmtx\", \"maxp\", \"name\", \"OS/2\", \"post\", \"cvt \", \"fpgm\", \"glyf\", \"loca\", \"prep\", \"CFF \", \"VORG\", \"EBDT\", \"EBLC\", \"gasp\", \"hdmx\", \"kern\", \"LTSH\", \"PCLT\", \"VDMX\", \"vhea\", \"vmtx\", \"BASE\", \"GDEF\", \"GPOS\", \"GSUB\", \"EBSC\", \"JSTF\", \"MATH\", \"CBDT\", \"CBLC\", \"COLR\", \"CPAL\", \"SVG \", \"sbix\", \"acnt\", \"avar\", \"bdat\", \"bloc\", \"bsln\", \"cvar\", \"fdsc\", \"feat\", \"fmtx\", \"fvar\", \"gvar\", \"hsty\", \"just\", \"lcar\", \"mort\", \"morx\", \"opbd\", \"prop\", \"trak\", \"Zapf\", \"Silf\", \"Glat\", \"Gloc\", \"Feat\", \"Sill\"];\nlet $c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry = new $6uUbQ$Struct({\n  flags: $6uUbQ$uint8,\n  customTag: new $6uUbQ$Optional(new $6uUbQ$String(4), t => (t.flags & 0x3f) === 0x3f),\n  tag: t => t.customTag || $c28ec7bbb3b8de3a$var$knownTags[t.flags & 0x3f],\n  length: $c28ec7bbb3b8de3a$var$Base128,\n  transformVersion: t => t.flags >>> 6 & 0x03,\n  transformed: t => t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0,\n  transformLength: new $6uUbQ$Optional($c28ec7bbb3b8de3a$var$Base128, t => t.transformed)\n});\nlet $c28ec7bbb3b8de3a$var$WOFF2Directory = new $6uUbQ$Struct({\n  tag: new $6uUbQ$String(4),\n  flavor: $6uUbQ$uint32,\n  length: $6uUbQ$uint32,\n  numTables: $6uUbQ$uint16,\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n  totalSfntSize: $6uUbQ$uint32,\n  totalCompressedSize: $6uUbQ$uint32,\n  majorVersion: $6uUbQ$uint16,\n  minorVersion: $6uUbQ$uint16,\n  metaOffset: $6uUbQ$uint32,\n  metaLength: $6uUbQ$uint32,\n  metaOrigLength: $6uUbQ$uint32,\n  privOffset: $6uUbQ$uint32,\n  privLength: $6uUbQ$uint32,\n  tables: new $6uUbQ$Array($c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry, \"numTables\")\n});\n\n$c28ec7bbb3b8de3a$var$WOFF2Directory.process = function () {\n  let tables = {};\n\n  for (let i = 0; i < this.tables.length; i++) {\n    let table = this.tables[i];\n    tables[table.tag] = table;\n  }\n\n  return this.tables = tables;\n};\n\nvar $c28ec7bbb3b8de3a$export$2e2bcd8739ae039 = $c28ec7bbb3b8de3a$var$WOFF2Directory;\n\nclass $21ee218f84ac7f32$export$2e2bcd8739ae039 extends (0, $4c1709dee528ea76$export$2e2bcd8739ae039) {\n  static probe(buffer) {\n    return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOF2\";\n  }\n\n  _decodeDirectory() {\n    this.directory = (0, $c28ec7bbb3b8de3a$export$2e2bcd8739ae039).decode(this.stream);\n    this._dataPos = this.stream.pos;\n  }\n\n  _decompress() {\n    // decompress data and setup table offsets if we haven't already\n    if (!this._decompressed) {\n      this.stream.pos = this._dataPos;\n      let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n      let decompressedSize = 0;\n\n      for (let tag in this.directory.tables) {\n        let entry = this.directory.tables[tag];\n        entry.offset = decompressedSize;\n        decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n      }\n\n      let decompressed = (0, $6uUbQ$brotlidecompressjs)(buffer, decompressedSize);\n      if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n      this.stream = new $6uUbQ$DecodeStream(decompressed);\n      this._decompressed = true;\n    }\n  }\n\n  _decodeTable(table) {\n    this._decompress();\n\n    return super._decodeTable(table);\n  } // Override this method to get a glyph and return our\n  // custom subclass if there is a glyf table.\n\n\n  _getBaseGlyph(glyph) {\n    let characters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n        if (!this._transformedGlyphs) this._transformGlyfTable();\n        return this._glyphs[glyph] = new (0, $8046190c9f1ad19e$export$2e2bcd8739ae039)(glyph, characters, this);\n      } else return super._getBaseGlyph(glyph, characters);\n    }\n  }\n\n  _transformGlyfTable() {\n    this._decompress();\n\n    this.stream.pos = this.directory.tables.glyf.offset;\n    let table = $21ee218f84ac7f32$var$GlyfTable.decode(this.stream);\n    let glyphs = [];\n\n    for (let index = 0; index < table.numGlyphs; index++) {\n      let glyph = {};\n      let nContours = table.nContours.readInt16BE();\n      glyph.numberOfContours = nContours;\n\n      if (nContours > 0) {\n        let nPoints = [];\n        let totalPoints = 0;\n\n        for (let i = 0; i < nContours; i++) {\n          let r1 = $21ee218f84ac7f32$var$read255UInt16(table.nPoints);\n          totalPoints += r1;\n          nPoints.push(totalPoints);\n        }\n\n        glyph.points = $21ee218f84ac7f32$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n\n        for (let i1 = 0; i1 < nContours; i1++) glyph.points[nPoints[i1] - 1].endContour = true;\n\n        var instructionSize = $21ee218f84ac7f32$var$read255UInt16(table.glyphs);\n      } else if (nContours < 0) {\n        let haveInstructions = (0, $69aac16029968692$export$2e2bcd8739ae039).prototype._decodeComposite.call({\n          _font: this\n        }, glyph, table.composites);\n\n        if (haveInstructions) var instructionSize = $21ee218f84ac7f32$var$read255UInt16(table.glyphs);\n      }\n\n      glyphs.push(glyph);\n    }\n\n    this._transformedGlyphs = glyphs;\n  }\n\n  constructor() {\n    super(...arguments);\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"WOFF2\");\n  }\n\n} // Special class that accepts a length and returns a sub-stream for that data\n\n\nclass $21ee218f84ac7f32$var$Substream {\n  decode(stream, parent) {\n    return new $6uUbQ$DecodeStream(this._buf.decode(stream, parent));\n  }\n\n  constructor(length) {\n    this.length = length;\n    this._buf = new $6uUbQ$Buffer(length);\n  }\n\n} // This struct represents the entire glyf table\n\n\nlet $21ee218f84ac7f32$var$GlyfTable = new $6uUbQ$Struct({\n  version: $6uUbQ$uint32,\n  numGlyphs: $6uUbQ$uint16,\n  indexFormat: $6uUbQ$uint16,\n  nContourStreamSize: $6uUbQ$uint32,\n  nPointsStreamSize: $6uUbQ$uint32,\n  flagStreamSize: $6uUbQ$uint32,\n  glyphStreamSize: $6uUbQ$uint32,\n  compositeStreamSize: $6uUbQ$uint32,\n  bboxStreamSize: $6uUbQ$uint32,\n  instructionStreamSize: $6uUbQ$uint32,\n  nContours: new $21ee218f84ac7f32$var$Substream(\"nContourStreamSize\"),\n  nPoints: new $21ee218f84ac7f32$var$Substream(\"nPointsStreamSize\"),\n  flags: new $21ee218f84ac7f32$var$Substream(\"flagStreamSize\"),\n  glyphs: new $21ee218f84ac7f32$var$Substream(\"glyphStreamSize\"),\n  composites: new $21ee218f84ac7f32$var$Substream(\"compositeStreamSize\"),\n  bboxes: new $21ee218f84ac7f32$var$Substream(\"bboxStreamSize\"),\n  instructions: new $21ee218f84ac7f32$var$Substream(\"instructionStreamSize\")\n});\nconst $21ee218f84ac7f32$var$WORD_CODE = 253;\nconst $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2 = 254;\nconst $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1 = 255;\nconst $21ee218f84ac7f32$var$LOWEST_U_CODE = 253;\n\nfunction $21ee218f84ac7f32$var$read255UInt16(stream) {\n  let code = stream.readUInt8();\n  if (code === $21ee218f84ac7f32$var$WORD_CODE) return stream.readUInt16BE();\n  if (code === $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $21ee218f84ac7f32$var$LOWEST_U_CODE;\n  if (code === $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $21ee218f84ac7f32$var$LOWEST_U_CODE * 2;\n  return code;\n}\n\nfunction $21ee218f84ac7f32$var$withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\n\nfunction $21ee218f84ac7f32$var$decodeTriplet(flags, glyphs, nPoints) {\n  let y;\n  let x = y = 0;\n  let res = [];\n\n  for (let i = 0; i < nPoints; i++) {\n    let dx = 0,\n        dy = 0;\n    let flag = flags.readUInt8();\n    let onCurve = !(flag >> 7);\n    flag &= 0x7f;\n\n    if (flag < 10) {\n      dx = 0;\n      dy = $21ee218f84ac7f32$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n    } else if (flag < 20) {\n      dx = $21ee218f84ac7f32$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = $21ee218f84ac7f32$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = $21ee218f84ac7f32$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      let b2 = glyphs.readUInt8();\n      dx = $21ee218f84ac7f32$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n    } else {\n      dx = $21ee218f84ac7f32$var$withSign(flag, glyphs.readUInt16BE());\n      dy = $21ee218f84ac7f32$var$withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n\n    x += dx;\n    y += dy;\n    res.push(new (0, $69aac16029968692$export$baf26146a414f24a)(onCurve, false, x, y));\n  }\n\n  return res;\n}\n\nlet $cd5853a56c68fec7$var$TTCHeader = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n  0x00010000: {\n    numFonts: $6uUbQ$uint32,\n    offsets: new $6uUbQ$Array($6uUbQ$uint32, \"numFonts\")\n  },\n  0x00020000: {\n    numFonts: $6uUbQ$uint32,\n    offsets: new $6uUbQ$Array($6uUbQ$uint32, \"numFonts\"),\n    dsigTag: $6uUbQ$uint32,\n    dsigLength: $6uUbQ$uint32,\n    dsigOffset: $6uUbQ$uint32\n  }\n});\n\nclass $cd5853a56c68fec7$export$2e2bcd8739ae039 {\n  static probe(buffer) {\n    return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"ttcf\";\n  }\n\n  getFont(name) {\n    for (let offset of this.header.offsets) {\n      let stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      let font = new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream);\n      if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i) => name[i] === v)) return font;\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n\n    for (let offset of this.header.offsets) {\n      let stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      fonts.push(new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream));\n    }\n\n    return fonts;\n  }\n\n  constructor(stream) {\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTC\");\n    this.stream = stream;\n    if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n    this.header = $cd5853a56c68fec7$var$TTCHeader.decode(stream);\n  }\n\n}\n\nlet $05f49f930186144e$var$DFontName = new $6uUbQ$String($6uUbQ$uint8);\nlet $05f49f930186144e$var$DFontData = new $6uUbQ$Struct({\n  len: $6uUbQ$uint32,\n  buf: new $6uUbQ$Buffer(\"len\")\n});\nlet $05f49f930186144e$var$Ref = new $6uUbQ$Struct({\n  id: $6uUbQ$uint16,\n  nameOffset: $6uUbQ$int16,\n  attr: $6uUbQ$uint8,\n  dataOffset: $6uUbQ$uint24,\n  handle: $6uUbQ$uint32\n});\nlet $05f49f930186144e$var$Type = new $6uUbQ$Struct({\n  name: new $6uUbQ$String(4),\n  maxTypeIndex: $6uUbQ$uint16,\n  refList: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array($05f49f930186144e$var$Ref, t => t.maxTypeIndex + 1), {\n    type: \"parent\"\n  })\n});\nlet $05f49f930186144e$var$TypeList = new $6uUbQ$Struct({\n  length: $6uUbQ$uint16,\n  types: new $6uUbQ$Array($05f49f930186144e$var$Type, t => t.length + 1)\n});\nlet $05f49f930186144e$var$DFontMap = new $6uUbQ$Struct({\n  reserved: new $6uUbQ$Reserved($6uUbQ$uint8, 24),\n  typeList: new $6uUbQ$Pointer($6uUbQ$uint16, $05f49f930186144e$var$TypeList),\n  nameListOffset: new $6uUbQ$Pointer($6uUbQ$uint16, \"void\")\n});\nlet $05f49f930186144e$var$DFontHeader = new $6uUbQ$Struct({\n  dataOffset: $6uUbQ$uint32,\n  map: new $6uUbQ$Pointer($6uUbQ$uint32, $05f49f930186144e$var$DFontMap),\n  dataLength: $6uUbQ$uint32,\n  mapLength: $6uUbQ$uint32\n});\n\nclass $05f49f930186144e$export$2e2bcd8739ae039 {\n  static probe(buffer) {\n    let stream = new $6uUbQ$DecodeStream(buffer);\n\n    try {\n      var header = $05f49f930186144e$var$DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (let type of header.map.typeList.types) {\n      if (type.name === \"sfnt\") return true;\n    }\n\n    return false;\n  }\n\n  getFont(name) {\n    if (!this.sfnt) return null;\n\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new $6uUbQ$DecodeStream(this.stream.buffer.slice(pos));\n      let font = new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream);\n      if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i) => name[i] === v)) return font;\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new $6uUbQ$DecodeStream(this.stream.buffer.slice(pos));\n      fonts.push(new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream));\n    }\n\n    return fonts;\n  }\n\n  constructor(stream) {\n    (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"DFont\");\n    this.stream = stream;\n    this.header = $05f49f930186144e$var$DFontHeader.decode(this.stream);\n\n    for (let type of this.header.map.typeList.types) {\n      for (let ref of type.refList) if (ref.nameOffset >= 0) {\n        this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n        ref.name = $05f49f930186144e$var$DFontName.decode(this.stream);\n      } else ref.name = null;\n\n      if (type.name === \"sfnt\") this.sfnt = type;\n    }\n  }\n\n} // Register font formats\n\n\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $4c1709dee528ea76$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $760785214b9fc52c$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $21ee218f84ac7f32$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $cd5853a56c68fec7$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $05f49f930186144e$export$2e2bcd8739ae039));\nexport { $d636bc798e7178db$export$bd5c5d8b8dcafd78 as logErrors, $d636bc798e7178db$export$36b2f24e97d43be as registerFormat, $d636bc798e7178db$export$185802fd694ee1f5 as create, $d636bc798e7178db$export$42940898df819940 as defaultLanguage, $d636bc798e7178db$export$5157e7780d44cc36 as setDefaultLanguage };","map":{"version":3,"mappings":"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","names":["$d636bc798e7178db$export$bd5c5d8b8dcafd78","$d636bc798e7178db$var$formats","$d636bc798e7178db$export$36b2f24e97d43be","format","push","$d636bc798e7178db$export$185802fd694ee1f5","buffer","postscriptName","i","length","probe","font","getFont","Error","$d636bc798e7178db$export$42940898df819940","$d636bc798e7178db$export$5157e7780d44cc36","lang","$e71565f2ce09cb6b$export$69a3209f1a06c04d","target","key1","descriptor","get","value","call","Object","defineProperty","fn","cache1","Map","memoized","args","key","has","result","apply","set","$26a62205ad06574e$var$SubHeader","$6uUbQ$Struct","firstCode","$6uUbQ$uint16","entryCount","idDelta","$6uUbQ$int16","idRangeOffset","$26a62205ad06574e$var$CmapGroup","startCharCode","$6uUbQ$uint32","endCharCode","glyphID","$26a62205ad06574e$var$UnicodeValueRange","startUnicodeValue","$6uUbQ$uint24","additionalCount","$6uUbQ$uint8","$26a62205ad06574e$var$UVSMapping","unicodeValue","$26a62205ad06574e$var$DefaultUVS","$6uUbQ$Array","$26a62205ad06574e$var$NonDefaultUVS","$26a62205ad06574e$var$VarSelectorRecord","varSelector","defaultUVS","$6uUbQ$Pointer","type","nonDefaultUVS","$26a62205ad06574e$var$CmapSubtable","$6uUbQ$VersionedStruct","language","codeMap","$6uUbQ$LazyArray","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","$6uUbQ$Reserved","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","$26a62205ad06574e$var$CmapEntry","platformID","encodingID","table","lazy","$26a62205ad06574e$export$2e2bcd8739ae039","version","numSubtables","tables","$f2612a29f92ac062$export$2e2bcd8739ae039","$6uUbQ$int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","$6uUbQ$Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","$2c179dd593583073$export$2e2bcd8739ae039","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","$bdc9060542264b85$var$HmtxEntry","advance","bearing","$bdc9060542264b85$export$2e2bcd8739ae039","metrics","parent","hhea","bearings","maxp","numGlyphs","$dbf51cb3d3fe409d$export$2e2bcd8739ae039","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","$e449ad78d50845fe$export$badc544e0651b6b1","languageID","$e449ad78d50845fe$export$479e671907f486d1","$e449ad78d50845fe$export$6fef87b7618bdf0b","$e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS","Set","$e449ad78d50845fe$var$MAC_ENCODINGS","$e449ad78d50845fe$var$encodingCache","$e449ad78d50845fe$export$1dceb3c14ed68bee","encoding","cached","mapping","res","charCodeAt","decoder","TextDecoder","Uint8Array","s","decode","i1","$e449ad78d50845fe$export$2092376fd002e13","$2bcf221753ec8e32$var$NameRecord","nameID","string","$6uUbQ$String","relativeTo","ctx","stringOffset","allowNull","$2bcf221753ec8e32$var$LangTagRecord","tag","$2bcf221753ec8e32$var$NameTable","count","records","langTagCount","langTags","$2bcf221753ec8e32$export$2e2bcd8739ae039","$2bcf221753ec8e32$var$NAMES","process","stream","record","obj","preEncode","Array","isArray","val","indexOf","en","size","$84b272aa31b70606$var$OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","$84b272aa31b70606$var$versions","versions","$84b272aa31b70606$export$2e2bcd8739ae039","$32d9e2eb9565d93c$export$2e2bcd8739ae039","$6uUbQ$fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","$5202bd9d9ad8eaac$export$2e2bcd8739ae039","controlValues","$5c0f37ca5ffb1850$export$2e2bcd8739ae039","instructions","$2b2b260902b1c57e$var$loca","_processed","$2b2b260902b1c57e$export$2e2bcd8739ae039","$7afb878c7bea4f66$export$2e2bcd8739ae039","controlValueProgram","$6c92b6371bce8bd9$export$2e2bcd8739ae039","$6uUbQ$Buffer","$43e9821ef3717eec$export$2e2bcd8739ae039","getCFFVersion","hdrSize","readUInt32BE","readUInt16BE","offSize","readUInt8","offsetType","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","writeUInt8","item1","constructor","$c2d28e92708f99da$var$FLOAT_EOF","$c2d28e92708f99da$var$FLOAT_LOOKUP","$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP","$c2d28e92708f99da$export$2e2bcd8739ae039","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","c1","c2","writeInt16BE","$61aa549f16d58b9b$export$2e2bcd8739ae039","decodeOperands","operands","op","encodeOperands","defineProperties","_startOffset","fields","field","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","ops","op1","ptr","$0e34a43d05bde82c$export$2e2bcd8739ae039","$0e34a43d05bde82c$var$Ptr","options","valueOf","$6d59db2e29cc77b3$var$CFFBlendOp","numBlends","pop","$6d59db2e29cc77b3$export$2e2bcd8739ae039","$229224aec43783c5$export$2e2bcd8739ae039","$bc0433d9b7e41f5f$export$dee0027060fa13bd","$bc0433d9b7e41f5f$export$4f58f497e14a53c3","$ef658f5c9a1488b2$export$c33b50336c234f16","$ef658f5c9a1488b2$export$3ed0f9e1fee8d489","$ef658f5c9a1488b2$export$dc28be11139d4120","$7cbbe4e24ef3cb75$var$LangSysTable","reqFeatureIndex","featureCount","featureIndexes","$7cbbe4e24ef3cb75$var$LangSysRecord","langSys","$7cbbe4e24ef3cb75$var$Script","defaultLangSys","langSysRecords","$7cbbe4e24ef3cb75$var$ScriptRecord","script","$7cbbe4e24ef3cb75$export$3e15fc05ce864229","$7cbbe4e24ef3cb75$var$FeatureParams","$7cbbe4e24ef3cb75$export$6e91cf7616333d5","featureParams","lookupCount","lookupListIndexes","$7cbbe4e24ef3cb75$var$FeatureRecord","feature","$7cbbe4e24ef3cb75$export$aa18130def4b6cb4","$7cbbe4e24ef3cb75$var$LookupFlags","markAttachmentType","$7cbbe4e24ef3cb75$export$df0008c6ff2da22a","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","$6uUbQ$Optional","useMarkFilteringSet","$7cbbe4e24ef3cb75$var$RangeRecord","startCoverageIndex","$7cbbe4e24ef3cb75$export$17608c3f81a6111","glyphCount","glyphs","rangeCount","rangeRecords","$7cbbe4e24ef3cb75$var$ClassRangeRecord","class","$7cbbe4e24ef3cb75$export$843d551fbbafef71","startGlyph","classValueArray","classRangeCount","classRangeRecord","$7cbbe4e24ef3cb75$export$8215d14a63d9fb10","a","deltaFormat","$7cbbe4e24ef3cb75$var$LookupRecord","sequenceIndex","lookupListIndex","$7cbbe4e24ef3cb75$var$Rule","input","lookupRecords","$7cbbe4e24ef3cb75$var$RuleSet","$7cbbe4e24ef3cb75$var$ClassRule","classes","$7cbbe4e24ef3cb75$var$ClassSet","$7cbbe4e24ef3cb75$export$841858b892ce1f4c","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","$7cbbe4e24ef3cb75$var$ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","$7cbbe4e24ef3cb75$var$ChainRuleSet","$7cbbe4e24ef3cb75$export$5e6d09e6861162f6","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","$1a47b0c45c1c22fe$var$F2DOT14","$6uUbQ$Fixed","$1a47b0c45c1c22fe$var$RegionAxisCoordinates","startCoord","peakCoord","endCoord","$1a47b0c45c1c22fe$var$VariationRegionList","axisCount","regionCount","variationRegions","$1a47b0c45c1c22fe$var$DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","$6uUbQ$int8","regionIndexCount","deltas","concat","$1a47b0c45c1c22fe$var$ItemVariationData","itemCount","regionIndexes","deltaSets","$1a47b0c45c1c22fe$export$fe1b122a2710f241","variationRegionList","variationDataCount","itemVariationData","$1a47b0c45c1c22fe$var$ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","$1a47b0c45c1c22fe$var$ConditionSet","conditionCount","conditionTable","$1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","$1a47b0c45c1c22fe$var$FeatureTableSubstitution","substitutionCount","substitutions","$1a47b0c45c1c22fe$var$FeatureVariationRecord","conditionSet","featureTableSubstitution","$1a47b0c45c1c22fe$export$441b70b7971dd419","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","$b84fd3dd9d8eddb2$var$PredefinedOp","predefinedOps","index","$b84fd3dd9d8eddb2$var$CFFEncodingVersion","$6uUbQ$Number","$b84fd3dd9d8eddb2$var$Range1","first","nLeft","$b84fd3dd9d8eddb2$var$Range2","$b84fd3dd9d8eddb2$var$CFFCustomEncoding","nCodes","codes","nRanges","ranges","$b84fd3dd9d8eddb2$var$CFFEncoding","$b84fd3dd9d8eddb2$var$RangeArray","range","$b84fd3dd9d8eddb2$var$CFFCustomCharset","CharStrings","$b84fd3dd9d8eddb2$var$CFFCharset","$b84fd3dd9d8eddb2$var$FDRange3","fd","$b84fd3dd9d8eddb2$var$FDRange4","$b84fd3dd9d8eddb2$var$FDSelect","fds","sentinel","$b84fd3dd9d8eddb2$var$ptr","$b84fd3dd9d8eddb2$var$CFFPrivateOp","$b84fd3dd9d8eddb2$var$FontDict","$b84fd3dd9d8eddb2$var$CFFTopDict","$b84fd3dd9d8eddb2$var$VariationStore","itemVariationStore","$b84fd3dd9d8eddb2$var$CFF2TopDict","$b84fd3dd9d8eddb2$var$CFFTop","$6uUbQ$fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","$b84fd3dd9d8eddb2$export$2e2bcd8739ae039","$822ac0d589e4e237$var$CFFFont","top","isCIDFont","ROS","sid","fullName","FullName","familyName","FamilyName","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","FDSelect","low","high","mid","privateDictForGlyph","FDArray","Private","$822ac0d589e4e237$export$2e2bcd8739ae039","$2bbf2bc1ce37cd8f$var$VerticalOrigin","glyphIndex","vertOriginY","$2bbf2bc1ce37cd8f$export$2e2bcd8739ae039","defaultVertOriginY","numVertOriginYMetrics","$0941618dc22a946d$export$16b227cb15d716a0","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","$0941618dc22a946d$export$62c53e75f69bfe12","bearingX","bearingY","$0941618dc22a946d$var$EBDTComponent","xOffset","yOffset","$0941618dc22a946d$var$ByteAligned","$0941618dc22a946d$var$BitAligned","$0941618dc22a946d$export$f1f5ddeb20d14f","data","pad","numComponents","components","dataLen","$9911c4c7201c13de$var$SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","$9911c4c7201c13de$var$CodeOffsetPair","glyphCode","$9911c4c7201c13de$var$IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","$9911c4c7201c13de$var$IndexSubtableArray","subtable","$9911c4c7201c13de$var$BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","$9911c4c7201c13de$export$2e2bcd8739ae039","numSizes","$abb847051efd51b1$var$ImageTable","ppem","resolution","imageOffsets","$abb847051efd51b1$export$2e2bcd8739ae039","numImgTables","imageTables","$eb629188f3dfefdd$var$LayerRecord","paletteIndex","$eb629188f3dfefdd$var$BaseGlyphRecord","firstLayerIndex","numLayers","$eb629188f3dfefdd$export$2e2bcd8739ae039","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","$08734b8e7dc64587$var$ColorRecord","blue","green","red","alpha","$08734b8e7dc64587$export$2e2bcd8739ae039","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","$497cef411d884e34$var$BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","$497cef411d884e34$var$BaseValues","defaultIndex","baseCoordCount","baseCoords","$497cef411d884e34$var$FeatMinMaxRecord","minCoord","maxCoord","$497cef411d884e34$var$MinMax","featMinMaxCount","featMinMaxRecords","$497cef411d884e34$var$BaseLangSysRecord","minMax","$497cef411d884e34$var$BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","$497cef411d884e34$var$BaseScriptRecord","$497cef411d884e34$var$BaseScriptList","$497cef411d884e34$var$BaseTagList","$497cef411d884e34$var$Axis","baseTagList","baseScriptList","$497cef411d884e34$export$2e2bcd8739ae039","horizAxis","vertAxis","$cf5f33c63ef209e6$var$AttachPoint","$cf5f33c63ef209e6$var$AttachList","attachPoints","$cf5f33c63ef209e6$var$CaretValue","caretValuePoint","$cf5f33c63ef209e6$var$LigGlyph","$cf5f33c63ef209e6$var$LigCaretList","ligGlyphCount","ligGlyphs","$cf5f33c63ef209e6$var$MarkGlyphSetsDef","markSetTableFormat","markSetCount","$cf5f33c63ef209e6$export$2e2bcd8739ae039","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","$47e0e8ef515d9903$var$ValueFormat","$47e0e8ef515d9903$var$types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","rel","yPlaDevice","xAdvDevice","yAdvDevice","$47e0e8ef515d9903$var$ValueRecord","buildStruct","struct","$47e0e8ef515d9903$var$PairValueRecord","secondGlyph","value1","value2","$47e0e8ef515d9903$var$PairSet","$47e0e8ef515d9903$var$Class2Record","$47e0e8ef515d9903$var$Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","$47e0e8ef515d9903$var$EntryExitRecord","entryAnchor","exitAnchor","$47e0e8ef515d9903$var$MarkRecord","markAnchor","$47e0e8ef515d9903$var$MarkArray","$47e0e8ef515d9903$var$BaseRecord","classCount","$47e0e8ef515d9903$var$BaseArray","$47e0e8ef515d9903$var$ComponentRecord","$47e0e8ef515d9903$var$LigatureAttach","$47e0e8ef515d9903$var$LigatureArray","$47e0e8ef515d9903$export$73a8cfb19cd43a0f","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","$47e0e8ef515d9903$export$2e2bcd8739ae039","scriptList","featureList","lookupList","featureVariations","$d3f442064af66e06$var$Sequence","$d3f442064af66e06$var$AlternateSet","$d3f442064af66e06$var$Ligature","compCount","$d3f442064af66e06$var$LigatureSet","$d3f442064af66e06$var$GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","$d3f442064af66e06$export$2e2bcd8739ae039","$71cfb3c4767fbd0c$var$JstfGSUBModList","$71cfb3c4767fbd0c$var$JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","$71cfb3c4767fbd0c$var$JstfLangSys","$71cfb3c4767fbd0c$var$JstfLangSysRecord","jstfLangSys","$71cfb3c4767fbd0c$var$JstfScript","extenderGlyphs","langSysCount","$71cfb3c4767fbd0c$var$JstfScriptRecord","$71cfb3c4767fbd0c$export$2e2bcd8739ae039","scriptCount","$d059a6bd2d3b5b63$var$VariableSizeNumber","readUInt24BE","_size","$d059a6bd2d3b5b63$var$MapDataEntry","entry","entryFormat","outerIndex","innerIndex","$d059a6bd2d3b5b63$var$DeltaSetIndexMap","mapCount","mapData","$d059a6bd2d3b5b63$export$2e2bcd8739ae039","advanceWidthMapping","LSBMapping","RSBMapping","$dceeca3e1977ce30$var$Signature","$dceeca3e1977ce30$var$SignatureBlock","cbSignature","signature","$dceeca3e1977ce30$export$2e2bcd8739ae039","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","$8acd740a9435aad0$var$GaspRange","rangeMaxPPEM","rangeGaspBehavior","$8acd740a9435aad0$export$2e2bcd8739ae039","numRanges","gaspRanges","$b5f380243c34d6a0$var$DeviceRecord","pixelSize","maximumWidth","widths","$b5f380243c34d6a0$export$2e2bcd8739ae039","sizeDeviceRecord","$ca2df1256966e313$var$KernPair","left","right","$ca2df1256966e313$var$ClassTable","firstGlyph","nGlyphs","$ca2df1256966e313$var$Kern2Array","off","leftTable","rowWidth","$ca2df1256966e313$var$KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","$ca2df1256966e313$var$KernTable","subVersion","padding","tupleIndex","$ca2df1256966e313$export$2e2bcd8739ae039","nTables","$7a9f92b0c46ebe33$export$2e2bcd8739ae039","yPels","$2b2ccc419d152631$export$2e2bcd8739ae039","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","$ca5b40b9bcda9c9b$var$Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","$ca5b40b9bcda9c9b$var$vTable","yPelHeight","$ca5b40b9bcda9c9b$var$VdmxGroup","recs","startsz","endsz","entries","$ca5b40b9bcda9c9b$export$2e2bcd8739ae039","numRecs","numRatios","ratioRanges","$69530a3c40755af0$export$2e2bcd8739ae039","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","$344073dd270f0e62$var$VmtxEntry","$344073dd270f0e62$export$2e2bcd8739ae039","vhea","$3793b781918cfced$var$shortFrac","$3793b781918cfced$var$Correspondence","fromCoord","toCoord","$3793b781918cfced$var$Segment","pairCount","correspondence","$3793b781918cfced$export$2e2bcd8739ae039","segment","$6cb7dd5f47d82580$var$UnboundedArrayAccessor","getItem","_items","base","inspect","name","$6cb7dd5f47d82580$export$c5af1eebc882e39a","$6cb7dd5f47d82580$export$8351f8c2ae2f103c","ValueType","Shadow","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","$6cb7dd5f47d82580$export$79f7d93d790934ba","entryData","assign","newState","Entry","StateArray","nClasses","StateHeader","classTable","stateArray","entryTable","$6cb7dd5f47d82580$export$105027425199cc51","ClassLookupTable","newStateOffset","StateHeader1","$6a3746e8c708f5a3$var$BslnSubtable","mappingData","standardGlyph","controlPoints","$6a3746e8c708f5a3$export$2e2bcd8739ae039","defaultBaseline","$d0c76fac617b308a$var$Setting","setting","fontFeatures","$d0c76fac617b308a$var$FeatureName","nSettings","settingTable","featureFlags","defaultSetting","$d0c76fac617b308a$export$2e2bcd8739ae039","featureNameCount","reserved1","reserved2","featureNames","$e83fd065f00fcd01$var$Axis","axisTag","minValue","defaultValue","maxValue","$e83fd065f00fcd01$var$Instance","coord","postscriptNameID","instanceSize","$e83fd065f00fcd01$export$2e2bcd8739ae039","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","$dbe33c8d3a7f131c$var$shortFrac","$dbe33c8d3a7f131c$var$Offset","$dbe33c8d3a7f131c$var$gvar","globalCoordCount","globalCoords","$dbe33c8d3a7f131c$export$2e2bcd8739ae039","$05b01887df96c4ee$var$ClassTable","subFeatureFlags","stateTable","$05b01887df96c4ee$var$WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","$05b01887df96c4ee$var$WidthDeltaCluster","$05b01887df96c4ee$var$ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","$05b01887df96c4ee$var$Action","actionClass","actionType","actionLength","actionData","$05b01887df96c4ee$var$PostcompensationAction","$05b01887df96c4ee$var$PostCompensationTable","lookupTable","$05b01887df96c4ee$var$JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","$05b01887df96c4ee$export$2e2bcd8739ae039","horizontal","vertical","$03ee6ebd54db1053$var$LigatureData","action","$03ee6ebd54db1053$var$ContextualData","markIndex","currentIndex","$03ee6ebd54db1053$var$InsertionData","currentInsertIndex","markedInsertIndex","$03ee6ebd54db1053$var$SubstitutionTable","items","$03ee6ebd54db1053$var$SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","$03ee6ebd54db1053$var$Subtable","$03ee6ebd54db1053$var$FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","$03ee6ebd54db1053$var$MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","$03ee6ebd54db1053$export$2e2bcd8739ae039","unused","nChains","chains","$b7492a80b0d1a056$var$OpticalBounds","bottom","$b7492a80b0d1a056$export$2e2bcd8739ae039","$c3395722bea751e2$var$tables","$c3395722bea751e2$export$2e2bcd8739ae039","cmap","head","hmtx","post","fpgm","loca","prep","glyf","VORG","EBLC","CBLC","sbix","COLR","CPAL","BASE","GDEF","GPOS","GSUB","JSTF","HVAR","DSIG","gasp","hdmx","kern","LTSH","PCLT","VDMX","vmtx","avar","bsln","feat","fvar","gvar","just","morx","opbd","$816c07a04b6dba87$var$TableEntry","checkSum","$816c07a04b6dba87$var$Directory","numTables","$6uUbQ$VoidPointer","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","$816c07a04b6dba87$export$2e2bcd8739ae039","$12727730ddfc8bfe$export$2e0ae67339d5f1ac","cmp","min","$12727730ddfc8bfe$export$d02631cccf789723","range1","$12727730ddfc8bfe$export$3d28c1996ced1f14","$12727730ddfc8bfe$var$CHARS","$12727730ddfc8bfe$var$LOOKUP","$12727730ddfc8bfe$export$94fdf11bafc8de6b","base64","bufferLength","bytes","p","encoded1","encoded2","encoded3","encoded4","$f08dd41ef10b694c$export$2e2bcd8739ae039","findSubtable","cmapTable","lookup","codepoint","variationSelector","getVariationSelector","rangeOffset","group","uvs","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","codePointsForGlyph","delta","c","g","$0bba3a9db57637f3$export$2e2bcd8739ae039","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","$0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","$f34600ab9d7f70d8$export$2e2bcd8739ae039","addPoint","y","abs","Infinity","$130d1a642ebcd2b7$var$UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS","$130d1a642ebcd2b7$export$b32f0b5f69d65e51","script1","$130d1a642ebcd2b7$export$ce50e82f12a827a4","$130d1a642ebcd2b7$export$e5cb25e204fb8450","idx","code","next","script2","$130d1a642ebcd2b7$export$16fab0757cfc223d","script3","$130d1a642ebcd2b7$var$RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54","script4","$be07b3e97a42687a$export$2e2bcd8739ae039","advanceWidth","advanceHeight","bbox","direction","$1ac75d9a55b67f01$export$2e2bcd8739ae039","$3b6302b64eccc32c$var$features","allTypographicFeatures","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","$3b6302b64eccc32c$var$feature","selector","$3b6302b64eccc32c$var$OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","slice","$3b6302b64eccc32c$var$AATMapping","ot","aat","$3b6302b64eccc32c$export$b813f7d2a1677c16","features1","r","$3b6302b64eccc32c$var$mapFeatureStrings","f","isNaN","typeCode","settingCode","$3b6302b64eccc32c$export$bd6df347a4f391c4","features2","feature1","keys","$ff5ce077dae0f144$export$2e2bcd8739ae039","seg","glyphsForValue","classValue","segment1","$50c7aac9316f2948$var$START_OF_TEXT_STATE","$50c7aac9316f2948$var$START_OF_LINE_STATE","$50c7aac9316f2948$var$END_OF_TEXT_CLASS","$50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS","$50c7aac9316f2948$var$DELETED_GLYPH_CLASS","$50c7aac9316f2948$var$END_OF_LINE_CLASS","$50c7aac9316f2948$var$DONT_ADVANCE","$50c7aac9316f2948$export$2e2bcd8739ae039","reverse","processEntry","currentState","dir","classCode","shouldAdvance","row","entryIndex","traverse","opts","state","visited","add","enter","exit","$55f71433a605c87d$var$MARK_FIRST","$55f71433a605c87d$var$MARK_LAST","$55f71433a605c87d$var$VERB","$55f71433a605c87d$var$SET_MARK","$55f71433a605c87d$var$SET_COMPONENT","$55f71433a605c87d$var$PERFORM_ACTION","$55f71433a605c87d$var$LAST_MASK","$55f71433a605c87d$var$STORE_MASK","$55f71433a605c87d$var$OFFSET_MASK","$55f71433a605c87d$var$VERTICAL_ONLY","$55f71433a605c87d$var$REVERSE_DIRECTION","$55f71433a605c87d$var$HORIZONTAL_AND_VERTICAL","$55f71433a605c87d$var$CURRENT_IS_KASHIDA_LIKE","$55f71433a605c87d$var$MARKED_IS_KASHIDA_LIKE","$55f71433a605c87d$var$CURRENT_INSERT_BEFORE","$55f71433a605c87d$var$MARKED_INSERT_BEFORE","$55f71433a605c87d$var$CURRENT_INSERT_COUNT","$55f71433a605c87d$var$MARKED_INSERT_COUNT","$55f71433a605c87d$export$2e2bcd8739ae039","chain","processSubtable","splice","processNoncontextualSubstitutions","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","processIndicRearragement","processContextualSubstitution","processLigature","processGlyphInsertion","$55f71433a605c87d$var$reorderGlyphs","subsitutions","getGlyph","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","componentGlyph","unshift","store","component","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","insertions","getSupportedFeatures","generateInputs","inputCache","generateInputCache","generateInputsForSubtable","stack","g1","found","bind","$55f71433a605c87d$var$swap","rangeA","rangeB","reverseA","reverseB","verb","$ba6dd74203be8728$export$2e2bcd8739ae039","glyphRun","morxProcessor","getAvailableFeatures","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","String","fromCodePoint","fallbackPosition","$94d7a73bd2edfc9a$export$2e2bcd8739ae039","_addFeatures","global","stageIndex","stages","stage","allFeatures","globalFeatures","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","$649970d87335b30f$var$VARIATION_FEATURES","$649970d87335b30f$var$COMMON_FEATURES","$649970d87335b30f$var$FRACTIONAL_FEATURES","$649970d87335b30f$var$HORIZONTAL_FEATURES","$649970d87335b30f$var$VERTICAL_FEATURES","$649970d87335b30f$var$DIRECTIONAL_FEATURES","ltr","rtl","$649970d87335b30f$export$2e2bcd8739ae039","plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","$764eb544bbe1ccf0$var$trie","$764eb544bbe1ccf0$var$FEATURES","$764eb544bbe1ccf0$var$ShapingClasses","Non_Joining","Left_Joining","Right_Joining","Dual_Joining","Join_Causing","ALAPH","Transparent","$764eb544bbe1ccf0$var$ISOL","$764eb544bbe1ccf0$var$FINA","$764eb544bbe1ccf0$var$FIN2","$764eb544bbe1ccf0$var$FIN3","$764eb544bbe1ccf0$var$MEDI","$764eb544bbe1ccf0$var$MED2","$764eb544bbe1ccf0$var$INIT","$764eb544bbe1ccf0$var$NONE","$764eb544bbe1ccf0$var$STATE_TABLE","$764eb544bbe1ccf0$export$2e2bcd8739ae039","prev","curAction","prevAction","$764eb544bbe1ccf0$var$getShapingClass","category","$85d408632270248b$export$2e2bcd8739ae039","reset","cur","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","peek","increment","peekIndex","$a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS","$a83b9c36aaa94fd3$export$2e2bcd8739ae039","findScript","selectScript","changed","scriptTag","repeat","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookups","lookupIndex","sort","variationsIndex","substitution","findVariationsIndex","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","currentFeature","applyLookup","applyLookupList","lookupRecord","coverageIndex","match","sequence","matched","sequenceMatches","sequenceMatchIndices","coverageSequenceMatches","getClassID","classSequenceMatches","classID","applyContext","rule","rule1","applyChainingContext","rules","rule2","_variationProcessor","normalizedCoords","ligatureID","$10e7b257e1a9a756$export$2e2bcd8739ae039","_id","substituted","_font","prototype","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","isMultiplied","$e1c6bbc8cb416f8c$export$2e2bcd8739ae039","$e1c6bbc8cb416f8c$var$getType","$e1c6bbc8cb416f8c$var$STATE_TABLE","$e1c6bbc8cb416f8c$var$DECOMPOSE","hasGlyphForCodePoint","$e1c6bbc8cb416f8c$var$decompose","$e1c6bbc8cb416f8c$var$COMPOSE","$e1c6bbc8cb416f8c$var$compose","$e1c6bbc8cb416f8c$var$TONE_MARK","$e1c6bbc8cb416f8c$var$reorderToneMark","$e1c6bbc8cb416f8c$var$INVALID","$e1c6bbc8cb416f8c$var$insertDottedCircle","$e1c6bbc8cb416f8c$var$HANGUL_BASE","$e1c6bbc8cb416f8c$var$HANGUL_END","$e1c6bbc8cb416f8c$var$HANGUL_COUNT","$e1c6bbc8cb416f8c$var$L_BASE","$e1c6bbc8cb416f8c$var$V_BASE","$e1c6bbc8cb416f8c$var$T_BASE","$e1c6bbc8cb416f8c$var$L_COUNT","$e1c6bbc8cb416f8c$var$V_COUNT","$e1c6bbc8cb416f8c$var$T_COUNT","$e1c6bbc8cb416f8c$var$L_END","$e1c6bbc8cb416f8c$var$V_END","$e1c6bbc8cb416f8c$var$T_END","$e1c6bbc8cb416f8c$var$DOTTED_CIRCLE","$e1c6bbc8cb416f8c$var$isL","$e1c6bbc8cb416f8c$var$isV","$e1c6bbc8cb416f8c$var$isT","$e1c6bbc8cb416f8c$var$isTone","$e1c6bbc8cb416f8c$var$isLVT","$e1c6bbc8cb416f8c$var$isLV","$e1c6bbc8cb416f8c$var$isCombiningL","$e1c6bbc8cb416f8c$var$isCombiningV","$e1c6bbc8cb416f8c$var$isCombiningT","$e1c6bbc8cb416f8c$var$X","$e1c6bbc8cb416f8c$var$L","$e1c6bbc8cb416f8c$var$V","$e1c6bbc8cb416f8c$var$T","$e1c6bbc8cb416f8c$var$LV","$e1c6bbc8cb416f8c$var$LVT","$e1c6bbc8cb416f8c$var$M","$e1c6bbc8cb416f8c$var$NO_ACTION","$e1c6bbc8cb416f8c$var$getGlyph","glyphForCodePoint","l","v","ljmo","vjmo","insert","tjmo","prevType","lv","del","$e1c6bbc8cb416f8c$var$getLength","dottedCircle","$4b0735ca6c692ea5$exports","JSON","parse","$aa333a9607471296$exports","$90a9d3398ee54fe5$export$a513ea61a7bee91c","X","C","V","N","H","ZWNJ","ZWJ","M","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","Symbol","$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","$90a9d3398ee54fe5$export$8519deaa7de2b07","$90a9d3398ee54fe5$export$bbcd928767338e0d","$90a9d3398ee54fe5$export$ca9599b2a300afc","$90a9d3398ee54fe5$export$e99d119da76a0fc5","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","$90a9d3398ee54fe5$export$f647c9cfdd77d95a","decompositions","$7826f90f6f0cecc9$var$decompositions","$7826f90f6f0cecc9$var$trie","$7826f90f6f0cecc9$var$stateMachine","$7826f90f6f0cecc9$export$2e2bcd8739ae039","$7826f90f6f0cecc9$var$setupSyllables","$7826f90f6f0cecc9$var$initialReordering","$7826f90f6f0cecc9$var$finalReordering","unicodeScript","indicConfig","isOldSpec","d","decomposed","$7826f90f6f0cecc9$var$indicCategory","$7826f90f6f0cecc9$var$indicPosition","$7826f90f6f0cecc9$var$IndicInfo","syllableType","syllable","tags","$7826f90f6f0cecc9$var$isConsonant","$7826f90f6f0cecc9$var$isJoiner","$7826f90f6f0cecc9$var$isHalantOrCoeng","$7826f90f6f0cecc9$var$wouldSubstitute","_layoutEngine","engine","GSUBProcessor","$7826f90f6f0cecc9$var$consonantPosition","consonant","info","$7826f90f6f0cecc9$var$nextSyllable","limit","hasReph","rphf","seenBelow","i2","j","disallowDoubleHalants","lastPos","i3","i4","i5","i6","blwf","i7","i8","abvf","pstf","prefLen","pref","i9","cfar","i10","nonJoiner","tryPref","BASE_C","newPos","oldPos","tmp","newRephPos","reph","test","categories","$7ab494fe977143c6$var$categories","$7ab494fe977143c6$var$decompositions","$7ab494fe977143c6$var$trie","$7ab494fe977143c6$var$stateMachine","$7ab494fe977143c6$export$2e2bcd8739ae039","$7ab494fe977143c6$var$setupSyllables","$7ab494fe977143c6$var$clearSubstitutionFlags","$7ab494fe977143c6$var$recordRphf","$7ab494fe977143c6$var$recordPref","$7ab494fe977143c6$var$reorder","$7ab494fe977143c6$var$useCategory","$7ab494fe977143c6$var$USEInfo","$7ab494fe977143c6$var$nextSyllable","$7ab494fe977143c6$var$isBase","$7ab494fe977143c6$var$isHalant","$102b6fe50f1d50b4$var$SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","$102b6fe50f1d50b4$export$7877a478dd30fd3d","shaper","$0a876c45f1f7c41c$export$2e2bcd8739ae039","curGlyph","replacement","undefined","USER_INDEX","ligature","characters","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","$c96c93587d49c14d$export$2e2bcd8739ae039","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","class1","class2","pair1","nextIndex","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","mark1Index","prevIndex","good","mark2Index","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","k1","$a62492810de27e3d$export$2e2bcd8739ae039","setup","glyphInfos","GPOSProcessor","glyphInfo","zeroMarkWidths","zeroMarkAdvances","cleanup","$4c0a7fa5df7a9ab1$export$2e2bcd8739ae039","layout","glyphsForString","hideDefaultIgnorables","positioned","unicodeLayoutEngine","kernProcessor","space","isDefaultIgnorable","ch","plane","from","$f43aec954cdfdf21$var$SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","$f43aec954cdfdf21$export$2e2bcd8739ae039","toFunction","commands","forEach","command","toSVG","cmds","round","join","_cbox","command1","freeze","_bbox","cx","cy","p0","p1","p2","p3","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","b2ac","t1","sqrt","t2","mapPoints","path","transform","m0","m1","m2","m3","m4","m5","tx","ty","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","$f92906be28e61769$export$2e2bcd8739ae039","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","leftBearing","topBearing","os2","getAdvanceAdjustment","getScaledPath","ligatureCaretPositions","_getName","fromCharCode","render","save","fill","restore","$69aac16029968692$var$GlyfHeader","numberOfContours","$69aac16029968692$var$ON_CURVE","$69aac16029968692$var$X_SHORT_VECTOR","$69aac16029968692$var$Y_SHORT_VECTOR","$69aac16029968692$var$REPEAT","$69aac16029968692$var$SAME_X","$69aac16029968692$var$SAME_Y","$69aac16029968692$var$ARG_1_AND_2_ARE_WORDS","$69aac16029968692$var$ARGS_ARE_XY_VALUES","$69aac16029968692$var$ROUND_XY_TO_GRID","$69aac16029968692$var$WE_HAVE_A_SCALE","$69aac16029968692$var$MORE_COMPONENTS","$69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE","$69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO","$69aac16029968692$var$WE_HAVE_INSTRUCTIONS","$69aac16029968692$var$USE_MY_METRICS","$69aac16029968692$var$OVERLAP_COMPOUND","$69aac16029968692$var$SCALED_COMPONENT_OFFSET","$69aac16029968692$var$UNSCALED_COMPONENT_OFFSET","$69aac16029968692$export$baf26146a414f24a","onCurve","endContour","$69aac16029968692$var$Component","dx","dy","scale01","scale10","$69aac16029968692$export$2e2bcd8739ae039","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","nextPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","contours","contour","directory","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","$62cc5109c6101893$export$2e2bcd8739ae039","CFF2","bias","cff","trans","nStems","x1","y1","usedGsubrs","usedSubrs","open","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","subr","phase","c1x","c1y","c2x","c2y","e","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","n","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","$25d8f049c222084c$var$SBIXImage","originX","originY","buflen","$25d8f049c222084c$export$2e2bcd8739ae039","getImageForSize","img","image","renderOutlines","$0d411f0165859681$var$COLRLayer","color","$0d411f0165859681$export$2e2bcd8739ae039","layers","layer","cpal","colr","rec","baseLayer","_getBaseGlyph","fillColor","$0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS","$0bb840cac04e911b$var$TUPLE_COUNT_MASK","$0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD","$0bb840cac04e911b$var$INTERMEDIATE_TUPLE","$0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS","$0bb840cac04e911b$var$TUPLE_INDEX_MASK","$0bb840cac04e911b$var$POINTS_ARE_WORDS","$0bb840cac04e911b$var$POINT_RUN_COUNT_MASK","$0bb840cac04e911b$var$DELTAS_ARE_ZERO","$0bb840cac04e911b$var$DELTAS_ARE_WORDS","$0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK","$0bb840cac04e911b$export$2e2bcd8739ae039","normalizeCoords","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","endCoords","a1","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","out","ref","itemStore","varData","deltaSet","netAdjustment","master","blendVectors","scalar","regionIndex","axes","axisScalar","$5cc7476da92df375$var$resolved","Promise","resolve","$5cc7476da92df375$export$2e2bcd8739ae039","includeGlyph","$807e58506be70005$var$ON_CURVE","$807e58506be70005$var$X_SHORT_VECTOR","$807e58506be70005$var$Y_SHORT_VECTOR","$807e58506be70005$var$REPEAT","$807e58506be70005$var$SAME_X","$807e58506be70005$var$SAME_Y","$807e58506be70005$var$Point","$807e58506be70005$var$Glyf","xPoints","yPoints","$807e58506be70005$export$2e2bcd8739ae039","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","$6uUbQ$EncodeStream","shortFlag","sameFlag","diff","$4abbb6a5dbdc441a$export$2e2bcd8739ae039","_addGlyph","curOffset","nextOffset","view","DataView","setUint16","glyphEncoder","toBuffer","$001d739428a71d5a$export$2e2bcd8739ae039","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","fd_select","FontName","createCIDFontdict","addString","Encoding","CIDCount","$4c1709dee528ea76$export$2e2bcd8739ae039","setDefaultLanguage","defaultLanguage","_getTable","_tables","_decodeTable","console","error","_decodeDirectory","getName","subfamilyName","copyright","characterSet","nextState","availableFeatures","_glyphs","createSubset","variationAxes","trim","default","namedVariations","settings","getVariation","$6uUbQ$DecodeStream","_directoryPos","variationCoords","$c1726355ecc5b889$var$WOFFDirectoryEntry","compLength","origChecksum","$c1726355ecc5b889$var$WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","tables1","$c1726355ecc5b889$export$2e2bcd8739ae039","$760785214b9fc52c$export$2e2bcd8739ae039","outBuffer","buf","$8046190c9f1ad19e$export$2e2bcd8739ae039","_transformedGlyphs","$c28ec7bbb3b8de3a$var$Base128","$c28ec7bbb3b8de3a$var$knownTags","$c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry","customTag","transformVersion","transformed","transformLength","$c28ec7bbb3b8de3a$var$WOFF2Directory","totalCompressedSize","$c28ec7bbb3b8de3a$export$2e2bcd8739ae039","$21ee218f84ac7f32$export$2e2bcd8739ae039","_dataPos","_decompress","_decompressed","decompressedSize","decompressed","_transformGlyfTable","$21ee218f84ac7f32$var$GlyfTable","nContours","totalPoints","r1","$21ee218f84ac7f32$var$read255UInt16","$21ee218f84ac7f32$var$decodeTriplet","instructionSize","composites","$21ee218f84ac7f32$var$Substream","_buf","indexFormat","nContourStreamSize","nPointsStreamSize","flagStreamSize","glyphStreamSize","compositeStreamSize","bboxStreamSize","instructionStreamSize","bboxes","$21ee218f84ac7f32$var$WORD_CODE","$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2","$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1","$21ee218f84ac7f32$var$LOWEST_U_CODE","$21ee218f84ac7f32$var$withSign","baseval","b0","b2","$cd5853a56c68fec7$var$TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","$cd5853a56c68fec7$export$2e2bcd8739ae039","fonts","readString","$05f49f930186144e$var$DFontName","$05f49f930186144e$var$DFontData","$05f49f930186144e$var$Ref","nameOffset","attr","dataOffset","handle","$05f49f930186144e$var$Type","maxTypeIndex","refList","$05f49f930186144e$var$TypeList","types","$05f49f930186144e$var$DFontMap","typeList","nameListOffset","$05f49f930186144e$var$DFontHeader","dataLength","mapLength","$05f49f930186144e$export$2e2bcd8739ae039","sfnt"],"sources":["E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\base.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\decorators.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\cmap.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\head.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\hhea.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\hmtx.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\maxp.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\encodings.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\name.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\OS2.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\post.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\cvt.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\fpgm.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\loca.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\prep.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\glyf.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFIndex.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFOperand.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFDict.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFPointer.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFPrivateDict.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFStandardStrings.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFEncodings.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFCharsets.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\opentype.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\variations.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFTop.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\cff\\CFFFont.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\VORG.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\EBDT.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\EBLC.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\sbix.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\COLR.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\CPAL.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\BASE.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\GDEF.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\GPOS.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\GSUB.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\JSTF.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\HVAR.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\DSIG.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\gasp.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\hdmx.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\kern.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\LTSH.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\PCLT.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\VDMX.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\vhea.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\vmtx.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\avar.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\aat.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\bsln.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\feat.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\fvar.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\gvar.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\just.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\morx.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\opbd.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\index.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\directory.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\utils.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\CmapProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\layout\\KernProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\layout\\UnicodeLayoutEngine.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\BBox.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\layout\\Script.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\layout\\GlyphRun.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\layout\\GlyphPosition.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\aat\\AATFeatureMap.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\aat\\AATLookupTable.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\aat\\AATStateMachine.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\aat\\AATMorxProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\aat\\AATLayoutEngine.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\ShapingPlan.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\DefaultShaper.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\ArabicShaper.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\GlyphIterator.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\OTProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\GlyphInfo.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\HangulShaper.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\indic.json","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\use.json","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\indic-data.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\IndicShaper.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\UniversalShaper.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\shapers\\index.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\GSUBProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\GPOSProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\opentype\\OTLayoutEngine.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\layout\\LayoutEngine.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\Path.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\StandardNames.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\Glyph.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\TTFGlyph.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\CFFGlyph.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\SBIXGlyph.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\COLRGlyph.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\GlyphVariationProcessor.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\subset\\Subset.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\TTFGlyphEncoder.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\subset\\TTFSubset.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\subset\\CFFSubset.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\TTFFont.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\WOFFDirectory.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\WOFFFont.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\glyph\\WOFF2Glyph.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\tables\\WOFF2Directory.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\WOFF2Font.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\TrueTypeCollection.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\DFont.js","E:\\Mern login\\client\\node_modules\\fontkit\\dist\\src\\index.js"],"sourcesContent":["import {DecodeStream} from 'restructure';\n\nexport let logErrors = false;\n\nlet formats = [];\nexport function registerFormat(format) {\n  formats.push(format);\n};\n\nexport function create(buffer, postscriptName) {\n  for (let i = 0; i < formats.length; i++) {\n    let format = formats[i];\n    if (format.probe(buffer)) {\n      let font = new format(new DecodeStream(buffer));\n      if (postscriptName) {\n        return font.getFont(postscriptName);\n      }\n\n      return font;\n    }\n  }\n\n  throw new Error('Unknown font format');\n};\n\nexport let defaultLanguage = 'en';\nexport function setDefaultLanguage(lang = 'en') {\n  defaultLanguage = lang;\n};\n","/**\n * This decorator caches the results of a getter or method such that\n * the results are lazily computed once, and then cached.\n * @private\n */\nexport function cache(target, key, descriptor) {\n  if (descriptor.get) {\n    let get = descriptor.get;\n    descriptor.get = function() {\n      let value = get.call(this);\n      Object.defineProperty(this, key, { value });\n      return value;\n    };\n  } else if (typeof descriptor.value === 'function') {\n    let fn = descriptor.value;\n\n    return {\n      get() {\n        let cache = new Map;\n        function memoized(...args) {\n          let key = args.length > 0 ? args[0] : 'value';\n          if (cache.has(key)) {\n            return cache.get(key);\n          }\n\n          let result = fn.apply(this, args);\n          cache.set(key, result);\n          return result;\n        };\n\n        Object.defineProperty(this, key, {value: memoized});\n        return memoized;\n      }\n    };\n  }\n}\n","import * as r from 'restructure';\n\nlet SubHeader = new r.Struct({\n  firstCode:      r.uint16,\n  entryCount:     r.uint16,\n  idDelta:        r.int16,\n  idRangeOffset:  r.uint16\n});\n\nlet CmapGroup = new r.Struct({\n  startCharCode:  r.uint32,\n  endCharCode:    r.uint32,\n  glyphID:        r.uint32\n});\n\nlet UnicodeValueRange = new r.Struct({\n  startUnicodeValue:  r.uint24,\n  additionalCount:    r.uint8\n});\n\nlet UVSMapping = new r.Struct({\n  unicodeValue: r.uint24,\n  glyphID:      r.uint16\n});\n\nlet DefaultUVS = new r.Array(UnicodeValueRange, r.uint32);\nlet NonDefaultUVS = new r.Array(UVSMapping, r.uint32);\n\nlet VarSelectorRecord = new r.Struct({\n  varSelector:    r.uint24,\n  defaultUVS:     new r.Pointer(r.uint32, DefaultUVS, {type: 'parent'}),\n  nonDefaultUVS:  new r.Pointer(r.uint32, NonDefaultUVS, {type: 'parent'})\n});\n\nlet CmapSubtable = new r.VersionedStruct(r.uint16, {\n  0: { // Byte encoding\n    length:     r.uint16,   // Total table length in bytes (set to 262 for format 0)\n    language:   r.uint16,   // Language code for this encoding subtable, or zero if language-independent\n    codeMap:    new r.LazyArray(r.uint8, 256)\n  },\n\n  2: { // High-byte mapping (CJK)\n    length:           r.uint16,\n    language:         r.uint16,\n    subHeaderKeys:    new r.Array(r.uint16, 256),\n    subHeaderCount:   t => Math.max.apply(Math, t.subHeaderKeys),\n    subHeaders:       new r.LazyArray(SubHeader, 'subHeaderCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, 'subHeaderCount')\n  },\n\n  4: { // Segment mapping to delta values\n    length:           r.uint16,              // Total table length in bytes\n    language:         r.uint16,              // Language code\n    segCountX2:       r.uint16,\n    segCount:         t => t.segCountX2 >> 1,\n    searchRange:      r.uint16,\n    entrySelector:    r.uint16,\n    rangeShift:       r.uint16,\n    endCode:          new r.LazyArray(r.uint16, 'segCount'),\n    reservedPad:      new r.Reserved(r.uint16),       // This value should be zero\n    startCode:        new r.LazyArray(r.uint16, 'segCount'),\n    idDelta:          new r.LazyArray(r.int16, 'segCount'),\n    idRangeOffset:    new r.LazyArray(r.uint16, 'segCount'),\n    glyphIndexArray:  new r.LazyArray(r.uint16, t => (t.length - t._currentOffset) / 2)\n  },\n\n  6: { // Trimmed table\n    length:         r.uint16,\n    language:       r.uint16,\n    firstCode:      r.uint16,\n    entryCount:     r.uint16,\n    glyphIndices:   new r.LazyArray(r.uint16, 'entryCount')\n  },\n\n  8: { // mixed 16-bit and 32-bit coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint16,\n    is32:     new r.LazyArray(r.uint8, 8192),\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  10: { // Trimmed Array\n    reserved:       new r.Reserved(r.uint16),\n    length:         r.uint32,\n    language:       r.uint32,\n    firstCode:      r.uint32,\n    entryCount:     r.uint32,\n    glyphIndices:   new r.LazyArray(r.uint16, 'numChars')\n  },\n\n  12: { // Segmented coverage\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  13: { // Many-to-one range mappings (same as 12 except for group.startGlyphID)\n    reserved: new r.Reserved(r.uint16),\n    length:   r.uint32,\n    language: r.uint32,\n    nGroups:  r.uint32,\n    groups:   new r.LazyArray(CmapGroup, 'nGroups')\n  },\n\n  14: { // Unicode Variation Sequences\n    length:       r.uint32,\n    numRecords:   r.uint32,\n    varSelectors: new r.LazyArray(VarSelectorRecord, 'numRecords')\n  }\n});\n\nlet CmapEntry = new r.Struct({\n  platformID:  r.uint16,  // Platform identifier\n  encodingID:  r.uint16,  // Platform-specific encoding identifier\n  table:       new r.Pointer(r.uint32, CmapSubtable, {type: 'parent', lazy: true})\n});\n\n// character to glyph mapping\nexport default new r.Struct({\n  version:      r.uint16,\n  numSubtables: r.uint16,\n  tables:       new r.Array(CmapEntry, 'numSubtables')\n});\n","import * as r from 'restructure';\n\n// font header\nexport default new r.Struct({\n  version:            r.int32,                   // 0x00010000 (version 1.0)\n  revision:           r.int32,                   // set by font manufacturer\n  checkSumAdjustment: r.uint32,\n  magicNumber:        r.uint32,                  // set to 0x5F0F3CF5\n  flags:              r.uint16,\n  unitsPerEm:         r.uint16,                  // range from 64 to 16384\n  created:            new r.Array(r.int32, 2),\n  modified:           new r.Array(r.int32, 2),\n  xMin:               r.int16,                   // for all glyph bounding boxes\n  yMin:               r.int16,                   // for all glyph bounding boxes\n  xMax:               r.int16,                   // for all glyph bounding boxes\n  yMax:               r.int16,                   // for all glyph bounding boxes\n  macStyle:           new r.Bitfield(r.uint16, [\n    'bold', 'italic', 'underline', 'outline',\n    'shadow', 'condensed', 'extended'\n  ]),\n  lowestRecPPEM:      r.uint16,                  // smallest readable size in pixels\n  fontDirectionHint:  r.int16,\n  indexToLocFormat:   r.int16,                   // 0 for short offsets, 1 for long\n  glyphDataFormat:    r.int16                    // 0 for current format\n});\n","import * as r from 'restructure';\n\n// horizontal header\nexport default new r.Struct({\n  version:              r.int32,\n  ascent:               r.int16,   // Distance from baseline of highest ascender\n  descent:              r.int16,   // Distance from baseline of lowest descender\n  lineGap:              r.int16,   // Typographic line gap\n  advanceWidthMax:      r.uint16,  // Maximum advance width value in 'hmtx' table\n  minLeftSideBearing:   r.int16,   // Maximum advance width value in 'hmtx' table\n  minRightSideBearing:  r.int16,   // Minimum right sidebearing value\n  xMaxExtent:           r.int16,\n  caretSlopeRise:       r.int16,   // Used to calculate the slope of the cursor (rise/run); 1 for vertical\n  caretSlopeRun:        r.int16,   // 0 for vertical\n  caretOffset:          r.int16,   // Set to 0 for non-slanted fonts\n  reserved:             new r.Reserved(r.int16, 4),\n  metricDataFormat:     r.int16,   // 0 for current format\n  numberOfMetrics:      r.uint16   // Number of advance widths in 'hmtx' table\n});\n","import * as r from 'restructure';\n\nlet HmtxEntry = new r.Struct({\n  advance: r.uint16,\n  bearing: r.int16\n});\n\nexport default new r.Struct({\n  metrics:    new r.LazyArray(HmtxEntry, t => t.parent.hhea.numberOfMetrics),\n  bearings:   new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n","import * as r from 'restructure';\n\n// maxiumum profile\nexport default new r.Struct({\n  version:                r.int32,\n  numGlyphs:              r.uint16,  // The number of glyphs in the font\n  maxPoints:              r.uint16,  // Maximum points in a non-composite glyph\n  maxContours:            r.uint16,  // Maximum contours in a non-composite glyph\n  maxComponentPoints:     r.uint16,  // Maximum points in a composite glyph\n  maxComponentContours:   r.uint16,  // Maximum contours in a composite glyph\n  maxZones:               r.uint16,  // 1 if instructions do not use the twilight zone, 2 otherwise\n  maxTwilightPoints:      r.uint16,  // Maximum points used in Z0\n  maxStorage:             r.uint16,  // Number of Storage Area locations\n  maxFunctionDefs:        r.uint16,  // Number of FDEFs\n  maxInstructionDefs:     r.uint16,  // Number of IDEFs\n  maxStackElements:       r.uint16,  // Maximum stack depth\n  maxSizeOfInstructions:  r.uint16,  // Maximum byte count for glyph instructions\n  maxComponentElements:   r.uint16,  // Maximum number of components referenced at “top level” for any composite glyph\n  maxComponentDepth:      r.uint16   // Maximum levels of recursion; 1 for simple components\n});\n","/**\n * Gets an encoding name from platform, encoding, and language ids.\n * Returned encoding names can be used in iconv-lite to decode text.\n */\nexport function getEncoding(platformID, encodingID, languageID = 0) {\n  if (platformID === 1 && MAC_LANGUAGE_ENCODINGS[languageID]) {\n    return MAC_LANGUAGE_ENCODINGS[languageID];\n  }\n  \n  return ENCODINGS[platformID][encodingID];\n}\n\nconst SINGLE_BYTE_ENCODINGS = new Set(['x-mac-roman', 'x-mac-cyrillic', 'iso-8859-6', 'iso-8859-8']);\nconst MAC_ENCODINGS = {\n  'x-mac-croatian': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n  'x-mac-gaelic': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n  'x-mac-greek': 'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n  'x-mac-icelandic': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n  'x-mac-inuit': 'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n  'x-mac-ce': 'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n  'x-mac-romanian': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n  'x-mac-turkish': 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\nconst encodingCache = new Map();\n\nexport function getEncodingMapping(encoding) {\n  let cached = encodingCache.get(encoding);\n  if (cached) {\n    return cached;\n  }\n\n  // These encodings aren't supported by TextDecoder.\n  let mapping = MAC_ENCODINGS[encoding];\n  if (mapping) {\n    let res = new Map();\n    for (let i = 0; i < mapping.length; i++) {\n      res.set(mapping.charCodeAt(i), 0x80 + i);\n    }\n\n    encodingCache.set(encoding, res);\n    return res;\n  }\n\n  // Only single byte encodings can be mapped 1:1.\n  if (SINGLE_BYTE_ENCODINGS.has(encoding)) {\n    // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n    // Use this to create a mapping of code points.\n    let decoder = new TextDecoder(encoding);\n    let mapping = new Uint8Array(0x80);\n    for (let i = 0; i < 0x80; i++) {\n      mapping[i] = 0x80 + i;\n    }\n\n    let res = new Map();\n    let s = decoder.decode(mapping);\n    for (let i = 0; i < 0x80; i++) {\n      res.set(s.charCodeAt(i), 0x80 + i);\n    }\n\n    encodingCache.set(encoding, res);\n    return res;\n  }\n}\n\n// Map of platform ids to encoding ids.\nexport const ENCODINGS = [\n  // unicode\n  ['utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be', 'utf16be'],\n  \n  // macintosh\n  // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n  // 0\tRoman                 17\tMalayalam\n  // 1\tJapanese\t            18\tSinhalese\n  // 2\tTraditional Chinese\t  19\tBurmese\n  // 3\tKorean\t              20\tKhmer\n  // 4\tArabic\t              21\tThai\n  // 5\tHebrew\t              22\tLaotian\n  // 6\tGreek\t                23\tGeorgian\n  // 7\tRussian\t              24\tArmenian\n  // 8\tRSymbol\t              25\tSimplified Chinese\n  // 9\tDevanagari\t          26\tTibetan\n  // 10\tGurmukhi\t            27\tMongolian\n  // 11\tGujarati\t            28\tGeez\n  // 12\tOriya\t                29\tSlavic\n  // 13\tBengali\t              30\tVietnamese\n  // 14\tTamil\t                31\tSindhi\n  // 15\tTelugu\t              32\t(Uninterpreted)\n  // 16\tKannada\n  ['x-mac-roman', 'shift-jis', 'big5', 'euc-kr', 'iso-8859-6', 'iso-8859-8',\n   'x-mac-greek', 'x-mac-cyrillic', 'x-mac-symbol', 'x-mac-devanagari', 'x-mac-gurmukhi', 'x-mac-gujarati',\n   'Oriya', 'Bengali', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Sinhalese',\n   'Burmese', 'Khmer', 'iso-8859-11', 'Laotian', 'Georgian', 'Armenian', 'hz-gb-2312', \n   'Tibetan', 'Mongolian', 'Geez', 'x-mac-ce', 'Vietnamese', 'Sindhi'],\n  \n  // ISO (deprecated)\n  ['ascii'],\n  \n  // windows\n  // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n  ['symbol', 'utf16be', 'shift-jis', 'gb18030', 'big5', 'x-cp20949', 'johab', null, null, null, 'utf16be']\n];\n\n// Overrides for Mac scripts by language id.\n// See http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nexport const MAC_LANGUAGE_ENCODINGS = {\n  15: 'x-mac-icelandic',\n  17: 'x-mac-turkish',\n  18: 'x-mac-croatian',\n  24: 'x-mac-ce',\n  25: 'x-mac-ce',\n  26: 'x-mac-ce',\n  27: 'x-mac-ce',\n  28: 'x-mac-ce',\n  30: 'x-mac-icelandic',\n  37: 'x-mac-romanian',\n  38: 'x-mac-ce',\n  39: 'x-mac-ce',\n  40: 'x-mac-ce',\n  143: 'x-mac-inuit',\n  146: 'x-mac-gaelic'\n};\n\n// Map of platform ids to BCP-47 language codes.\nexport const LANGUAGES = [\n  // unicode\n  [],\n  \n  { // macintosh\n    0: 'en',        30: 'fo',       60: 'ks',       90: 'rw',\n    1: 'fr',        31: 'fa',       61: 'ku',       91: 'rn',\n    2: 'de',        32: 'ru',       62: 'sd',       92: 'ny',\n    3: 'it',        33: 'zh',       63: 'bo',       93: 'mg',\n    4: 'nl',        34: 'nl-BE',    64: 'ne',       94: 'eo',\n    5: 'sv',        35: 'ga',       65: 'sa',       128: 'cy',\n    6: 'es',        36: 'sq',       66: 'mr',       129: 'eu',\n    7: 'da',        37: 'ro',       67: 'bn',       130: 'ca',\n    8: 'pt',        38: 'cz',       68: 'as',       131: 'la',\n    9: 'no',        39: 'sk',       69: 'gu',       132: 'qu',\n    10: 'he',       40: 'si',       70: 'pa',       133: 'gn',\n    11: 'ja',       41: 'yi',       71: 'or',       134: 'ay',\n    12: 'ar',       42: 'sr',       72: 'ml',       135: 'tt',\n    13: 'fi',       43: 'mk',       73: 'kn',       136: 'ug',\n    14: 'el',       44: 'bg',       74: 'ta',       137: 'dz',\n    15: 'is',       45: 'uk',       75: 'te',       138: 'jv',\n    16: 'mt',       46: 'be',       76: 'si',       139: 'su',\n    17: 'tr',       47: 'uz',       77: 'my',       140: 'gl',\n    18: 'hr',       48: 'kk',       78: 'km',       141: 'af',\n    19: 'zh-Hant',  49: 'az-Cyrl',  79: 'lo',       142: 'br',\n    20: 'ur',       50: 'az-Arab',  80: 'vi',       143: 'iu',\n    21: 'hi',       51: 'hy',       81: 'id',       144: 'gd',\n    22: 'th',       52: 'ka',       82: 'tl',       145: 'gv',\n    23: 'ko',       53: 'mo',       83: 'ms',       146: 'ga',\n    24: 'lt',       54: 'ky',       84: 'ms-Arab',  147: 'to',\n    25: 'pl',       55: 'tg',       85: 'am',       148: 'el-polyton',\n    26: 'hu',       56: 'tk',       86: 'ti',       149: 'kl',\n    27: 'es',       57: 'mn-CN',    87: 'om',       150: 'az',\n    28: 'lv',       58: 'mn',       88: 'so',       151: 'nn',\n    29: 'se',       59: 'ps',       89: 'sw',\n  },\n  \n  // ISO (deprecated)\n  [],\n  \n  { // windows                                        \n    0x0436: 'af',       0x4009: 'en-IN',    0x0487: 'rw',          0x0432: 'tn',       \n    0x041C: 'sq',       0x1809: 'en-IE',    0x0441: 'sw',          0x045B: 'si',          \n    0x0484: 'gsw',      0x2009: 'en-JM',    0x0457: 'kok',         0x041B: 'sk',          \n    0x045E: 'am',       0x4409: 'en-MY',    0x0412: 'ko',          0x0424: 'sl',          \n    0x1401: 'ar-DZ',    0x1409: 'en-NZ',    0x0440: 'ky',          0x2C0A: 'es-AR',       \n    0x3C01: 'ar-BH',    0x3409: 'en-PH',    0x0454: 'lo',          0x400A: 'es-BO',       \n    0x0C01: 'ar',       0x4809: 'en-SG',    0x0426: 'lv',          0x340A: 'es-CL',       \n    0x0801: 'ar-IQ',    0x1C09: 'en-ZA',    0x0427: 'lt',          0x240A: 'es-CO',       \n    0x2C01: 'ar-JO',    0x2C09: 'en-TT',    0x082E: 'dsb',         0x140A: 'es-CR',       \n    0x3401: 'ar-KW',    0x0809: 'en-GB',    0x046E: 'lb',          0x1C0A: 'es-DO',       \n    0x3001: 'ar-LB',    0x0409: 'en',       0x042F: 'mk',          0x300A: 'es-EC',       \n    0x1001: 'ar-LY',    0x3009: 'en-ZW',    0x083E: 'ms-BN',       0x440A: 'es-SV',       \n    0x1801: 'ary',      0x0425: 'et',       0x043E: 'ms',          0x100A: 'es-GT',       \n    0x2001: 'ar-OM',    0x0438: 'fo',       0x044C: 'ml',          0x480A: 'es-HN',       \n    0x4001: 'ar-QA',    0x0464: 'fil',      0x043A: 'mt',          0x080A: 'es-MX',       \n    0x0401: 'ar-SA',    0x040B: 'fi',       0x0481: 'mi',          0x4C0A: 'es-NI',       \n    0x2801: 'ar-SY',    0x080C: 'fr-BE',    0x047A: 'arn',         0x180A: 'es-PA',       \n    0x1C01: 'aeb',      0x0C0C: 'fr-CA',    0x044E: 'mr',          0x3C0A: 'es-PY',       \n    0x3801: 'ar-AE',    0x040C: 'fr',       0x047C: 'moh',         0x280A: 'es-PE',       \n    0x2401: 'ar-YE',    0x140C: 'fr-LU',    0x0450: 'mn',          0x500A: 'es-PR',       \n    0x042B: 'hy',       0x180C: 'fr-MC',    0x0850: 'mn-CN',       0x0C0A: 'es',          \n    0x044D: 'as',       0x100C: 'fr-CH',    0x0461: 'ne',          0x040A: 'es',          \n    0x082C: 'az-Cyrl',  0x0462: 'fy',       0x0414: 'nb',          0x540A: 'es-US',       \n    0x042C: 'az',       0x0456: 'gl',       0x0814: 'nn',          0x380A: 'es-UY',     \n    0x046D: 'ba',       0x0437: 'ka',       0x0482: 'oc',          0x200A: 'es-VE',       \n    0x042D: 'eu',       0x0C07: 'de-AT',    0x0448: 'or',          0x081D: 'sv-FI',       \n    0x0423: 'be',       0x0407: 'de',       0x0463: 'ps',          0x041D: 'sv',          \n    0x0845: 'bn',       0x1407: 'de-LI',    0x0415: 'pl',          0x045A: 'syr',         \n    0x0445: 'bn-IN',    0x1007: 'de-LU',    0x0416: 'pt',          0x0428: 'tg',          \n    0x201A: 'bs-Cyrl',  0x0807: 'de-CH',    0x0816: 'pt-PT',       0x085F: 'tzm',         \n    0x141A: 'bs',       0x0408: 'el',       0x0446: 'pa',          0x0449: 'ta',          \n    0x047E: 'br',       0x046F: 'kl',       0x046B: 'qu-BO',       0x0444: 'tt',          \n    0x0402: 'bg',       0x0447: 'gu',       0x086B: 'qu-EC',       0x044A: 'te',          \n    0x0403: 'ca',       0x0468: 'ha',       0x0C6B: 'qu',          0x041E: 'th',          \n    0x0C04: 'zh-HK',    0x040D: 'he',       0x0418: 'ro',          0x0451: 'bo',          \n    0x1404: 'zh-MO',    0x0439: 'hi',       0x0417: 'rm',          0x041F: 'tr',          \n    0x0804: 'zh',       0x040E: 'hu',       0x0419: 'ru',          0x0442: 'tk',          \n    0x1004: 'zh-SG',    0x040F: 'is',       0x243B: 'smn',         0x0480: 'ug',          \n    0x0404: 'zh-TW',    0x0470: 'ig',       0x103B: 'smj-NO',      0x0422: 'uk',          \n    0x0483: 'co',       0x0421: 'id',       0x143B: 'smj',         0x042E: 'hsb',         \n    0x041A: 'hr',       0x045D: 'iu',       0x0C3B: 'se-FI',       0x0420: 'ur',          \n    0x101A: 'hr-BA',    0x085D: 'iu-Latn',  0x043B: 'se',          0x0843: 'uz-Cyrl',     \n    0x0405: 'cs',       0x083C: 'ga',       0x083B: 'se-SE',       0x0443: 'uz',          \n    0x0406: 'da',       0x0434: 'xh',       0x203B: 'sms',         0x042A: 'vi',          \n    0x048C: 'prs',      0x0435: 'zu',       0x183B: 'sma-NO',      0x0452: 'cy',          \n    0x0465: 'dv',       0x0410: 'it',       0x1C3B: 'sms',         0x0488: 'wo',          \n    0x0813: 'nl-BE',    0x0810: 'it-CH',    0x044F: 'sa',          0x0485: 'sah',         \n    0x0413: 'nl',       0x0411: 'ja',       0x1C1A: 'sr-Cyrl-BA',  0x0478: 'ii',          \n    0x0C09: 'en-AU',    0x044B: 'kn',       0x0C1A: 'sr',          0x046A: 'yo',           \n    0x2809: 'en-BZ',    0x043F: 'kk',       0x181A: 'sr-Latn-BA',  \n    0x1009: 'en-CA',    0x0453: 'km',       0x081A: 'sr-Latn',     \n    0x2409: 'en-029',   0x0486: 'quc',      0x046C: 'nso',         \n  }\n];\n","import * as r from 'restructure';\nimport {getEncoding, LANGUAGES} from '../encodings';\n\nlet NameRecord = new r.Struct({\n  platformID: r.uint16,\n  encodingID: r.uint16,\n  languageID: r.uint16,\n  nameID:     r.uint16,\n  length:     r.uint16,\n  string:     new r.Pointer(r.uint16,\n    new r.String('length', t => getEncoding(t.platformID, t.encodingID, t.languageID)),\n    { type: 'parent', relativeTo: ctx => ctx.parent.stringOffset, allowNull: false }\n  )\n});\n\nlet LangTagRecord = new r.Struct({\n  length:  r.uint16,\n  tag:     new r.Pointer(r.uint16, new r.String('length', 'utf16be'), {type: 'parent', relativeTo: ctx => ctx.stringOffset})\n});\n\nvar NameTable = new r.VersionedStruct(r.uint16, {\n  0: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count')\n  },\n  1: {\n    count:          r.uint16,\n    stringOffset:   r.uint16,\n    records:        new r.Array(NameRecord, 'count'),\n    langTagCount:   r.uint16,\n    langTags:       new r.Array(LangTagRecord, 'langTagCount')\n  }\n});\n\nexport default NameTable;\n\nconst NAMES = [\n  'copyright',\n  'fontFamily',\n  'fontSubfamily',\n  'uniqueSubfamily',\n  'fullName',\n  'version',\n  'postscriptName', // Note: A font may have only one PostScript name and that name must be ASCII.\n  'trademark',\n  'manufacturer',\n  'designer',\n  'description',\n  'vendorURL',\n  'designerURL',\n  'license',\n  'licenseURL',\n  null, // reserved\n  'preferredFamily',\n  'preferredSubfamily',\n  'compatibleFull',\n  'sampleText',\n  'postscriptCIDFontName',\n  'wwsFamilyName',\n  'wwsSubfamilyName'\n];\n\nNameTable.process = function(stream) {\n  var records = {};\n  for (let record of this.records) {\n    // find out what language this is for\n    let language = LANGUAGES[record.platformID][record.languageID];\n\n    if (language == null && this.langTags != null && record.languageID >= 0x8000) {\n      language = this.langTags[record.languageID - 0x8000].tag;\n    }\n\n    if (language == null) {\n      language = record.platformID + '-' + record.languageID;\n    }\n\n    // if the nameID is >= 256, it is a font feature record (AAT)\n    let key = record.nameID >= 256 ? 'fontFeatures' : (NAMES[record.nameID] || record.nameID);\n    if (records[key] == null) {\n      records[key] = {};\n    }\n\n    let obj = records[key];\n    if (record.nameID >= 256) {\n      obj = obj[record.nameID] || (obj[record.nameID] = {});\n    }\n\n    if (typeof record.string === 'string' || typeof obj[language] !== 'string') {\n      obj[language] = record.string;\n    }\n  }\n\n  this.records = records;\n};\n\nNameTable.preEncode = function() {\n  if (Array.isArray(this.records)) return;\n  this.version = 0;\n\n  let records = [];\n  for (let key in this.records) {\n    let val = this.records[key];\n    if (key === 'fontFeatures') continue;\n\n    records.push({\n      platformID: 3,\n      encodingID: 1,\n      languageID: 0x409,\n      nameID: NAMES.indexOf(key),\n      length: val.en.length * 2,\n      string: val.en\n    });\n\n    if (key === 'postscriptName') {\n      records.push({\n        platformID: 1,\n        encodingID: 0,\n        languageID: 0,\n        nameID: NAMES.indexOf(key),\n        length: val.en.length,\n        string: val.en\n      });\n    }\n  }\n\n  this.records = records;\n  this.count = records.length;\n  this.stringOffset = NameTable.size(this, null, false);\n};\n","import * as r from 'restructure';\n\nvar OS2 = new r.VersionedStruct(r.uint16, {\n  header: {\n    xAvgCharWidth:          r.int16,   // average weighted advance width of lower case letters and space\n    usWeightClass:          r.uint16,  // visual weight of stroke in glyphs\n    usWidthClass:           r.uint16,  // relative change from the normal aspect ratio (width to height ratio)\n    fsType:                 new r.Bitfield(r.uint16, [ // Indicates font embedding licensing rights\n      null, 'noEmbedding', 'viewOnly', 'editable', null,\n      null, null, null, 'noSubsetting', 'bitmapOnly'\n    ]),\n    ySubscriptXSize:        r.int16,   // recommended horizontal size in pixels for subscripts\n    ySubscriptYSize:        r.int16,   // recommended vertical size in pixels for subscripts\n    ySubscriptXOffset:      r.int16,   // recommended horizontal offset for subscripts\n    ySubscriptYOffset:      r.int16,   // recommended vertical offset form the baseline for subscripts\n    ySuperscriptXSize:      r.int16,   // recommended horizontal size in pixels for superscripts\n    ySuperscriptYSize:      r.int16,   // recommended vertical size in pixels for superscripts\n    ySuperscriptXOffset:    r.int16,   // recommended horizontal offset for superscripts\n    ySuperscriptYOffset:    r.int16,   // recommended vertical offset from the baseline for superscripts\n    yStrikeoutSize:         r.int16,   // width of the strikeout stroke\n    yStrikeoutPosition:     r.int16,   // position of the strikeout stroke relative to the baseline\n    sFamilyClass:           r.int16,   // classification of font-family design\n    panose:                 new r.Array(r.uint8, 10),   // describe the visual characteristics of a given typeface\n    ulCharRange:            new r.Array(r.uint32, 4),\n    vendorID:               new r.String(4),          // four character identifier for the font vendor\n    fsSelection:            new r.Bitfield(r.uint16, [  // bit field containing information about the font\n      'italic', 'underscore', 'negative', 'outlined', 'strikeout',\n      'bold', 'regular', 'useTypoMetrics', 'wws', 'oblique'\n    ]),\n    usFirstCharIndex:       r.uint16,  // The minimum Unicode index in this font\n    usLastCharIndex:        r.uint16   // The maximum Unicode index in this font\n  },\n\n  // The Apple version of this table ends here, but the Microsoft one continues on...\n  0: {},\n\n  1: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2)\n  },\n\n  2: {\n    // these should be common with version 1 somehow\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16\n  },\n\n  5: {\n    typoAscender:       r.int16,\n    typoDescender:      r.int16,\n    typoLineGap:        r.int16,\n    winAscent:          r.uint16,\n    winDescent:         r.uint16,\n    codePageRange:      new r.Array(r.uint32, 2),\n\n    xHeight:            r.int16,\n    capHeight:          r.int16,\n    defaultChar:        r.uint16,\n    breakChar:          r.uint16,\n    maxContent:         r.uint16,\n\n    usLowerOpticalPointSize: r.uint16,\n    usUpperOpticalPointSize: r.uint16\n  }\n});\n\nlet versions = OS2.versions;\nversions[3] = versions[4] = versions[2];\n\nexport default OS2;\n","import * as r from 'restructure';\n\n// PostScript information\nexport default new r.VersionedStruct(r.fixed32, {\n  header: { // these fields exist at the top of all versions\n    italicAngle:        r.fixed32, // Italic angle in counter-clockwise degrees from the vertical.\n    underlinePosition:  r.int16,   // Suggested distance of the top of the underline from the baseline\n    underlineThickness: r.int16,   // Suggested values for the underline thickness\n    isFixedPitch:       r.uint32,  // Whether the font is monospaced\n    minMemType42:       r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font\n    maxMemType42:       r.uint32,  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font\n    minMemType1:        r.uint32,  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font\n    maxMemType1:        r.uint32   // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n  },\n\n  1: {}, // version 1 has no additional fields\n\n  2: {\n    numberOfGlyphs: r.uint16,\n    glyphNameIndex: new r.Array(r.uint16, 'numberOfGlyphs'),\n    names:          new r.Array(new r.String(r.uint8))\n  },\n\n  2.5: {\n    numberOfGlyphs: r.uint16,\n    offsets:        new r.Array(r.uint8, 'numberOfGlyphs')\n  },\n\n  3: {}, // version 3 has no additional fields\n\n  4: {\n    map: new r.Array(r.uint32, t => t.parent.maxp.numGlyphs)\n  }\n});\n","import * as r from 'restructure';\n\n// An array of predefined values accessible by instructions\nexport default new r.Struct({\n  controlValues: new r.Array(r.int16)\n});\n","import * as r from 'restructure';\n\n// A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\nexport default new r.Struct({\n  instructions: new r.Array(r.uint8)\n});\n","import * as r from 'restructure';\n\nlet loca = new r.VersionedStruct('head.indexToLocFormat', {\n  0: {\n    offsets: new r.Array(r.uint16)\n  },\n  1: {\n    offsets: new r.Array(r.uint32)\n  }\n});\n\nloca.process = function() {\n  if (this.version === 0 && !this._processed) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] <<= 1;\n    }\n    this._processed = true;\n  }\n};\n\nloca.preEncode = function() {\n  if (this.version === 0 && this._processed !== false) {\n    for (let i = 0; i < this.offsets.length; i++) {\n      this.offsets[i] >>>= 1;\n    }\n    this._processed = false;\n  }\n};\n\nexport default loca;\n","import * as r from 'restructure';\n\n// Set of instructions executed whenever the point size or font transformation change\nexport default new r.Struct({\n  controlValueProgram: new r.Array(r.uint8)\n});\n","import * as r from 'restructure';\n\n// only used for encoding\nexport default new r.Array(new r.Buffer);\n","import * as r from 'restructure';\n\nexport default class CFFIndex {\n  constructor(type) {\n    this.type = type;\n  }\n\n  getCFFVersion(ctx) {\n    while (ctx && !ctx.hdrSize) {\n      ctx = ctx.parent;\n    }\n\n    return ctx ? ctx.version : -1;\n  }\n\n  decode(stream, parent) {\n    let version = this.getCFFVersion(parent);\n    let count = version >= 2\n      ? stream.readUInt32BE()\n      : stream.readUInt16BE();\n\n    if (count === 0) {\n      return [];\n    }\n\n    let offSize = stream.readUInt8();\n    let offsetType;\n    if (offSize === 1) {\n      offsetType = r.uint8;\n    } else if (offSize === 2) {\n      offsetType = r.uint16;\n    } else if (offSize === 3) {\n      offsetType = r.uint24;\n    } else if (offSize === 4) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n    }\n\n    let ret = [];\n    let startPos = stream.pos + ((count + 1) * offSize) - 1;\n\n    let start = offsetType.decode(stream);\n    for (let i = 0; i < count; i++) {\n      let end = offsetType.decode(stream);\n\n      if (this.type != null) {\n        let pos = stream.pos;\n        stream.pos = startPos + start;\n\n        parent.length = end - start;\n        ret.push(this.type.decode(stream, parent));\n        stream.pos = pos;\n      } else {\n        ret.push({\n          offset: startPos + start,\n          length: end - start\n        });\n      }\n\n      start = end;\n    }\n\n    stream.pos = startPos + start;\n    return ret;\n  }\n\n  size(arr, parent) {\n    let size = 2;\n    if (arr.length === 0) {\n      return size;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let offset = 1;\n    for (let i = 0; i < arr.length; i++) {\n      let item = arr[i];\n      offset += type.size(item, parent);\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    size += 1 + offsetType.size() * (arr.length + 1);\n    size += offset - 1;\n\n    return size;\n  }\n\n  encode(stream, arr, parent) {\n    stream.writeUInt16BE(arr.length);\n    if (arr.length === 0) {\n      return;\n    }\n\n    let type = this.type || new r.Buffer;\n\n    // find maximum offset to detminine offset type\n    let sizes = [];\n    let offset = 1;\n    for (let item of arr) {\n      let s = type.size(item, parent);\n      sizes.push(s);\n      offset += s;\n    }\n\n    let offsetType;\n    if (offset <= 0xff) {\n      offsetType = r.uint8;\n    } else if (offset <= 0xffff) {\n      offsetType = r.uint16;\n    } else if (offset <= 0xffffff) {\n      offsetType = r.uint24;\n    } else if (offset <= 0xffffffff) {\n      offsetType = r.uint32;\n    } else {\n      throw new Error(\"Bad offset in CFFIndex\");\n    }\n\n    // write offset size\n    stream.writeUInt8(offsetType.size());\n\n    // write elements\n    offset = 1;\n    offsetType.encode(stream, offset);\n\n    for (let size of sizes) {\n      offset += size;\n      offsetType.encode(stream, offset);\n    }\n\n    for (let item of arr) {\n      type.encode(stream, item, parent);\n    }\n\n    return;\n  }\n}\n","const FLOAT_EOF = 0xf;\nconst FLOAT_LOOKUP = [\n  '0', '1', '2', '3', '4', '5', '6', '7',\n  '8', '9', '.', 'E', 'E-', null, '-'\n];\n\nconst FLOAT_ENCODE_LOOKUP = {\n  '.': 10,\n  'E': 11,\n  'E-': 12,\n  '-': 14\n};\n\nexport default class CFFOperand {\n  static decode(stream, value) {\n    if (32 <= value && value <= 246) {\n      return value - 139;\n    }\n\n    if (247 <= value && value <= 250) {\n      return (value - 247) * 256 + stream.readUInt8() + 108;\n    }\n\n    if (251 <= value && value <= 254) {\n      return -(value - 251) * 256 - stream.readUInt8() - 108;\n    }\n\n    if (value === 28) {\n      return stream.readInt16BE();\n    }\n\n    if (value === 29) {\n      return stream.readInt32BE();\n    }\n\n    if (value === 30) {\n      let str = '';\n      while (true) {\n        let b = stream.readUInt8();\n\n        let n1 = b >> 4;\n        if (n1 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n1];\n\n        let n2 = b & 15;\n        if (n2 === FLOAT_EOF) { break; }\n        str += FLOAT_LOOKUP[n2];\n      }\n\n      return parseFloat(str);\n    }\n\n    return null;\n  }\n\n  static size(value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, set to 32768\n    if (value.forceLarge) {\n      value = 32768;\n    }\n\n    if ((value | 0) !== value) { // floating point\n      let str = '' + value;\n      return 1 + Math.ceil((str.length + 1) / 2);\n\n    } else if (-107 <= value && value <= 107) {\n      return 1;\n\n    } else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) {\n      return 2;\n\n    } else if (-32768 <= value && value <= 32767) {\n      return 3;\n\n    } else {\n      return 5;\n    }\n  }\n\n  static encode(stream, value) {\n    // if the value needs to be forced to the largest size (32 bit)\n    // e.g. for unknown pointers, save the old value and set to 32768\n    let val = Number(value);\n\n    if (value.forceLarge) {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n\n    } else if ((val | 0) !== val) { // floating point\n      stream.writeUInt8(30);\n\n      let str = '' + val;\n      for (let i = 0; i < str.length; i += 2) {\n        let c1 = str[i];\n        let n1 = FLOAT_ENCODE_LOOKUP[c1] || +c1;\n\n        if (i === str.length - 1) {\n          var n2 = FLOAT_EOF;\n        } else {\n          let c2 = str[i + 1];\n          var n2 = FLOAT_ENCODE_LOOKUP[c2] || +c2;\n        }\n\n        stream.writeUInt8((n1 << 4) | (n2 & 15));\n      }\n\n      if (n2 !== FLOAT_EOF) {\n        return stream.writeUInt8((FLOAT_EOF << 4));\n      }\n\n    } else if (-107 <= val && val <= 107) {\n      return stream.writeUInt8(val + 139);\n\n    } else if (108 <= val && val <= 1131) {\n      val -= 108;\n      stream.writeUInt8((val >> 8) + 247);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-1131 <= val && val <= -108) {\n      val = -val - 108;\n      stream.writeUInt8((val >> 8) + 251);\n      return stream.writeUInt8(val & 0xff);\n\n    } else if (-32768 <= val && val <= 32767) {\n      stream.writeUInt8(28);\n      return stream.writeInt16BE(val);\n\n    } else {\n      stream.writeUInt8(29);\n      return stream.writeInt32BE(val);\n    }\n  }\n}\n","import isEqual from 'fast-deep-equal';\nimport * as r from 'restructure';\nimport CFFOperand from './CFFOperand';\nimport { PropertyDescriptor } from 'restructure';\n\nexport default class CFFDict {\n  constructor(ops = []) {\n    this.ops = ops;\n    this.fields = {};\n    for (let field of ops) {\n      let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n      this.fields[key] = field;\n    }\n  }\n\n  decodeOperands(type, stream, ret, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.decodeOperands(type[i], stream, ret, [op]));\n    } else if (type.decode != null) {\n      return type.decode(stream, ret, operands);\n    } else {\n      switch (type) {\n        case 'number':\n        case 'offset':\n        case 'sid':\n          return operands[0];\n        case 'boolean':\n          return !!operands[0];\n        default:\n          return operands;\n      }\n    }\n  }\n\n  encodeOperands(type, stream, ctx, operands) {\n    if (Array.isArray(type)) {\n      return operands.map((op, i) => this.encodeOperands(type[i], stream, ctx, op)[0]);\n    } else if (type.encode != null) {\n      return type.encode(stream, operands, ctx);\n    } else if (typeof operands === 'number') {\n      return [operands];\n    } else if (typeof operands === 'boolean') {\n      return [+operands];\n    } else if (Array.isArray(operands)) {\n      return operands;\n    } else {\n      return [operands];\n    }\n  }\n\n  decode(stream, parent) {\n    let end = stream.pos + parent.length;\n    let ret = {};\n    let operands = [];\n\n    // define hidden properties\n    Object.defineProperties(ret, {\n      parent:         { value: parent },\n      _startOffset:   { value: stream.pos }\n    });\n\n    // fill in defaults\n    for (let key in this.fields) {\n      let field = this.fields[key];\n      ret[field[1]] = field[3];\n    }\n\n    while (stream.pos < end) {\n      let b = stream.readUInt8();\n      if (b < 28) {\n        if (b === 12) {\n          b = (b << 8) | stream.readUInt8();\n        }\n\n        let field = this.fields[b];\n        if (!field) {\n          throw new Error(`Unknown operator ${b}`);\n        }\n\n        let val = this.decodeOperands(field[2], stream, ret, operands);\n        if (val != null) {\n          if (val instanceof PropertyDescriptor) {\n            Object.defineProperty(ret, field[1], val);\n          } else {\n            ret[field[1]] = val;\n          }\n        }\n\n        operands = [];\n      } else {\n        operands.push(CFFOperand.decode(stream, b));\n      }\n    }\n\n    return ret;\n  }\n\n  size(dict, parent, includePointers = true) {\n    let ctx = {\n      parent,\n      val: dict,\n      pointerSize: 0,\n      startOffset: parent.startOffset || 0\n    };\n\n    let len = 0;\n\n    for (let k in this.fields) {\n      let field = this.fields[k];\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], null, ctx, val);\n      for (let op of operands) {\n        len += CFFOperand.size(op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      len += key.length;\n    }\n\n    if (includePointers) {\n      len += ctx.pointerSize;\n    }\n\n    return len;\n  }\n\n  encode(stream, dict, parent) {\n    let ctx = {\n      pointers: [],\n      startOffset: stream.pos,\n      parent,\n      val: dict,\n      pointerSize: 0\n    };\n\n    ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n\n    for (let field of this.ops) {\n      let val = dict[field[1]];\n      if (val == null || isEqual(val, field[3])) {\n        continue;\n      }\n\n      let operands = this.encodeOperands(field[2], stream, ctx, val);\n      for (let op of operands) {\n        CFFOperand.encode(stream, op);\n      }\n\n      let key = Array.isArray(field[0]) ? field[0] : [field[0]];\n      for (let op of key) {\n        stream.writeUInt8(op);\n      }\n    }\n\n    let i = 0;\n    while (i < ctx.pointers.length) {\n      let ptr = ctx.pointers[i++];\n      ptr.type.encode(stream, ptr.val, ptr.parent);\n    }\n\n    return;\n  }\n}\n","import * as r from 'restructure';\n\nexport default class CFFPointer extends r.Pointer {\n  constructor(type, options = {}) {\n    if (options.type == null) {\n      options.type = 'global';\n    }\n\n    super(null, type, options);\n  }\n\n  decode(stream, parent, operands) {\n    this.offsetType = {\n      decode: () => operands[0]\n    };\n\n    return super.decode(stream, parent, operands);\n  }\n\n  encode(stream, value, ctx) {\n    if (!stream) {\n      // compute the size (so ctx.pointerSize is correct)\n      this.offsetType = {\n        size: () => 0\n      };\n\n      this.size(value, ctx);\n      return [new Ptr(0)];\n    }\n\n    let ptr = null;\n    this.offsetType = {\n      encode: (stream, val) => ptr = val\n    };\n\n    super.encode(stream, value, ctx);\n    return [new Ptr(ptr)];\n  }\n}\n\nclass Ptr {\n  constructor(val) {\n    this.val = val;\n    this.forceLarge = true;\n  }\n\n  valueOf() {\n    return this.val;\n  }\n}\n","import CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\n\nclass CFFBlendOp {\n  static decode(stream, parent, operands) {\n    let numBlends = operands.pop();\n\n    // TODO: actually blend. For now just consume the deltas\n    // since we don't use any of the values anyway.\n    while (operands.length > numBlends) {\n      operands.pop();\n    }\n  }\n}\n\nexport default new CFFDict([\n  // key       name                    type                                          default\n  [6,         'BlueValues',           'delta',                                       null],\n  [7,         'OtherBlues',           'delta',                                       null],\n  [8,         'FamilyBlues',          'delta',                                       null],\n  [9,         'FamilyOtherBlues',     'delta',                                       null],\n  [[12, 9],   'BlueScale',            'number',                                      0.039625],\n  [[12, 10],  'BlueShift',            'number',                                      7],\n  [[12, 11],  'BlueFuzz',             'number',                                      1],\n  [10,        'StdHW',                'number',                                      null],\n  [11,        'StdVW',                'number',                                      null],\n  [[12, 12],  'StemSnapH',            'delta',                                       null],\n  [[12, 13],  'StemSnapV',            'delta',                                       null],\n  [[12, 14],  'ForceBold',            'boolean',                                     false],\n  [[12, 17],  'LanguageGroup',        'number',                                      0],\n  [[12, 18],  'ExpansionFactor',      'number',                                      0.06],\n  [[12, 19],  'initialRandomSeed',    'number',                                      0],\n  [20,        'defaultWidthX',        'number',                                      0],\n  [21,        'nominalWidthX',        'number',                                      0],\n  [22,        'vsindex',              'number',                                      0],\n  [23,        'blend',                CFFBlendOp,                                    null],\n  [19,        'Subrs',                new CFFPointer(new CFFIndex, {type: 'local'}), null]\n]);\n","// Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\nexport default [\n  \".notdef\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\",\n  \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\",\n  \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\",\n  \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\",\n  \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\",\n  \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\",\n  \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\",\n  \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\",\n  \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\",\n  \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\",\n  \"asciitilde\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\",\n  \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\",\n  \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"endash\",\n  \"dagger\", \"daggerdbl\", \"periodcentered\", \"paragraph\", \"bullet\",\n  \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\",\n  \"ellipsis\", \"perthousand\", \"questiondown\", \"grave\", \"acute\", \"circumflex\",\n  \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"ring\", \"cedilla\",\n  \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"AE\", \"ordfeminine\", \"Lslash\",\n  \"Oslash\", \"OE\", \"ordmasculine\", \"ae\", \"dotlessi\", \"lslash\", \"oslash\", \"oe\",\n  \"germandbls\", \"onesuperior\", \"logicalnot\", \"mu\", \"trademark\", \"Eth\",\n  \"onehalf\", \"plusminus\", \"Thorn\", \"onequarter\", \"divide\", \"brokenbar\",\n  \"degree\", \"thorn\", \"threequarters\", \"twosuperior\", \"registered\", \"minus\",\n  \"eth\", \"multiply\", \"threesuperior\", \"copyright\", \"Aacute\", \"Acircumflex\",\n  \"Adieresis\", \"Agrave\", \"Aring\", \"Atilde\", \"Ccedilla\", \"Eacute\",\n  \"Ecircumflex\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\",\n  \"Igrave\", \"Ntilde\", \"Oacute\", \"Ocircumflex\", \"Odieresis\", \"Ograve\",\n  \"Otilde\", \"Scaron\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Ugrave\",\n  \"Yacute\", \"Ydieresis\", \"Zcaron\", \"aacute\", \"acircumflex\", \"adieresis\",\n  \"agrave\", \"aring\", \"atilde\", \"ccedilla\", \"eacute\", \"ecircumflex\",\n  \"edieresis\", \"egrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"igrave\",\n  \"ntilde\", \"oacute\", \"ocircumflex\", \"odieresis\", \"ograve\", \"otilde\",\n  \"scaron\", \"uacute\", \"ucircumflex\", \"udieresis\", \"ugrave\", \"yacute\",\n  \"ydieresis\", \"zcaron\", \"exclamsmall\", \"Hungarumlautsmall\",\n  \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\",\n  \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\",\n  \"onedotenleader\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\",\n  \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\",\n  \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"commasuperior\",\n  \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"asuperior\",\n  \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"isuperior\",\n  \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"rsuperior\",\n  \"ssuperior\", \"tsuperior\", \"ff\", \"ffi\", \"ffl\", \"parenleftinferior\",\n  \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\",\n  \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\",\n  \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\",\n  \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\",\n  \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\",\n  \"onefitted\", \"rupiah\", \"Tildesmall\", \"exclamdownsmall\", \"centoldstyle\",\n  \"Lslashsmall\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\",\n  \"Caronsmall\", \"Dotaccentsmall\", \"Macronsmall\", \"figuredash\",\n  \"hypheninferior\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\",\n  \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\",\n  \"seveneighths\", \"onethird\", \"twothirds\", \"zerosuperior\", \"foursuperior\",\n  \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\",\n  \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\",\n  \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\",\n  \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\",\n  \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\",\n  \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\",\n  \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\",\n  \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\",\n  \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\",\n  \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\",\n  \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\",\n  \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\",\n  \"Ydieresissmall\", \"001.000\", \"001.001\", \"001.002\", \"001.003\", \"Black\",\n  \"Bold\", \"Book\", \"Light\", \"Medium\", \"Regular\", \"Roman\", \"Semibold\"\n];\n","export let StandardEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n  'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n  'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n  'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n  'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n  'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n  'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n  'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n  'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n  '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n  'lslash', 'oslash', 'oe', 'germandbls'\n];\n\nexport let ExpertEncoding = [\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n  'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n  'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n  'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n  'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n  'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n  'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n  'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n  'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n  'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n  '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n  'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n  '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n  '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n  'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n  'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n  'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n  'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n  'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'\n];\n","export let ISOAdobeCharset = [\n  '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar',\n  'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright',\n  'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero',\n  'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n  'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question',\n  'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n  'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\n  'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n  'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent',\n  'sterling', 'fraction', 'yen', 'florin', 'section', 'currency',\n  'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft',\n  'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl',\n  'periodcentered', 'paragraph', 'bullet', 'quotesinglbase',\n  'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis',\n  'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde',\n  'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla',\n  'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine',\n  'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash',\n  'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n  'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter',\n  'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior',\n  'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n  'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde',\n  'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n  'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex',\n  'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute',\n  'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla',\n  'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex',\n  'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis',\n  'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis',\n  'ugrave', 'yacute', 'ydieresis', 'zcaron'\n];\n\nexport let ExpertCharset = [\n  '.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle',\n  'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior',\n  'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma',\n  'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle',\n  'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle',\n  'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle',\n  'colon', 'semicolon', 'commasuperior', 'threequartersemdash',\n  'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall',\n  'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n  'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall',\n  'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall',\n  'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary',\n  'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle',\n  'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n  'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall',\n  'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall',\n  'Cedillasmall', 'onequarter', 'onehalf', 'threequarters',\n  'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall',\n  'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall',\n  'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall',\n  'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n  'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall',\n  'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n  'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n  'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall',\n  'Ydieresissmall'\n];\n\nexport let ExpertSubsetCharset = [\n  '.notdef', 'space', 'dollaroldstyle', 'dollarsuperior',\n  'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n  'onedotenleader', 'comma', 'hyphen', 'period', 'fraction',\n  'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n  'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle',\n  'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior',\n  'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior',\n  'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n  'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior',\n  'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior',\n  'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted',\n  'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter',\n  'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths',\n  'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior',\n  'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n  'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n  'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior',\n  'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior',\n  'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior',\n  'periodinferior', 'commainferior'\n];\n","import * as r from 'restructure';\n\n//########################\n// Scripts and Languages #\n//########################\n\nlet LangSysTable = new r.Struct({\n  reserved:         new r.Reserved(r.uint16),\n  reqFeatureIndex:  r.uint16,\n  featureCount:     r.uint16,\n  featureIndexes:   new r.Array(r.uint16, 'featureCount')\n});\n\nlet LangSysRecord = new r.Struct({\n  tag:      new r.String(4),\n  langSys:  new r.Pointer(r.uint16, LangSysTable, { type: 'parent' })\n});\n\nlet Script = new r.Struct({\n  defaultLangSys: new r.Pointer(r.uint16, LangSysTable),\n  count:          r.uint16,\n  langSysRecords: new r.Array(LangSysRecord, 'count')\n});\n\nlet ScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, Script, { type: 'parent' })\n});\n\nexport let ScriptList = new r.Array(ScriptRecord, r.uint16);\n\n//#######################\n// Features and Lookups #\n//#######################\n\nlet FeatureParams = new r.Struct({\n  version:    r.uint16, // should be set to 0 according OT spec\n  nameID:     r.uint16, //OT spec: UI Name ID or uiLabelNameId\n});\n\nexport let Feature = new r.Struct({\n  featureParams:      new r.Pointer(r.uint16, FeatureParams),\n  lookupCount:        r.uint16,\n  lookupListIndexes:  new r.Array(r.uint16, 'lookupCount')\n});\n\nlet FeatureRecord = new r.Struct({\n  tag:      new r.String(4),\n  feature:  new r.Pointer(r.uint16, Feature, { type: 'parent' })\n});\n\nexport let FeatureList = new r.Array(FeatureRecord, r.uint16);\n\nlet LookupFlags = new r.Struct({\n  markAttachmentType: r.uint8,\n  flags: new r.Bitfield(r.uint8, [\n    'rightToLeft', 'ignoreBaseGlyphs', 'ignoreLigatures',\n    'ignoreMarks', 'useMarkFilteringSet'\n  ])\n});\n\nexport function LookupList(SubTable) {\n  let Lookup = new r.Struct({\n    lookupType:         r.uint16,\n    flags:              LookupFlags,\n    subTableCount:      r.uint16,\n    subTables:          new r.Array(new r.Pointer(r.uint16, SubTable), 'subTableCount'),\n    markFilteringSet:   new r.Optional(r.uint16, t => t.flags.flags.useMarkFilteringSet)\n  });\n\n  return new r.LazyArray(new r.Pointer(r.uint16, Lookup), r.uint16);\n}\n\n//#################\n// Coverage Table #\n//#################\n\nlet RangeRecord = new r.Struct({\n  start:              r.uint16,\n  end:                r.uint16,\n  startCoverageIndex: r.uint16\n});\n\nexport let Coverage = new r.VersionedStruct(r.uint16, {\n  1: {\n    glyphCount:   r.uint16,\n    glyphs:       new r.Array(r.uint16, 'glyphCount')\n  },\n  2: {\n    rangeCount:   r.uint16,\n    rangeRecords: new r.Array(RangeRecord, 'rangeCount')\n  }\n});\n\n//#########################\n// Class Definition Table #\n//#########################\n\nlet ClassRangeRecord = new r.Struct({\n  start:  r.uint16,\n  end:    r.uint16,\n  class:  r.uint16\n});\n\nexport let ClassDef = new r.VersionedStruct(r.uint16, {\n  1: { // Class array\n    startGlyph:       r.uint16,\n    glyphCount:       r.uint16,\n    classValueArray:  new r.Array(r.uint16, 'glyphCount')\n  },\n  2: { // Class ranges\n    classRangeCount:  r.uint16,\n    classRangeRecord: new r.Array(ClassRangeRecord, 'classRangeCount')\n  }\n});\n\n//###############\n// Device Table #\n//###############\n\nexport let Device = new r.Struct({\n  a: r.uint16, // startSize for hinting Device, outerIndex for VariationIndex\n  b: r.uint16, // endSize for Device, innerIndex for VariationIndex\n  deltaFormat: r.uint16\n});\n\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\n\nlet LookupRecord = new r.Struct({\n  sequenceIndex:      r.uint16,\n  lookupListIndex:    r.uint16\n});\n\nlet Rule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  input:          new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet RuleSet = new r.Array(new r.Pointer(r.uint16, Rule), r.uint16);\n\nlet ClassRule = new r.Struct({\n  glyphCount:     r.uint16,\n  lookupCount:    r.uint16,\n  classes:        new r.Array(r.uint16, t => t.glyphCount - 1),\n  lookupRecords:  new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ClassSet = new r.Array(new r.Pointer(r.uint16, ClassRule), r.uint16);\n\nexport let Context = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    ruleSetCount:  r.uint16,\n    ruleSets:      new r.Array(new r.Pointer(r.uint16, RuleSet), 'ruleSetCount')\n  },\n  2: { // Class-based context\n    coverage:      new r.Pointer(r.uint16, Coverage),\n    classDef:      new r.Pointer(r.uint16, ClassDef),\n    classSetCnt:   r.uint16,\n    classSet:      new r.Array(new r.Pointer(r.uint16, ClassSet), 'classSetCnt')\n  },\n  3: {\n    glyphCount:    r.uint16,\n    lookupCount:   r.uint16,\n    coverages:     new r.Array(new r.Pointer(r.uint16, Coverage), 'glyphCount'),\n    lookupRecords: new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\n\nlet ChainRule = new r.Struct({\n  backtrackGlyphCount:  r.uint16,\n  backtrack:            new r.Array(r.uint16, 'backtrackGlyphCount'),\n  inputGlyphCount:      r.uint16,\n  input:                new r.Array(r.uint16, t => t.inputGlyphCount - 1),\n  lookaheadGlyphCount:  r.uint16,\n  lookahead:            new r.Array(r.uint16, 'lookaheadGlyphCount'),\n  lookupCount:          r.uint16,\n  lookupRecords:        new r.Array(LookupRecord, 'lookupCount')\n});\n\nlet ChainRuleSet = new r.Array(new r.Pointer(r.uint16, ChainRule), r.uint16);\n\nexport let ChainingContext = new r.VersionedStruct(r.uint16, {\n  1: { // Simple context glyph substitution\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    chainCount:         r.uint16,\n    chainRuleSets:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  2: { // Class-based chaining context\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    backtrackClassDef:  new r.Pointer(r.uint16, ClassDef),\n    inputClassDef:      new r.Pointer(r.uint16, ClassDef),\n    lookaheadClassDef:  new r.Pointer(r.uint16, ClassDef),\n    chainCount:         r.uint16,\n    chainClassSet:      new r.Array(new r.Pointer(r.uint16, ChainRuleSet), 'chainCount')\n  },\n\n  3: { // Coverage-based chaining context\n    backtrackGlyphCount:    r.uint16,\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    inputGlyphCount:        r.uint16,\n    inputCoverage:          new r.Array(new r.Pointer(r.uint16, Coverage), 'inputGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    lookupCount:            r.uint16,\n    lookupRecords:          new r.Array(LookupRecord, 'lookupCount')\n  }\n});\n","import {Feature} from './opentype';\nimport * as r from 'restructure';\n\n/*******************\n * Variation Store *\n *******************/\n\nlet F2DOT14 = new r.Fixed(16, 'BE', 14);\nlet RegionAxisCoordinates = new r.Struct({\n  startCoord: F2DOT14,\n  peakCoord: F2DOT14,\n  endCoord: F2DOT14\n});\n\nlet VariationRegionList = new r.Struct({\n  axisCount: r.uint16,\n  regionCount: r.uint16,\n  variationRegions: new r.Array(new r.Array(RegionAxisCoordinates, 'axisCount'), 'regionCount')\n});\n\nlet DeltaSet = new r.Struct({\n  shortDeltas: new r.Array(r.int16, t => t.parent.shortDeltaCount),\n  regionDeltas: new r.Array(r.int8, t => t.parent.regionIndexCount - t.parent.shortDeltaCount),\n  deltas: t => t.shortDeltas.concat(t.regionDeltas)\n});\n\nlet ItemVariationData = new r.Struct({\n  itemCount: r.uint16,\n  shortDeltaCount: r.uint16,\n  regionIndexCount: r.uint16,\n  regionIndexes: new r.Array(r.uint16, 'regionIndexCount'),\n  deltaSets: new r.Array(DeltaSet, 'itemCount')\n});\n\nexport let ItemVariationStore = new r.Struct({\n  format: r.uint16,\n  variationRegionList: new r.Pointer(r.uint32, VariationRegionList),\n  variationDataCount: r.uint16,\n  itemVariationData: new r.Array(new r.Pointer(r.uint32, ItemVariationData), 'variationDataCount')\n});\n\n/**********************\n * Feature Variations *\n **********************/\n\nlet ConditionTable = new r.VersionedStruct(r.uint16, {\n  1: {\n    axisIndex: r.uint16,\n    axisIndex: r.uint16,\n    filterRangeMinValue: F2DOT14,\n    filterRangeMaxValue: F2DOT14\n  }\n});\n\nlet ConditionSet = new r.Struct({\n  conditionCount: r.uint16,\n  conditionTable: new r.Array(new r.Pointer(r.uint32, ConditionTable), 'conditionCount')\n});\n\nlet FeatureTableSubstitutionRecord = new r.Struct({\n  featureIndex: r.uint16,\n  alternateFeatureTable: new r.Pointer(r.uint32, Feature, {type: 'parent'})\n});\n\nlet FeatureTableSubstitution = new r.Struct({\n  version: r.fixed32,\n  substitutionCount: r.uint16,\n  substitutions: new r.Array(FeatureTableSubstitutionRecord, 'substitutionCount')\n});\n\nlet FeatureVariationRecord = new r.Struct({\n  conditionSet: new r.Pointer(r.uint32, ConditionSet, {type: 'parent'}),\n  featureTableSubstitution: new r.Pointer(r.uint32, FeatureTableSubstitution, {type: 'parent'})\n});\n\nexport let FeatureVariations = new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  featureVariationRecordCount: r.uint32,\n  featureVariationRecords: new r.Array(FeatureVariationRecord, 'featureVariationRecordCount')\n});\n","import * as r from 'restructure';\nimport { resolveLength } from 'restructure';\nimport CFFDict from './CFFDict';\nimport CFFIndex from './CFFIndex';\nimport CFFPointer from './CFFPointer';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport StandardStrings from './CFFStandardStrings';\nimport { StandardEncoding, ExpertEncoding } from './CFFEncodings';\nimport { ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset } from './CFFCharsets';\nimport { ItemVariationStore } from '../tables/variations';\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass PredefinedOp {\n  constructor(predefinedOps, type) {\n    this.predefinedOps = predefinedOps;\n    this.type = type;\n  }\n\n  decode(stream, parent, operands) {\n    if (this.predefinedOps[operands[0]]) {\n      return this.predefinedOps[operands[0]];\n    }\n\n    return this.type.decode(stream, parent, operands);\n  }\n\n  size(value, ctx) {\n    return this.type.size(value, ctx);\n  }\n\n  encode(stream, value, ctx) {\n    let index = this.predefinedOps.indexOf(value);\n    if (index !== -1) {\n      return index;\n    }\n\n    return this.type.encode(stream, value, ctx);\n  }\n}\n\nclass CFFEncodingVersion extends r.Number {\n  constructor() {\n    super('UInt8');\n  }\n\n  decode(stream) {\n    return r.uint8.decode(stream) & 0x7f;\n  }\n}\n\nlet Range1 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint8\n});\n\nlet Range2 = new r.Struct({\n  first: r.uint16,\n  nLeft: r.uint16\n});\n\nlet CFFCustomEncoding = new r.VersionedStruct(new CFFEncodingVersion(), {\n  0: {\n    nCodes: r.uint8,\n    codes: new r.Array(r.uint8, 'nCodes')\n  },\n\n  1: {\n    nRanges: r.uint8,\n    ranges: new r.Array(Range1, 'nRanges')\n  }\n\n  // TODO: supplement?\n});\n\nlet CFFEncoding = new PredefinedOp([ StandardEncoding, ExpertEncoding ], new CFFPointer(CFFCustomEncoding, { lazy: true }));\n\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass RangeArray extends r.Array {\n  decode(stream, parent) {\n    let length = resolveLength(this.length, stream, parent);\n    let count = 0;\n    let res = [];\n    while (count < length) {\n      let range = this.type.decode(stream, parent);\n      range.offset = count;\n      count += range.nLeft + 1;\n      res.push(range);\n    }\n\n    return res;\n  }\n}\n\nlet CFFCustomCharset = new r.VersionedStruct(r.uint8, {\n  0: {\n    glyphs: new r.Array(r.uint16, t => t.parent.CharStrings.length - 1)\n  },\n\n  1: {\n    ranges: new RangeArray(Range1, t => t.parent.CharStrings.length - 1)\n  },\n\n  2: {\n    ranges: new RangeArray(Range2, t => t.parent.CharStrings.length - 1)\n  }\n});\n\nlet CFFCharset = new PredefinedOp([ ISOAdobeCharset, ExpertCharset, ExpertSubsetCharset ], new CFFPointer(CFFCustomCharset, {lazy: true}));\n\nlet FDRange3 = new r.Struct({\n  first: r.uint16,\n  fd: r.uint8\n});\n\nlet FDRange4 = new r.Struct({\n  first: r.uint32,\n  fd: r.uint16\n});\n\nlet FDSelect = new r.VersionedStruct(r.uint8, {\n  0: {\n    fds: new r.Array(r.uint8, t => t.parent.CharStrings.length)\n  },\n\n  3: {\n    nRanges: r.uint16,\n    ranges: new r.Array(FDRange3, 'nRanges'),\n    sentinel: r.uint16\n  },\n\n  4: {\n    nRanges: r.uint32,\n    ranges: new r.Array(FDRange4, 'nRanges'),\n    sentinel: r.uint32\n  }\n});\n\nlet ptr = new CFFPointer(CFFPrivateDict);\nclass CFFPrivateOp {\n  decode(stream, parent, operands) {\n    parent.length = operands[0];\n    return ptr.decode(stream, parent, [operands[1]]);\n  }\n\n  size(dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.size(dict, ctx)[0]];\n  }\n\n  encode(stream, dict, ctx) {\n    return [CFFPrivateDict.size(dict, ctx, false), ptr.encode(stream, dict, ctx)[0]];\n  }\n}\n\nlet FontDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 38],  'FontName',             'sid',                                  null],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [[12, 5],   'PaintType',            'number',                               0],\n]);\n\nlet CFFTopDict = new CFFDict([\n  // key       name                   type(s)                                 default\n  [[12, 30],  'ROS',                  ['sid', 'sid', 'number'],               null],\n\n  [0,         'version',              'sid',                                  null],\n  [1,         'Notice',               'sid',                                  null],\n  [[12, 0],   'Copyright',            'sid',                                  null],\n  [2,         'FullName',             'sid',                                  null],\n  [3,         'FamilyName',           'sid',                                  null],\n  [4,         'Weight',               'sid',                                  null],\n  [[12, 1],   'isFixedPitch',         'boolean',                              false],\n  [[12, 2],   'ItalicAngle',          'number',                               0],\n  [[12, 3],   'UnderlinePosition',    'number',                               -100],\n  [[12, 4],   'UnderlineThickness',   'number',                               50],\n  [[12, 5],   'PaintType',            'number',                               0],\n  [[12, 6],   'CharstringType',       'number',                               2],\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [13,        'UniqueID',             'number',                               null],\n  [5,         'FontBBox',             'array',                                [0, 0, 0, 0]],\n  [[12, 8],   'StrokeWidth',          'number',                               0],\n  [14,        'XUID',                 'array',                                null],\n  [15,        'charset',              CFFCharset,                             ISOAdobeCharset],\n  [16,        'Encoding',             CFFEncoding,                            StandardEncoding],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [18,        'Private',              new CFFPrivateOp,                       null],\n  [[12, 20],  'SyntheticBase',        'number',                               null],\n  [[12, 21],  'PostScript',           'sid',                                  null],\n  [[12, 22],  'BaseFontName',         'sid',                                  null],\n  [[12, 23],  'BaseFontBlend',        'delta',                                null],\n\n  // CID font specific\n  [[12, 31],  'CIDFontVersion',       'number',                               0],\n  [[12, 32],  'CIDFontRevision',      'number',                               0],\n  [[12, 33],  'CIDFontType',          'number',                               0],\n  [[12, 34],  'CIDCount',             'number',                               8720],\n  [[12, 35],  'UIDBase',              'number',                               null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [[12, 38],  'FontName',             'sid',                                  null]\n]);\n\nlet VariationStore = new r.Struct({\n  length: r.uint16,\n  itemVariationStore: ItemVariationStore\n})\n\nlet CFF2TopDict = new CFFDict([\n  [[12, 7],   'FontMatrix',           'array',                                [0.001, 0, 0, 0.001, 0, 0]],\n  [17,        'CharStrings',          new CFFPointer(new CFFIndex),           null],\n  [[12, 37],  'FDSelect',             new CFFPointer(FDSelect),               null],\n  [[12, 36],  'FDArray',              new CFFPointer(new CFFIndex(FontDict)), null],\n  [24,        'vstore',               new CFFPointer(VariationStore),         null],\n  [25,        'maxstack',             'number',                               193]\n]);\n\nlet CFFTop = new r.VersionedStruct(r.fixed16, {\n  1: {\n    hdrSize:            r.uint8,\n    offSize:            r.uint8,\n    nameIndex:          new CFFIndex(new r.String('length')),\n    topDictIndex:       new CFFIndex(CFFTopDict),\n    stringIndex:        new CFFIndex(new r.String('length')),\n    globalSubrIndex:    new CFFIndex\n  },\n\n  2: {\n    hdrSize:            r.uint8,\n    length:             r.uint16,\n    topDict:            CFF2TopDict,\n    globalSubrIndex:    new CFFIndex\n  }\n});\n\nexport default CFFTop;\n","import * as r from 'restructure';\nimport CFFIndex from './CFFIndex';\nimport CFFTop from './CFFTop';\nimport CFFPrivateDict from './CFFPrivateDict';\nimport standardStrings from './CFFStandardStrings';\n\nclass CFFFont {\n  constructor(stream) {\n    this.stream = stream;\n    this.decode();\n  }\n\n  static decode(stream) {\n    return new CFFFont(stream);\n  }\n\n  decode() {\n    let start = this.stream.pos;\n    let top = CFFTop.decode(this.stream);\n    for (let key in top) {\n      let val = top[key];\n      this[key] = val;\n    }\n\n    if (this.version < 2) {\n      if (this.topDictIndex.length !== 1) {\n        throw new Error(\"Only a single font is allowed in CFF\");\n      }\n\n      this.topDict = this.topDictIndex[0];\n    }\n\n    this.isCIDFont = this.topDict.ROS != null;\n    return this;\n  }\n\n  string(sid) {\n    if (this.version >= 2) {\n      return null;\n    }\n\n    if (sid < standardStrings.length) {\n      return standardStrings[sid];\n    }\n\n    return this.stringIndex[sid - standardStrings.length];\n  }\n\n  get postscriptName() {\n    if (this.version < 2) {\n      return this.nameIndex[0];\n    }\n\n    return null;\n  }\n\n  get fullName() {\n    return this.string(this.topDict.FullName);\n  }\n\n  get familyName() {\n    return this.string(this.topDict.FamilyName);\n  }\n\n  getCharString(glyph) {\n    this.stream.pos = this.topDict.CharStrings[glyph].offset;\n    return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n  }\n\n  getGlyphName(gid) {\n    // CFF2 glyph names are in the post table.\n    if (this.version >= 2) {\n      return null;\n    }\n\n    // CID-keyed fonts don't have glyph names\n    if (this.isCIDFont) {\n      return null;\n    }\n\n    let { charset } = this.topDict;\n    if (Array.isArray(charset)) {\n      return charset[gid];\n    }\n\n    if (gid === 0) {\n      return '.notdef';\n    }\n\n    gid -= 1;\n\n    switch (charset.version) {\n      case 0:\n        return this.string(charset.glyphs[gid]);\n\n      case 1:\n      case 2:\n        for (let i = 0; i < charset.ranges.length; i++) {\n          let range = charset.ranges[i];\n          if (range.offset <= gid && gid <= range.offset + range.nLeft) {\n            return this.string(range.first + (gid - range.offset));\n          }\n        }\n        break;\n    }\n\n    return null;\n  }\n\n  fdForGlyph(gid) {\n    if (!this.topDict.FDSelect) {\n      return null;\n    }\n\n    switch (this.topDict.FDSelect.version) {\n      case 0:\n        return this.topDict.FDSelect.fds[gid];\n\n      case 3:\n      case 4:\n        let { ranges } = this.topDict.FDSelect;\n        let low = 0;\n        let high = ranges.length - 1;\n\n        while (low <= high) {\n          let mid = (low + high) >> 1;\n\n          if (gid < ranges[mid].first) {\n            high = mid - 1;\n          } else if (mid < high && gid >= ranges[mid + 1].first) {\n            low = mid + 1;\n          } else {\n            return ranges[mid].fd;\n          }\n        }\n      default:\n        throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n    }\n  }\n\n  privateDictForGlyph(gid) {\n    if (this.topDict.FDSelect) {\n      let fd = this.fdForGlyph(gid);\n      if (this.topDict.FDArray[fd]) {\n        return this.topDict.FDArray[fd].Private;\n      }\n\n      return null;\n    }\n\n    if (this.version < 2) {\n      return this.topDict.Private;\n    }\n\n    return this.topDict.FDArray[0].Private;\n  }\n}\n\nexport default CFFFont;\n","import * as r from 'restructure';\n\nlet VerticalOrigin = new r.Struct({\n  glyphIndex:   r.uint16,\n  vertOriginY:  r.int16\n});\n\nexport default new r.Struct({\n  majorVersion:           r.uint16,\n  minorVersion:           r.uint16,\n  defaultVertOriginY:     r.int16,\n  numVertOriginYMetrics:  r.uint16,\n  metrics:                new r.Array(VerticalOrigin, 'numVertOriginYMetrics')\n});\n","import * as r from 'restructure';\n\nexport let BigMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  horiBearingX: r.int8,\n  horiBearingY: r.int8,\n  horiAdvance: r.uint8,\n  vertBearingX: r.int8,\n  vertBearingY: r.int8,\n  vertAdvance: r.uint8\n});\n\nexport let SmallMetrics = new r.Struct({\n  height: r.uint8,\n  width: r.uint8,\n  bearingX: r.int8,\n  bearingY: r.int8,\n  advance: r.uint8\n});\n\nlet EBDTComponent = new r.Struct({\n  glyph: r.uint16,\n  xOffset: r.int8,\n  yOffset: r.int8\n});\n\nclass ByteAligned {}\n\nclass BitAligned {}\n\nexport let glyph = new r.VersionedStruct('version', {\n  1: {\n    metrics: SmallMetrics,\n    data: ByteAligned\n  },\n\n  2: {\n    metrics: SmallMetrics,\n    data: BitAligned\n  },\n\n  // format 3 is deprecated\n  // format 4 is not supported by Microsoft\n\n  5: {\n    data: BitAligned\n  },\n\n  6: {\n    metrics: BigMetrics,\n    data: ByteAligned\n  },\n\n  7: {\n    metrics: BigMetrics,\n    data: BitAligned\n  },\n\n  8: {\n    metrics: SmallMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  9: {\n    metrics: BigMetrics,\n    pad: new r.Reserved(r.uint8),\n    numComponents: r.uint16,\n    components: new r.Array(EBDTComponent, 'numComponents')\n  },\n\n  17: {\n    metrics: SmallMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  18: {\n    metrics: BigMetrics,\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  },\n\n  19: {\n    dataLen: r.uint32,\n    data: new r.Buffer('dataLen')\n  }\n});\n\n","import * as r from 'restructure';\nimport {BigMetrics} from './EBDT';\n\nlet SBitLineMetrics = new r.Struct({\n  ascender: r.int8,\n  descender: r.int8,\n  widthMax: r.uint8,\n  caretSlopeNumerator: r.int8,\n  caretSlopeDenominator: r.int8,\n  caretOffset: r.int8,\n  minOriginSB: r.int8,\n  minAdvanceSB: r.int8,\n  maxBeforeBL: r.int8,\n  minAfterBL: r.int8,\n  pad: new r.Reserved(r.int8, 2)\n});\n\nlet CodeOffsetPair = new r.Struct({\n  glyphCode: r.uint16,\n  offset: r.uint16\n});\n\nlet IndexSubtable = new r.VersionedStruct(r.uint16, {\n  header: {\n    imageFormat: r.uint16,\n    imageDataOffset: r.uint32\n  },\n\n  1: {\n    offsetArray: new r.Array(r.uint32, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  2: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics\n  },\n\n  3: {\n    offsetArray: new r.Array(r.uint16, t => t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n  },\n\n  4: {\n    numGlyphs: r.uint32,\n    glyphArray: new r.Array(CodeOffsetPair, t => t.numGlyphs + 1)\n  },\n\n  5: {\n    imageSize: r.uint32,\n    bigMetrics: BigMetrics,\n    numGlyphs: r.uint32,\n    glyphCodeArray: new r.Array(r.uint16, 'numGlyphs')\n  }\n});\n\nlet IndexSubtableArray = new r.Struct({\n  firstGlyphIndex: r.uint16,\n  lastGlyphIndex: r.uint16,\n  subtable: new r.Pointer(r.uint32, IndexSubtable)\n});\n\nlet BitmapSizeTable = new r.Struct({\n  indexSubTableArray: new r.Pointer(r.uint32, new r.Array(IndexSubtableArray, 1), { type: 'parent' }),\n  indexTablesSize: r.uint32,\n  numberOfIndexSubTables: r.uint32,\n  colorRef: r.uint32,\n  hori: SBitLineMetrics,\n  vert: SBitLineMetrics,\n  startGlyphIndex: r.uint16,\n  endGlyphIndex: r.uint16,\n  ppemX: r.uint8,\n  ppemY: r.uint8,\n  bitDepth: r.uint8,\n  flags: new r.Bitfield(r.uint8, ['horizontal', 'vertical'])\n});\n\nexport default new r.Struct({\n  version:  r.uint32, // 0x00020000\n  numSizes: r.uint32,\n  sizes:    new r.Array(BitmapSizeTable, 'numSizes')\n});\n","import * as r from 'restructure';\n\nlet ImageTable = new r.Struct({\n  ppem: r.uint16,\n  resolution: r.uint16,\n  imageOffsets: new r.Array(new r.Pointer(r.uint32, 'void'), t => t.parent.parent.maxp.numGlyphs + 1)\n});\n\n// This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\nexport default new r.Struct({\n  version: r.uint16,\n  flags: new r.Bitfield(r.uint16, ['renderOutlines']),\n  numImgTables: r.uint32,\n  imageTables: new r.Array(new r.Pointer(r.uint32, ImageTable), 'numImgTables')\n});\n","import * as r from 'restructure';\n\nlet LayerRecord = new r.Struct({\n  gid: r.uint16,          // Glyph ID of layer glyph (must be in z-order from bottom to top).\n  paletteIndex: r.uint16  // Index value to use in the appropriate palette. This value must\n});                       // be less than numPaletteEntries in the CPAL table, except for\n                          // the special case noted below. Each palette entry is 16 bits.\n                          // A palette index of 0xFFFF is a special case indicating that\n                          // the text foreground color should be used.\n\nlet BaseGlyphRecord = new r.Struct({\n  gid: r.uint16,             // Glyph ID of reference glyph. This glyph is for reference only\n                             // and is not rendered for color.\n  firstLayerIndex: r.uint16, // Index (from beginning of the Layer Records) to the layer record.\n                             // There will be numLayers consecutive entries for this base glyph.\n  numLayers: r.uint16\n});\n\nexport default new r.Struct({\n  version: r.uint16,\n  numBaseGlyphRecords: r.uint16,\n  baseGlyphRecord: new r.Pointer(r.uint32, new r.Array(BaseGlyphRecord, 'numBaseGlyphRecords')),\n  layerRecords: new r.Pointer(r.uint32, new r.Array(LayerRecord, 'numLayerRecords'), { lazy: true }),\n  numLayerRecords: r.uint16\n});\n","import * as r from 'restructure';\n\nlet ColorRecord = new r.Struct({\n  blue: r.uint8,\n  green: r.uint8,\n  red: r.uint8,\n  alpha: r.uint8\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  header: {\n    numPaletteEntries: r.uint16,\n    numPalettes: r.uint16,\n    numColorRecords: r.uint16,\n    colorRecords: new r.Pointer(r.uint32, new r.Array(ColorRecord, 'numColorRecords')),\n    colorRecordIndices: new r.Array(r.uint16, 'numPalettes'),\n  },\n  0: {},\n  1: {\n    offsetPaletteTypeArray: new r.Pointer(r.uint32, new r.Array(r.uint32, 'numPalettes')),\n    offsetPaletteLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPalettes')),\n    offsetPaletteEntryLabelArray: new r.Pointer(r.uint32, new r.Array(r.uint16, 'numPaletteEntries'))\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device} from './opentype';\nimport {ItemVariationStore} from './variations';\n\nlet BaseCoord = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate:   r.int16 // X or Y value, in design units\n  },\n\n  2: { // Design units plus contour point\n    coordinate:     r.int16,   // X or Y value, in design units\n    referenceGlyph: r.uint16,  // GlyphID of control glyph\n    baseCoordPoint: r.uint16   // Index of contour point on the referenceGlyph\n  },\n\n  3: { // Design units plus Device table\n    coordinate:   r.int16,                         // X or Y value, in design units\n    deviceTable:  new r.Pointer(r.uint16, Device)  // Device table for X or Y value\n  }\n});\n\nlet BaseValues = new r.Struct({\n  defaultIndex:   r.uint16,  // Index of default baseline for this script-same index in the BaseTagList\n  baseCoordCount: r.uint16,\n  baseCoords:     new r.Array(new r.Pointer(r.uint16, BaseCoord), 'baseCoordCount')\n});\n\nlet FeatMinMaxRecord = new r.Struct({\n  tag:        new r.String(4),  // 4-byte feature identification tag-must match FeatureTag in FeatureList\n  minCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'}), // May be NULL\n  maxCoord:   new r.Pointer(r.uint16, BaseCoord, {type: 'parent'})  // May be NULL\n});\n\nlet MinMax = new r.Struct({\n  minCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  maxCoord:           new r.Pointer(r.uint16, BaseCoord),  // May be NULL\n  featMinMaxCount:    r.uint16,                            // May be 0\n  featMinMaxRecords:  new r.Array(FeatMinMaxRecord, 'featMinMaxCount') // In alphabetical order\n});\n\nlet BaseLangSysRecord = new r.Struct({\n  tag:    new r.String(4),  // 4-byte language system identification tag\n  minMax: new r.Pointer(r.uint16, MinMax, {type: 'parent'})\n});\n\nlet BaseScript = new r.Struct({\n  baseValues:         new r.Pointer(r.uint16, BaseValues), // May be NULL\n  defaultMinMax:      new r.Pointer(r.uint16, MinMax),     // May be NULL\n  baseLangSysCount:   r.uint16,                            // May be 0\n  baseLangSysRecords: new r.Array(BaseLangSysRecord, 'baseLangSysCount') // in alphabetical order by BaseLangSysTag\n});\n\nlet BaseScriptRecord = new r.Struct({\n  tag:      new r.String(4),  // 4-byte script identification tag\n  script:   new r.Pointer(r.uint16, BaseScript, {type: 'parent'})\n});\n\nlet BaseScriptList = new r.Array(BaseScriptRecord, r.uint16);\n\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet BaseTagList = new r.Array(new r.String(4), r.uint16);\n\nlet Axis = new r.Struct({\n  baseTagList:    new r.Pointer(r.uint16, BaseTagList),  // May be NULL\n  baseScriptList: new r.Pointer(r.uint16, BaseScriptList)\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    horizAxis:    new r.Pointer(r.uint16, Axis),   // May be NULL\n    vertAxis:     new r.Pointer(r.uint16, Axis)    // May be NULL\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device} from './opentype';\nimport {ItemVariationStore} from './variations';\n\nlet AttachPoint = new r.Array(r.uint16, r.uint16);\nlet AttachList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  glyphCount:     r.uint16,\n  attachPoints:   new r.Array(new r.Pointer(r.uint16, AttachPoint), 'glyphCount')\n});\n\nlet CaretValue = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    coordinate: r.int16\n  },\n\n  2: { // Contour point\n    caretValuePoint: r.uint16\n  },\n\n  3: { // Design units plus Device table\n    coordinate:     r.int16,\n    deviceTable:    new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet LigGlyph = new r.Array(new r.Pointer(r.uint16, CaretValue), r.uint16);\n\nlet LigCaretList = new r.Struct({\n  coverage:       new r.Pointer(r.uint16, Coverage),\n  ligGlyphCount:  r.uint16,\n  ligGlyphs:      new r.Array(new r.Pointer(r.uint16, LigGlyph), 'ligGlyphCount')\n});\n\nlet MarkGlyphSetsDef = new r.Struct({\n  markSetTableFormat: r.uint16,\n  markSetCount:       r.uint16,\n  coverage:           new r.Array(new r.Pointer(r.uint32, Coverage), 'markSetCount')\n});\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    glyphClassDef:      new r.Pointer(r.uint16, ClassDef),\n    attachList:         new r.Pointer(r.uint16, AttachList),\n    ligCaretList:       new r.Pointer(r.uint16, LigCaretList),\n    markAttachClassDef: new r.Pointer(r.uint16, ClassDef)\n  },\n\n  0x00010000: {},\n  0x00010002: {\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef)\n  },\n  0x00010003: {\n    markGlyphSetsDef:   new r.Pointer(r.uint16, MarkGlyphSetsDef),\n    itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore)\n  }\n});\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext} from './opentype';\nimport {FeatureVariations} from './variations';\n\nlet ValueFormat = new r.Bitfield(r.uint16, [\n  'xPlacement', 'yPlacement',\n  'xAdvance', 'yAdvance',\n  'xPlaDevice', 'yPlaDevice',\n  'xAdvDevice', 'yAdvDevice'\n]);\n\nlet types = {\n  xPlacement: r.int16,\n  yPlacement: r.int16,\n  xAdvance:   r.int16,\n  yAdvance:   r.int16,\n  xPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  yPlaDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  xAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel }),\n  yAdvDevice: new r.Pointer(r.uint16, Device, { type: 'global', relativeTo: ctx => ctx.rel })\n};\n\nclass ValueRecord {\n  constructor(key = 'valueFormat') {\n    this.key = key;\n  }\n\n  buildStruct(parent) {\n    let struct = parent;\n    while (!struct[this.key] && struct.parent) {\n      struct = struct.parent;\n    }\n\n    if (!struct[this.key]) return;\n\n    let fields = {};\n    fields.rel = () => struct._startOffset;\n\n    let format = struct[this.key];\n    for (let key in format) {\n      if (format[key]) {\n        fields[key] = types[key];\n      }\n    }\n\n    return new r.Struct(fields);\n  }\n\n  size(val, ctx) {\n    return this.buildStruct(ctx).size(val, ctx);\n  }\n\n  decode(stream, parent) {\n    let res = this.buildStruct(parent).decode(stream, parent);\n    delete res.rel;\n    return res;\n  }\n}\n\nlet PairValueRecord = new r.Struct({\n  secondGlyph:    r.uint16,\n  value1:         new ValueRecord('valueFormat1'),\n  value2:         new ValueRecord('valueFormat2')\n});\n\nlet PairSet = new r.Array(PairValueRecord, r.uint16);\n\nlet Class2Record = new r.Struct({\n  value1: new ValueRecord('valueFormat1'),\n  value2: new ValueRecord('valueFormat2')\n});\n\nlet Anchor = new r.VersionedStruct(r.uint16, {\n  1: { // Design units only\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16\n  },\n\n  2: { // Design units plus contour point\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    anchorPoint:    r.uint16\n  },\n\n  3: { // Design units plus Device tables\n    xCoordinate:    r.int16,\n    yCoordinate:    r.int16,\n    xDeviceTable:   new r.Pointer(r.uint16, Device),\n    yDeviceTable:   new r.Pointer(r.uint16, Device)\n  }\n});\n\nlet EntryExitRecord = new r.Struct({\n  entryAnchor:    new r.Pointer(r.uint16, Anchor, {type: 'parent'}),\n  exitAnchor:     new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkRecord = new r.Struct({\n  class:      r.uint16,\n  markAnchor: new r.Pointer(r.uint16, Anchor, {type: 'parent'})\n});\n\nlet MarkArray = new r.Array(MarkRecord, r.uint16);\n\nlet BaseRecord  = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.classCount);\nlet BaseArray   = new r.Array(BaseRecord, r.uint16);\n\nlet ComponentRecord = new r.Array(new r.Pointer(r.uint16, Anchor), t => t.parent.parent.classCount);\nlet LigatureAttach  = new r.Array(ComponentRecord, r.uint16);\nlet LigatureArray   = new r.Array(new r.Pointer(r.uint16, LigatureAttach), r.uint16);\n\nlet GPOSLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, { // Single Adjustment\n    1: { // Single positioning value\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      value:          new ValueRecord()\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat:    ValueFormat,\n      valueCount:     r.uint16,\n      values:         new r.LazyArray(new ValueRecord(), 'valueCount')\n    }\n  }),\n\n  2: new r.VersionedStruct(r.uint16, { // Pair Adjustment Positioning\n    1: { // Adjustments for glyph pairs\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      pairSetCount:   r.uint16,\n      pairSets:       new r.LazyArray(new r.Pointer(r.uint16, PairSet), 'pairSetCount')\n    },\n\n    2: { // Class pair adjustment\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      valueFormat1:   ValueFormat,\n      valueFormat2:   ValueFormat,\n      classDef1:      new r.Pointer(r.uint16, ClassDef),\n      classDef2:      new r.Pointer(r.uint16, ClassDef),\n      class1Count:    r.uint16,\n      class2Count:    r.uint16,\n      classRecords:   new r.LazyArray(new r.LazyArray(Class2Record, 'class2Count'), 'class1Count')\n    }\n  }),\n\n  3: { // Cursive Attachment Positioning\n    format:             r.uint16,\n    coverage:           new r.Pointer(r.uint16, Coverage),\n    entryExitCount:     r.uint16,\n    entryExitRecords:   new r.Array(EntryExitRecord, 'entryExitCount')\n  },\n\n  4: { // MarkToBase Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    baseCoverage:       new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    baseArray:          new r.Pointer(r.uint16, BaseArray)\n  },\n\n  5: { // MarkToLigature Attachment Positioning\n    format:             r.uint16,\n    markCoverage:       new r.Pointer(r.uint16, Coverage),\n    ligatureCoverage:   new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    markArray:          new r.Pointer(r.uint16, MarkArray),\n    ligatureArray:      new r.Pointer(r.uint16, LigatureArray)\n  },\n\n  6: { // MarkToMark Attachment Positioning\n    format:             r.uint16,\n    mark1Coverage:      new r.Pointer(r.uint16, Coverage),\n    mark2Coverage:      new r.Pointer(r.uint16, Coverage),\n    classCount:         r.uint16,\n    mark1Array:         new r.Pointer(r.uint16, MarkArray),\n    mark2Array:         new r.Pointer(r.uint16, BaseArray)\n  },\n\n  7: Context,          // Contextual positioning\n  8: ChainingContext,  // Chaining contextual positioning\n\n  9: { // Extension Positioning\n    posFormat:   r.uint16,\n    lookupType:  r.uint16,   // cannot also be 9\n    extension:   new r.Pointer(r.uint32, null)\n  }\n});\n\n// Fix circular reference\nGPOSLookup.versions[9].extension.type = GPOSLookup;\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList:     new r.Pointer(r.uint16, ScriptList),\n    featureList:    new r.Pointer(r.uint16, FeatureList),\n    lookupList:     new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n\n// export GPOSLookup for JSTF table\nexport { GPOSLookup };\n","import * as r from 'restructure';\nimport {ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device, Context, ChainingContext} from './opentype';\nimport {FeatureVariations} from './variations';\n\nlet Sequence = new r.Array(r.uint16, r.uint16);\nlet AlternateSet = Sequence;\n\nlet Ligature = new r.Struct({\n  glyph:      r.uint16,\n  compCount:  r.uint16,\n  components: new r.Array(r.uint16, t => t.compCount - 1)\n});\n\nlet LigatureSet = new r.Array(new r.Pointer(r.uint16, Ligature), r.uint16);\n\nlet GSUBLookup = new r.VersionedStruct('lookupType', {\n  1: new r.VersionedStruct(r.uint16, {// Single Substitution\n    1: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      deltaGlyphID:   r.int16\n    },\n    2: {\n      coverage:       new r.Pointer(r.uint16, Coverage),\n      glyphCount:     r.uint16,\n      substitute:     new r.LazyArray(r.uint16, 'glyphCount')\n    }\n  }),\n\n  2: { // Multiple Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    sequences:      new r.LazyArray(new r.Pointer(r.uint16, Sequence), 'count')\n  },\n\n  3: { // Alternate Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    alternateSet:   new r.LazyArray(new r.Pointer(r.uint16, AlternateSet), 'count')\n  },\n\n  4: { // Ligature Substitution\n    substFormat:    r.uint16,\n    coverage:       new r.Pointer(r.uint16, Coverage),\n    count:          r.uint16,\n    ligatureSets:   new r.LazyArray(new r.Pointer(r.uint16, LigatureSet), 'count')\n  },\n\n  5: Context,         // Contextual Substitution\n  6: ChainingContext, // Chaining Contextual Substitution\n\n  7: { // Extension Substitution\n    substFormat:   r.uint16,\n    lookupType:    r.uint16,   // cannot also be 7\n    extension:     new r.Pointer(r.uint32, null)\n  },\n\n  8: { // Reverse Chaining Contextual Single Substitution\n    substFormat:            r.uint16,\n    coverage:               new r.Pointer(r.uint16, Coverage),\n    backtrackCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'backtrackGlyphCount'),\n    lookaheadGlyphCount:    r.uint16,\n    lookaheadCoverage:      new r.Array(new r.Pointer(r.uint16, Coverage), 'lookaheadGlyphCount'),\n    glyphCount:             r.uint16,\n    substitutes:            new r.Array(r.uint16, 'glyphCount')\n  }\n});\n\n// Fix circular reference\nGSUBLookup.versions[7].extension.type = GSUBLookup;\n\nexport default new r.VersionedStruct(r.uint32, {\n  header: {\n    scriptList:     new r.Pointer(r.uint16, ScriptList),\n    featureList:    new r.Pointer(r.uint16, FeatureList),\n    lookupList:     new r.Pointer(r.uint16, new LookupList(GSUBLookup))\n  },\n\n  0x00010000: {},\n  0x00010001: {\n    featureVariations: new r.Pointer(r.uint32, FeatureVariations)\n  }\n});\n","import * as r from 'restructure';\nimport { ScriptList, FeatureList, LookupList, Coverage, ClassDef, Device } from './opentype';\nimport { GPOSLookup } from './GPOS';\n\nlet JstfGSUBModList = new r.Array(r.uint16, r.uint16);\n\nlet JstfPriority = new r.Struct({\n  shrinkageEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  shrinkageJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup)),\n  extensionEnableGSUB:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGSUB:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionEnableGPOS:    new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionDisableGPOS:   new r.Pointer(r.uint16, JstfGSUBModList),\n  extensionJstfMax:       new r.Pointer(r.uint16, new LookupList(GPOSLookup))\n});\n\nlet JstfLangSys = new r.Array(new r.Pointer(r.uint16, JstfPriority), r.uint16);\n\nlet JstfLangSysRecord = new r.Struct({\n  tag:         new r.String(4),\n  jstfLangSys: new r.Pointer(r.uint16, JstfLangSys)\n});\n\nlet JstfScript = new r.Struct({\n  extenderGlyphs: new r.Pointer(r.uint16, new r.Array(r.uint16, r.uint16)), // array of glyphs to extend line length\n  defaultLangSys: new r.Pointer(r.uint16, JstfLangSys),\n  langSysCount:   r.uint16,\n  langSysRecords: new r.Array(JstfLangSysRecord, 'langSysCount')\n});\n\nlet JstfScriptRecord = new r.Struct({\n  tag:    new r.String(4),\n  script: new r.Pointer(r.uint16, JstfScript, {type: 'parent'})\n});\n\nexport default new r.Struct({\n  version:     r.uint32,  // should be 0x00010000\n  scriptCount: r.uint16,\n  scriptList:  new r.Array(JstfScriptRecord, 'scriptCount')\n});\n","import * as r from 'restructure';\nimport { resolveLength } from 'restructure';\nimport { ItemVariationStore } from './variations';\n\n// TODO: add this to restructure\nclass VariableSizeNumber {\n  constructor(size) {\n    this._size = size;\n  }\n\n  decode(stream, parent) {\n    switch (this.size(0, parent)) {\n      case 1: return stream.readUInt8();\n      case 2: return stream.readUInt16BE();\n      case 3: return stream.readUInt24BE();\n      case 4: return stream.readUInt32BE();\n    }\n  }\n\n  size(val, parent) {\n    return resolveLength(this._size, null, parent);\n  }\n}\n\nlet MapDataEntry = new r.Struct({\n  entry: new VariableSizeNumber(t => ((t.parent.entryFormat & 0x0030) >> 4) + 1),\n  outerIndex: t => t.entry >> ((t.parent.entryFormat & 0x000F) + 1),\n  innerIndex: t => t.entry & ((1 << ((t.parent.entryFormat & 0x000F) + 1)) - 1)\n});\n\nlet DeltaSetIndexMap = new r.Struct({\n  entryFormat: r.uint16,\n  mapCount: r.uint16,\n  mapData: new r.Array(MapDataEntry, 'mapCount')\n});\n\nexport default new r.Struct({\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  itemVariationStore: new r.Pointer(r.uint32, ItemVariationStore),\n  advanceWidthMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  LSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap),\n  RSBMapping: new r.Pointer(r.uint32, DeltaSetIndexMap)\n});\n","import * as r from 'restructure';\n\nlet Signature = new r.Struct({\n  format: r.uint32,\n  length: r.uint32,\n  offset: r.uint32\n});\n\nlet SignatureBlock = new r.Struct({\n  reserved:       new r.Reserved(r.uint16, 2),\n  cbSignature:    r.uint32,  // Length (in bytes) of the PKCS#7 packet in pbSignature\n  signature:      new r.Buffer('cbSignature')\n});\n\nexport default new r.Struct({\n  ulVersion:       r.uint32,  // Version number of the DSIG table (0x00000001)\n  usNumSigs:       r.uint16,  // Number of signatures in the table\n  usFlag:          r.uint16,  // Permission flags\n  signatures:      new r.Array(Signature, 'usNumSigs'),\n  signatureBlocks: new r.Array(SignatureBlock, 'usNumSigs')\n});\n","import * as r from 'restructure';\n\nlet GaspRange = new r.Struct({\n  rangeMaxPPEM:       r.uint16,                  // Upper limit of range, in ppem\n  rangeGaspBehavior:  new r.Bitfield(r.uint16, [ // Flags describing desired rasterizer behavior\n    'grayscale', 'gridfit',\n    'symmetricSmoothing', 'symmetricGridfit'     // only in version 1, for ClearType\n  ])\n});\n\nexport default new r.Struct({\n  version:    r.uint16,  // set to 0\n  numRanges:  r.uint16,\n  gaspRanges: new r.Array(GaspRange, 'numRanges') // Sorted by ppem\n});\n","import * as r from 'restructure';\n\nlet DeviceRecord = new r.Struct({\n  pixelSize:      r.uint8,\n  maximumWidth:   r.uint8,\n  widths:         new r.Array(r.uint8, t => t.parent.parent.maxp.numGlyphs)\n});\n\n// The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\nexport default new r.Struct({\n  version:            r.uint16,\n  numRecords:         r.int16,\n  sizeDeviceRecord:   r.int32,\n  records:            new r.Array(DeviceRecord, 'numRecords')\n});\n","import * as r from 'restructure';\n\nlet KernPair = new r.Struct({\n  left:   r.uint16,\n  right:  r.uint16,\n  value:  r.int16\n});\n\nlet ClassTable = new r.Struct({\n  firstGlyph: r.uint16,\n  nGlyphs: r.uint16,\n  offsets: new r.Array(r.uint16, 'nGlyphs'),\n  max: t => t.offsets.length && Math.max.apply(Math, t.offsets)\n});\n\nlet Kern2Array = new r.Struct({\n  off: t => t._startOffset - t.parent.parent._startOffset,\n  len: t => (((t.parent.leftTable.max - t.off) / t.parent.rowWidth) + 1) * (t.parent.rowWidth / 2),\n  values: new r.LazyArray(r.int16, 'len')\n});\n\nlet KernSubtable = new r.VersionedStruct('format', {\n  0: {\n    nPairs:         r.uint16,\n    searchRange:    r.uint16,\n    entrySelector:  r.uint16,\n    rangeShift:     r.uint16,\n    pairs:          new r.Array(KernPair, 'nPairs')\n  },\n\n  2: {\n    rowWidth:   r.uint16,\n    leftTable:  new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    rightTable: new r.Pointer(r.uint16, ClassTable, {type: 'parent'}),\n    array:      new r.Pointer(r.uint16, Kern2Array, {type: 'parent'})\n  },\n\n  3: {\n    glyphCount:       r.uint16,\n    kernValueCount:   r.uint8,\n    leftClassCount:   r.uint8,\n    rightClassCount:  r.uint8,\n    flags:            r.uint8,\n    kernValue:        new r.Array(r.int16, 'kernValueCount'),\n    leftClass:        new r.Array(r.uint8, 'glyphCount'),\n    rightClass:       new r.Array(r.uint8, 'glyphCount'),\n    kernIndex:        new r.Array(r.uint8, t => t.leftClassCount * t.rightClassCount)\n  }\n});\n\nlet KernTable = new r.VersionedStruct('version', {\n  0: { // Microsoft uses this format\n    subVersion: r.uint16,  // Microsoft has an extra sub-table version number\n    length:     r.uint16,  // Length of the subtable, in bytes\n    format:     r.uint8,   // Format of subtable\n    coverage:   new r.Bitfield(r.uint8, [\n      'horizontal',    // 1 if table has horizontal data, 0 if vertical\n      'minimum',       // If set to 1, the table has minimum values. If set to 0, the table has kerning values.\n      'crossStream',   // If set to 1, kerning is perpendicular to the flow of the text\n      'override'      // If set to 1 the value in this table replaces the accumulated value\n    ]),\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  },\n  1: { // Apple uses this format\n    length:     r.uint32,\n    coverage:   new r.Bitfield(r.uint8, [\n      null, null, null, null, null,\n      'variation',     // Set if table has variation kerning values\n      'crossStream',   // Set if table has cross-stream kerning values\n      'vertical'      // Set if table has vertical kerning values\n    ]),\n    format:     r.uint8,\n    tupleIndex: r.uint16,\n    subtable:   KernSubtable,\n    padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n  }\n});\n\nexport default new r.VersionedStruct(r.uint16, {\n  0: { // Microsoft Version\n    nTables:    r.uint16,\n    tables:     new r.Array(KernTable, 'nTables')\n  },\n\n  1: { // Apple Version\n    reserved:   new r.Reserved(r.uint16), // the other half of the version number\n    nTables:    r.uint32,\n    tables:     new r.Array(KernTable, 'nTables')\n  }\n});\n","import * as r from 'restructure';\n\n// Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\nexport default new r.Struct({\n  version:    r.uint16,\n  numGlyphs:  r.uint16,\n  yPels:      new r.Array(r.uint8, 'numGlyphs')\n});\n","import * as r from 'restructure';\n\n// PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\nexport default new r.Struct({\n  version:              r.uint16,\n  fontNumber:           r.uint32,\n  pitch:                r.uint16,\n  xHeight:              r.uint16,\n  style:                r.uint16,\n  typeFamily:           r.uint16,\n  capHeight:            r.uint16,\n  symbolSet:            r.uint16,\n  typeface:             new r.String(16),\n  characterComplement:  new r.String(8),\n  fileName:             new r.String(6),\n  strokeWeight:         new r.String(1),\n  widthType:            new r.String(1),\n  serifStyle:           r.uint8,\n  reserved:             new r.Reserved(r.uint8)\n});\n","import * as r from 'restructure';\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\n\nlet Ratio = new r.Struct({\n  bCharSet:       r.uint8,                             // Character set\n  xRatio:         r.uint8,                             // Value to use for x-Ratio\n  yStartRatio:    r.uint8,                             // Starting y-Ratio value\n  yEndRatio:      r.uint8                              // Ending y-Ratio value\n});\n\nlet vTable = new r.Struct({\n  yPelHeight:     r.uint16,                            // yPelHeight to which values apply\n  yMax:           r.int16,                             // Maximum value (in pels) for this yPelHeight\n  yMin:           r.int16                              // Minimum value (in pels) for this yPelHeight\n});\n\nlet VdmxGroup = new r.Struct({\n  recs:           r.uint16,                            // Number of height records in this group\n  startsz:        r.uint8,                             // Starting yPelHeight\n  endsz:          r.uint8,                             // Ending yPelHeight\n  entries:        new r.Array(vTable, 'recs')          // The VDMX records\n});\n\nexport default new r.Struct({\n  version:        r.uint16,                            // Version number (0 or 1)\n  numRecs:        r.uint16,                            // Number of VDMX groups present\n  numRatios:      r.uint16,                            // Number of aspect ratio groupings\n  ratioRanges:    new r.Array(Ratio, 'numRatios'),     // Ratio ranges\n  offsets:        new r.Array(r.uint16, 'numRatios'),  // Offset to the VDMX group for this ratio range\n  groups:         new r.Array(VdmxGroup, 'numRecs')    // The actual VDMX groupings\n});\n","import * as r from 'restructure';\n\n// Vertical Header Table\nexport default new r.Struct({\n  version:                r.uint16,  // Version number of the Vertical Header Table\n  ascent:                 r.int16,   // The vertical typographic ascender for this font\n  descent:                r.int16,   // The vertical typographic descender for this font\n  lineGap:                r.int16,   // The vertical typographic line gap for this font\n  advanceHeightMax:       r.int16,   // The maximum advance height measurement found in the font\n  minTopSideBearing:      r.int16,   // The minimum top side bearing measurement found in the font\n  minBottomSideBearing:   r.int16,   // The minimum bottom side bearing measurement found in the font\n  yMaxExtent:             r.int16,\n  caretSlopeRise:         r.int16,   // Caret slope (rise/run)\n  caretSlopeRun:          r.int16,\n  caretOffset:            r.int16,   // Set value equal to 0 for nonslanted fonts\n  reserved:               new r.Reserved(r.int16, 4),\n  metricDataFormat:       r.int16,   // Set to 0\n  numberOfMetrics:        r.uint16   // Number of advance heights in the Vertical Metrics table\n});\n","import * as r from 'restructure';\n\nlet VmtxEntry = new r.Struct({\n  advance: r.uint16,  // The advance height of the glyph\n  bearing: r.int16    // The top sidebearing of the glyph\n});\n\n// Vertical Metrics Table\nexport default new r.Struct({\n  metrics:  new r.LazyArray(VmtxEntry, t => t.parent.vhea.numberOfMetrics),\n  bearings: new r.LazyArray(r.int16, t => t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n","import * as r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\n\nlet Correspondence = new r.Struct({\n  fromCoord: shortFrac,\n  toCoord: shortFrac\n});\n\nlet Segment = new r.Struct({\n  pairCount: r.uint16,\n  correspondence: new r.Array(Correspondence, 'pairCount')\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  axisCount: r.uint32,\n  segment: new r.Array(Segment, 'axisCount')\n});\n","import * as r from 'restructure';\n\nclass UnboundedArrayAccessor {\n  constructor(type, stream, parent) {\n    this.type = type;\n    this.stream = stream;\n    this.parent = parent;\n    this.base = this.stream.pos;\n    this._items = [];\n  }\n\n  getItem(index) {\n    if (this._items[index] == null) {\n      let pos = this.stream.pos;\n      this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n      this._items[index] = this.type.decode(this.stream, this.parent);\n      this.stream.pos = pos;\n    }\n\n    return this._items[index];\n  }\n\n  inspect() {\n    return `[UnboundedArray ${this.type.constructor.name}]`;\n  }\n}\n\nexport class UnboundedArray extends r.Array {\n  constructor(type) {\n    super(type, 0);\n  }\n\n  decode(stream, parent) {\n    return new UnboundedArrayAccessor(this.type, stream, parent);\n  }\n}\n\nexport let LookupTable = function(ValueType = r.uint16) {\n  // Helper class that makes internal structures invisible to pointers\n  class Shadow {\n    constructor(type) {\n      this.type = type;\n    }\n\n    decode(stream, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.decode(stream, ctx);\n    }\n\n    size(val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.size(val, ctx);\n    }\n\n    encode(stream, val, ctx) {\n      ctx = ctx.parent.parent;\n      return this.type.encode(stream, val, ctx);\n    }\n  }\n\n  ValueType = new Shadow(ValueType);\n\n  let BinarySearchHeader = new r.Struct({\n    unitSize: r.uint16,\n    nUnits: r.uint16,\n    searchRange: r.uint16,\n    entrySelector: r.uint16,\n    rangeShift: r.uint16\n  });\n\n  let LookupSegmentSingle = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    value: ValueType\n  });\n\n  let LookupSegmentArray = new r.Struct({\n    lastGlyph: r.uint16,\n    firstGlyph: r.uint16,\n    values: new r.Pointer(r.uint16, new r.Array(ValueType, t => t.lastGlyph - t.firstGlyph + 1), {type: 'parent'})\n  });\n\n  let LookupSingle = new r.Struct({\n    glyph: r.uint16,\n    value: ValueType\n  });\n\n  return new r.VersionedStruct(r.uint16, {\n    0: {\n      values: new UnboundedArray(ValueType) // length == number of glyphs maybe?\n    },\n    2: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentSingle, t => t.binarySearchHeader.nUnits)\n    },\n    4: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSegmentArray, t => t.binarySearchHeader.nUnits)\n    },\n    6: {\n      binarySearchHeader: BinarySearchHeader,\n      segments: new r.Array(LookupSingle, t => t.binarySearchHeader.nUnits)\n    },\n    8: {\n      firstGlyph: r.uint16,\n      count: r.uint16,\n      values: new r.Array(ValueType, 'count')\n    }\n  });\n};\n\nexport function StateTable(entryData = {}, lookupType = r.uint16) {\n  let entry = Object.assign({\n    newState: r.uint16,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint16, t => t.nClasses));\n\n  let StateHeader = new r.Struct({\n    nClasses: r.uint32,\n    classTable: new r.Pointer(r.uint32, new LookupTable(lookupType)),\n    stateArray: new r.Pointer(r.uint32, StateArray),\n    entryTable: new r.Pointer(r.uint32, new UnboundedArray(Entry))\n  });\n\n  return StateHeader;\n}\n\n// This is the old version of the StateTable structure\nexport function StateTable1(entryData = {}, lookupType = r.uint16) {\n  let ClassLookupTable = new r.Struct({\n    version() { return 8; }, // simulate LookupTable\n    firstGlyph: r.uint16,\n    values: new r.Array(r.uint8, r.uint16)\n  });\n\n  let entry = Object.assign({\n    newStateOffset: r.uint16,\n    // convert offset to stateArray index\n    newState: t => (t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n    flags: r.uint16\n  }, entryData);\n\n  let Entry = new r.Struct(entry);\n  let StateArray = new UnboundedArray(new r.Array(r.uint8, t => t.nClasses));\n\n  let StateHeader1 = new r.Struct({\n    nClasses: r.uint16,\n    classTable: new r.Pointer(r.uint16, ClassLookupTable),\n    stateArray: new r.Pointer(r.uint16, StateArray),\n    entryTable: new r.Pointer(r.uint16, new UnboundedArray(Entry))\n  });\n\n  return StateHeader1;\n}\n","import * as r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet BslnSubtable = new r.VersionedStruct('format', {\n  0: { // Distance-based, no mapping\n    deltas: new r.Array(r.int16, 32)\n  },\n\n  1: { // Distance-based, with mapping\n    deltas: new r.Array(r.int16, 32),\n    mappingData: new LookupTable(r.uint16)\n  },\n\n  2: { // Control point-based, no mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32)\n  },\n\n  3: { // Control point-based, with mapping\n    standardGlyph: r.uint16,\n    controlPoints: new r.Array(r.uint16, 32),\n    mappingData: new LookupTable(r.uint16)\n  }\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  defaultBaseline: r.uint16,\n  subtable: BslnSubtable\n});\n","import * as r from 'restructure';\n\nlet Setting = new r.Struct({\n  setting: r.uint16,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nlet FeatureName = new r.Struct({\n  feature: r.uint16,\n  nSettings: r.uint16,\n  settingTable: new r.Pointer(r.uint32, new r.Array(Setting, 'nSettings'), { type: 'parent' }),\n  featureFlags: new r.Bitfield(r.uint8, [\n    null, null, null, null, null, null,\n    'hasDefault', 'exclusive'\n  ]),\n  defaultSetting: r.uint8,\n  nameIndex: r.int16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  featureNameCount: r.uint16,\n  reserved1: new r.Reserved(r.uint16),\n  reserved2: new r.Reserved(r.uint32),\n  featureNames: new r.Array(FeatureName, 'featureNameCount')\n});\n","import * as r from 'restructure';\n\nlet Axis = new r.Struct({\n  axisTag: new r.String(4),\n  minValue: r.fixed32,\n  defaultValue: r.fixed32,\n  maxValue: r.fixed32,\n  flags: r.uint16,\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID]\n});\n\nlet Instance = new r.Struct({\n  nameID: r.uint16,\n  name: t => t.parent.parent.name.records.fontFeatures[t.nameID],\n  flags: r.uint16,\n  coord: new r.Array(r.fixed32, t => t.parent.axisCount),\n  postscriptNameID: new r.Optional(r.uint16, t => t.parent.instanceSize - t._currentOffset > 0)\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  offsetToData: r.uint16,\n  countSizePairs: r.uint16,\n  axisCount: r.uint16,\n  axisSize: r.uint16,\n  instanceCount: r.uint16,\n  instanceSize: r.uint16,\n  axis: new r.Array(Axis, 'axisCount'),\n  instance: new r.Array(Instance, 'instanceCount')\n});\n","import * as r from 'restructure';\n\nlet shortFrac = new r.Fixed(16, 'BE', 14);\nclass Offset {\n  static decode(stream, parent) {\n    // In short format, offsets are multiplied by 2.\n    // This doesn't seem to be documented by Apple, but it\n    // is implemented this way in Freetype.\n    return parent.flags\n      ? stream.readUInt32BE()\n      : stream.readUInt16BE() * 2;\n  }\n}\n\nlet gvar = new r.Struct({\n  version: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  axisCount: r.uint16,\n  globalCoordCount: r.uint16,\n  globalCoords: new r.Pointer(r.uint32, new r.Array(new r.Array(shortFrac, 'axisCount'), 'globalCoordCount')),\n  glyphCount: r.uint16,\n  flags: r.uint16,\n  offsetToData: r.uint32,\n  offsets: new r.Array(new r.Pointer(Offset, 'void', { relativeTo: ctx => ctx.offsetToData, allowNull: false }), t => t.glyphCount + 1)\n});\n\nexport default gvar;\n","import * as r from 'restructure';\nimport { LookupTable, StateTable1 } from './aat';\n\nlet ClassTable = new r.Struct({\n  length: r.uint16,\n  coverage: r.uint16,\n  subFeatureFlags: r.uint32,\n  stateTable: new StateTable1\n});\n\nlet WidthDeltaRecord = new r.Struct({\n  justClass: r.uint32,\n  beforeGrowLimit: r.fixed32,\n  beforeShrinkLimit: r.fixed32,\n  afterGrowLimit: r.fixed32,\n  afterShrinkLimit: r.fixed32,\n  growFlags: r.uint16,\n  shrinkFlags: r.uint16\n});\n\nlet WidthDeltaCluster = new r.Array(WidthDeltaRecord, r.uint32);\n\nlet ActionData = new r.VersionedStruct('actionType', {\n  0: { // Decomposition action\n    lowerLimit: r.fixed32,\n    upperLimit: r.fixed32,\n    order: r.uint16,\n    glyphs: new r.Array(r.uint16, r.uint16)\n  },\n\n  1: { // Unconditional add glyph action\n    addGlyph: r.uint16\n  },\n\n  2: { // Conditional add glyph action\n    substThreshold: r.fixed32,\n    addGlyph: r.uint16,\n    substGlyph: r.uint16\n  },\n\n  3: {}, // Stretch glyph action (no data, not supported by CoreText)\n\n  4: { // Ductile glyph action (not supported by CoreText)\n    variationAxis: r.uint32,\n    minimumLimit: r.fixed32,\n    noStretchValue: r.fixed32,\n    maximumLimit: r.fixed32\n  },\n\n  5: { // Repeated add glyph action\n    flags: r.uint16,\n    glyph: r.uint16\n  }\n});\n\nlet Action = new r.Struct({\n  actionClass: r.uint16,\n  actionType: r.uint16,\n  actionLength: r.uint32,\n  actionData: ActionData,\n  padding: new r.Reserved(r.uint8, t => t.actionLength - t._currentOffset)\n});\n\nlet PostcompensationAction = new r.Array(Action, r.uint32);\nlet PostCompensationTable = new r.Struct({\n  lookupTable: new LookupTable(new r.Pointer(r.uint16, PostcompensationAction))\n});\n\nlet JustificationTable = new r.Struct({\n  classTable: new r.Pointer(r.uint16, ClassTable, { type: 'parent' }),\n  wdcOffset: r.uint16,\n  postCompensationTable: new r.Pointer(r.uint16, PostCompensationTable, { type: 'parent' }),\n  widthDeltaClusters: new LookupTable(new r.Pointer(r.uint16, WidthDeltaCluster, { type: 'parent', relativeTo: ctx => ctx.wdcOffset }))\n});\n\nexport default new r.Struct({\n  version: r.uint32,\n  format: r.uint16,\n  horizontal: new r.Pointer(r.uint16, JustificationTable),\n  vertical: new r.Pointer(r.uint16, JustificationTable)\n});\n","import * as r from 'restructure';\nimport { UnboundedArray, LookupTable, StateTable } from './aat';\n\nlet LigatureData = {\n  action: r.uint16\n};\n\nlet ContextualData = {\n  markIndex: r.uint16,\n  currentIndex: r.uint16\n};\n\nlet InsertionData = {\n  currentInsertIndex: r.uint16,\n  markedInsertIndex: r.uint16\n};\n\nlet SubstitutionTable = new r.Struct({\n  items: new UnboundedArray(new r.Pointer(r.uint32, new LookupTable))\n});\n\nlet SubtableData = new r.VersionedStruct('type', {\n  0: { // Indic Rearrangement Subtable\n    stateTable: new StateTable\n  },\n\n  1: { // Contextual Glyph Substitution Subtable\n    stateTable: new StateTable(ContextualData),\n    substitutionTable: new r.Pointer(r.uint32, SubstitutionTable)\n  },\n\n  2: { // Ligature subtable\n    stateTable: new StateTable(LigatureData),\n    ligatureActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint32)),\n    components: new r.Pointer(r.uint32, new UnboundedArray(r.uint16)),\n    ligatureList: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  },\n\n  4: { // Non-contextual Glyph Substitution Subtable\n    lookupTable: new LookupTable\n  },\n\n  5: { // Glyph Insertion Subtable\n    stateTable: new StateTable(InsertionData),\n    insertionActions: new r.Pointer(r.uint32, new UnboundedArray(r.uint16))\n  }\n});\n\nlet Subtable = new r.Struct({\n  length: r.uint32,\n  coverage: r.uint24,\n  type: r.uint8,\n  subFeatureFlags: r.uint32,\n  table: SubtableData,\n  padding: new r.Reserved(r.uint8, t => t.length - t._currentOffset)\n});\n\nlet FeatureEntry = new r.Struct({\n  featureType:    r.uint16,\n  featureSetting: r.uint16,\n  enableFlags:    r.uint32,\n  disableFlags:   r.uint32\n});\n\nlet MorxChain = new r.Struct({\n  defaultFlags:     r.uint32,\n  chainLength:      r.uint32,\n  nFeatureEntries:  r.uint32,\n  nSubtables:       r.uint32,\n  features:         new r.Array(FeatureEntry, 'nFeatureEntries'),\n  subtables:        new r.Array(Subtable, 'nSubtables')\n});\n\nexport default new r.Struct({\n  version:  r.uint16,\n  unused:   new r.Reserved(r.uint16),\n  nChains:  r.uint32,\n  chains:   new r.Array(MorxChain, 'nChains')\n});\n","import * as r from 'restructure';\nimport { LookupTable } from './aat';\n\nlet OpticalBounds = new r.Struct({\n  left: r.int16,\n  top: r.int16,\n  right: r.int16,\n  bottom: r.int16\n});\n\nexport default new r.Struct({\n  version: r.fixed32,\n  format: r.uint16,\n  lookupTable: new LookupTable(OpticalBounds)\n});\n","let tables = {};\nexport default tables;\n\n// Required Tables\nimport cmap from './cmap';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport maxp from './maxp';\nimport name from './name';\nimport OS2 from './OS2';\nimport post from './post';\n\ntables.cmap = cmap;\ntables.head = head;\ntables.hhea = hhea;\ntables.hmtx = hmtx;\ntables.maxp = maxp;\ntables.name = name;\ntables['OS/2'] = OS2;\ntables.post = post;\n\n\n// TrueType Outlines\nimport cvt from './cvt';\nimport fpgm from './fpgm';\nimport loca from './loca';\nimport prep from './prep';\nimport glyf from './glyf';\n\ntables.fpgm = fpgm;\ntables.loca = loca;\ntables.prep = prep;\ntables['cvt '] = cvt;\ntables.glyf = glyf;\n\n\n// PostScript Outlines\nimport CFFFont from '../cff/CFFFont';\nimport VORG from './VORG';\n\ntables['CFF '] = CFFFont;\ntables['CFF2'] = CFFFont;\ntables.VORG = VORG;\n\n\n// Bitmap Glyphs\nimport EBLC from './EBLC';\nimport sbix from './sbix';\nimport COLR from './COLR';\nimport CPAL from './CPAL';\n\ntables.EBLC = EBLC;\ntables.CBLC = tables.EBLC;\ntables.sbix = sbix;\ntables.COLR = COLR;\ntables.CPAL = CPAL;\n\n\n// Advanced OpenType Tables\nimport BASE from './BASE';\nimport GDEF from './GDEF';\nimport GPOS from './GPOS';\nimport GSUB from './GSUB';\nimport JSTF from './JSTF';\n\ntables.BASE = BASE;\ntables.GDEF = GDEF;\ntables.GPOS = GPOS;\ntables.GSUB = GSUB;\ntables.JSTF = JSTF;\n\n// OpenType variations tables\nimport HVAR from './HVAR';\n\ntables.HVAR = HVAR;\n\n// Other OpenType Tables\nimport DSIG from './DSIG';\nimport gasp from './gasp';\nimport hdmx from './hdmx';\nimport kern from './kern';\nimport LTSH from './LTSH';\nimport PCLT from './PCLT';\nimport VDMX from './VDMX';\nimport vhea from './vhea';\nimport vmtx from './vmtx';\n\ntables.DSIG = DSIG;\ntables.gasp = gasp;\ntables.hdmx = hdmx;\ntables.kern = kern;\ntables.LTSH = LTSH;\ntables.PCLT = PCLT;\ntables.VDMX = VDMX;\ntables.vhea = vhea;\ntables.vmtx = vmtx;\n\n\n// Apple Advanced Typography Tables\nimport avar from './avar';\nimport bsln from './bsln';\nimport feat from './feat';\nimport fvar from './fvar';\nimport gvar from './gvar';\nimport just from './just';\nimport morx from './morx';\nimport opbd from './opbd';\n\ntables.avar = avar;\ntables.bsln = bsln;\ntables.feat = feat;\ntables.fvar = fvar;\ntables.gvar = gvar;\ntables.just = just;\ntables.morx = morx;\ntables.opbd = opbd;\n","import * as r from 'restructure';\nimport Tables from './';\n\nlet TableEntry = new r.Struct({\n  tag:        new r.String(4),\n  checkSum:   r.uint32,\n  offset:     new r.Pointer(r.uint32, 'void', { type: 'global' }),\n  length:     r.uint32\n});\n\nlet Directory = new r.Struct({\n  tag:            new r.String(4),\n  numTables:      r.uint16,\n  searchRange:    r.uint16,\n  entrySelector:  r.uint16,\n  rangeShift:     r.uint16,\n  tables:         new r.Array(TableEntry, 'numTables')\n});\n\nDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nDirectory.preEncode = function() {\n  if (!Array.isArray(this.tables)) {\n    let tables = [];\n    for (let tag in this.tables) {\n      let table = this.tables[tag];\n      if (table) {\n        tables.push({\n          tag: tag,\n          checkSum: 0,\n          offset: new r.VoidPointer(Tables[tag], table),\n          length: Tables[tag].size(table)\n        });\n      }\n    }\n    \n    this.tables = tables;\n  }\n\n  this.tag = 'true';\n  this.numTables = this.tables.length;\n\n  let maxExponentFor2 = Math.floor((Math.log(this.numTables) / Math.LN2));\n  let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n\n  this.searchRange =  maxPowerOf2 * 16;\n  this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n  this.rangeShift = this.numTables * 16 - this.searchRange;\n};\n\nexport default Directory;\n","export function binarySearch(arr, cmp) {\n  let min = 0;\n  let max = arr.length - 1;\n  while (min <= max) {\n    let mid = (min + max) >> 1;\n    let res = cmp(arr[mid]);\n\n    if (res < 0) {\n      max = mid - 1;\n    } else if (res > 0) {\n      min = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function range(index, end) {\n  let range = [];\n  while (index < end) {\n    range.push(index++);\n  }\n  return range;\n}\n\nexport const asciiDecoder = new TextDecoder('ascii');\n\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst LOOKUP = new Uint8Array(256);\nfor (let i = 0; i < CHARS.length; i++) {\n  LOOKUP[CHARS.charCodeAt(i)] = i;\n}\n\nexport function decodeBase64(base64) {\n  let bufferLength = base64.length * 0.75;\n\n  if (base64[base64.length - 1] === '=') {\n    bufferLength--;\n    if (base64[base64.length - 2] === '=') {\n      bufferLength--;\n    }\n  }\n\n  let bytes = new Uint8Array(bufferLength);\n  let p = 0;\n\n  for (let i = 0, len = base64.length; i < len; i += 4) {\n    let encoded1 = LOOKUP[base64.charCodeAt(i)];\n    let encoded2 = LOOKUP[base64.charCodeAt(i + 1)];\n    let encoded3 = LOOKUP[base64.charCodeAt(i + 2)];\n    let encoded4 = LOOKUP[base64.charCodeAt(i + 3)];\n\n    bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n    bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n    bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n  }\n\n  return bytes;\n}\n","import { binarySearch } from './utils';\nimport { encodingExists, getEncoding, getEncodingMapping } from './encodings';\nimport { cache } from './decorators';\nimport { range } from './utils';\n\nexport default class CmapProcessor {\n  constructor(cmapTable) {\n    // Attempt to find a Unicode cmap first\n    this.encoding = null;\n    this.cmap = this.findSubtable(cmapTable, [\n      // 32-bit subtables\n      [3, 10],\n      [0, 6],\n      [0, 4],\n\n      // 16-bit subtables\n      [3, 1],\n      [0, 3],\n      [0, 2],\n      [0, 1],\n      [0, 0]\n    ]);\n\n    // If not unicode cmap was found, take the first table with a supported encoding.\n    if (!this.cmap) {\n      for (let cmap of cmapTable.tables) {\n        let encoding = getEncoding(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n        let mapping = getEncodingMapping(encoding);\n        if (mapping) {\n          this.cmap = cmap.table;\n          this.encoding = mapping;\n        }\n      }\n    }\n\n    if (!this.cmap) {\n      throw new Error(\"Could not find a supported cmap table\");\n    }\n\n    this.uvs = this.findSubtable(cmapTable, [[0, 5]]);\n    if (this.uvs && this.uvs.version !== 14) {\n      this.uvs = null;\n    }\n  }\n\n  findSubtable(cmapTable, pairs) {\n    for (let [platformID, encodingID] of pairs) {\n      for (let cmap of cmapTable.tables) {\n        if (cmap.platformID === platformID && cmap.encodingID === encodingID) {\n          return cmap.table;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  lookup(codepoint, variationSelector) {\n    // If there is no Unicode cmap in this font, we need to re-encode\n    // the codepoint in the encoding that the cmap supports.\n    if (this.encoding) {\n      codepoint = this.encoding.get(codepoint) || codepoint;\n\n      // Otherwise, try to get a Unicode variation selector for this codepoint if one is provided.\n    } else if (variationSelector) {\n      let gid = this.getVariationSelector(codepoint, variationSelector);\n      if (gid) {\n        return gid;\n      }\n    }\n\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return cmap.codeMap.get(codepoint) || 0;\n\n      case 4: {\n        let min = 0;\n        let max = cmap.segCount - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n\n          if (codepoint < cmap.startCode.get(mid)) {\n            max = mid - 1;\n          } else if (codepoint > cmap.endCode.get(mid)) {\n            min = mid + 1;\n          } else {\n            let rangeOffset = cmap.idRangeOffset.get(mid);\n            let gid;\n\n            if (rangeOffset === 0) {\n              gid = codepoint + cmap.idDelta.get(mid);\n            } else {\n              let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n              gid = cmap.glyphIndexArray.get(index) || 0;\n              if (gid !== 0) {\n                gid += cmap.idDelta.get(mid);\n              }\n            }\n\n            return gid & 0xffff;\n          }\n        }\n\n        return 0;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n\n      case 12:\n      case 13: {\n        let min = 0;\n        let max = cmap.nGroups - 1;\n        while (min <= max) {\n          let mid = (min + max) >> 1;\n          let group = cmap.groups.get(mid);\n\n          if (codepoint < group.startCharCode) {\n            max = mid - 1;\n          } else if (codepoint > group.endCharCode) {\n            min = mid + 1;\n          } else {\n            if (cmap.version === 12) {\n              return group.glyphID + (codepoint - group.startCharCode);\n            } else {\n              return group.glyphID;\n            }\n          }\n        }\n\n        return 0;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  getVariationSelector(codepoint, variationSelector) {\n    if (!this.uvs) {\n      return 0;\n    }\n\n    let selectors = this.uvs.varSelectors.toArray();\n    let i = binarySearch(selectors, x => variationSelector - x.varSelector);\n    let sel = selectors[i];\n\n    if (i !== -1 && sel.defaultUVS) {\n      i = binarySearch(sel.defaultUVS, x =>\n        codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? +1 : 0\n      );\n    }\n\n    if (i !== -1 && sel.nonDefaultUVS) {\n      i = binarySearch(sel.nonDefaultUVS, x => codepoint - x.unicodeValue);\n      if (i !== -1) {\n        return sel.nonDefaultUVS[i].glyphID;\n      }\n    }\n\n    return 0;\n  }\n\n  @cache\n  getCharacterSet() {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0:\n        return range(0, cmap.codeMap.length);\n\n      case 4: {\n        let res = [];\n        let endCodes = cmap.endCode.toArray();\n        for (let i = 0; i < endCodes.length; i++) {\n          let tail = endCodes[i] + 1;\n          let start = cmap.startCode.get(i);\n          res.push(...range(start, tail));\n        }\n\n        return res;\n      }\n\n      case 8:\n        throw new Error('TODO: cmap format 8');\n\n      case 6:\n      case 10:\n        return range(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n\n      case 12:\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          res.push(...range(group.startCharCode, group.endCharCode + 1));\n        }\n\n        return res;\n      }\n\n      case 14:\n        throw new Error('TODO: cmap format 14');\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n\n  @cache\n  codePointsForGlyph(gid) {\n    let cmap = this.cmap;\n    switch (cmap.version) {\n      case 0: {\n        let res = [];\n        for (let i = 0; i < 256; i++) {\n          if (cmap.codeMap.get(i) === gid) {\n            res.push(i);\n          }\n        }\n\n        return res;\n      }\n\n      case 4: {\n        let res = [];\n        for (let i = 0; i < cmap.segCount; i++) {\n          let end = cmap.endCode.get(i);\n          let start = cmap.startCode.get(i);\n          let rangeOffset = cmap.idRangeOffset.get(i);\n          let delta = cmap.idDelta.get(i);\n\n          for (var c = start; c <= end; c++) {\n            let g = 0;\n            if (rangeOffset === 0) {\n              g = c + delta;\n            } else {\n              let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n              g = cmap.glyphIndexArray.get(index) || 0;\n              if (g !== 0) {\n                g += delta;\n              }\n            }\n\n            if (g === gid) {\n              res.push(c);\n            }\n          }\n        }\n\n        return res;\n      }\n\n      case 12: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) {\n            res.push(group.startCharCode + (gid - group.glyphID));\n          }\n        }\n\n        return res;\n      }\n\n      case 13: {\n        let res = [];\n        for (let group of cmap.groups.toArray()) {\n          if (gid === group.glyphID) {\n            res.push(...range(group.startCharCode, group.endCharCode + 1));\n          }\n        }\n\n        return res;\n      }\n\n      default:\n        throw new Error(`Unknown cmap format ${cmap.version}`);\n    }\n  }\n}\n","import {binarySearch} from '../utils';\n\nexport default class KernProcessor {\n  constructor(font) {\n    this.kern = font.kern;\n  }\n\n  process(glyphs, positions) {\n    for (let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++) {\n      let left = glyphs[glyphIndex].id;\n      let right = glyphs[glyphIndex + 1].id;\n      positions[glyphIndex].xAdvance += this.getKerning(left, right);\n    }\n  }\n\n  getKerning(left, right) {\n    let res = 0;\n\n    for (let table of this.kern.tables) {\n      if (table.coverage.crossStream) {\n        continue;\n      }\n\n      switch (table.version) {\n        case 0:\n          if (!table.coverage.horizontal) {\n            continue;\n          }\n\n          break;\n        case 1:\n          if (table.coverage.vertical || table.coverage.variation) {\n            continue;\n          }\n\n          break;\n        default:\n          throw new Error(`Unsupported kerning table version ${table.version}`);\n      }\n\n      let val = 0;\n      let s = table.subtable;\n      switch (table.format) {\n        case 0:\n          let pairIdx = binarySearch(s.pairs, function (pair) {\n            return (left - pair.left) || (right - pair.right);\n          });\n\n          if (pairIdx >= 0) {\n            val = s.pairs[pairIdx].value;\n          }\n\n          break;\n\n        case 2:\n          let leftOffset = 0, rightOffset = 0;\n          if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) {\n            leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n          } else {\n            leftOffset = s.array.off;\n          }\n\n          if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) {\n            rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n          }\n\n          let index = (leftOffset + rightOffset - s.array.off) / 2;\n          val = s.array.values.get(index);\n          break;\n\n        case 3:\n          if (left >= s.glyphCount || right >= s.glyphCount) {\n            return 0;\n          }\n\n          val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n          break;\n\n        default:\n          throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n      }\n\n      // Microsoft supports the override flag, which resets the result\n      // Otherwise, the sum of the results from all subtables is returned\n      if (table.coverage.override) {\n        res = val;\n      } else {\n        res += val;\n      }\n    }\n\n    return res;\n  }\n}\n","import {getCombiningClass} from 'unicode-properties';\n\n/**\n * This class is used when GPOS does not define 'mark' or 'mkmk' features\n * for positioning marks relative to base glyphs. It uses the unicode\n * combining class property to position marks.\n *\n * Based on code from Harfbuzz, thanks!\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-fallback.cc\n */\nexport default class UnicodeLayoutEngine {\n  constructor(font) {\n    this.font = font;\n  }\n\n  positionGlyphs(glyphs, positions) {\n    // find each base + mark cluster, and position the marks relative to the base\n    let clusterStart = 0;\n    let clusterEnd = 0;\n    for (let index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.isMark) { // TODO: handle ligatures\n        clusterEnd = index;\n      } else {\n        if (clusterStart !== clusterEnd) {\n          this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        }\n\n        clusterStart = clusterEnd = index;\n      }\n    }\n\n    if (clusterStart !== clusterEnd) {\n      this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n    }\n\n    return positions;\n  }\n\n  positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n    let base = glyphs[clusterStart];\n    let baseBox = base.cbox.copy();\n\n    // adjust bounding box for ligature glyphs\n    if (base.codePoints.length > 1) {\n      // LTR. TODO: RTL support.\n      baseBox.minX += ((base.codePoints.length - 1) * baseBox.width) / base.codePoints.length;\n    }\n\n    let xOffset = -positions[clusterStart].xAdvance;\n    let yOffset = 0;\n    let yGap = this.font.unitsPerEm / 16;\n\n    // position each of the mark glyphs relative to the base glyph\n    for (let index = clusterStart + 1; index <= clusterEnd; index++) {\n      let mark = glyphs[index];\n      let markBox = mark.cbox;\n      let position = positions[index];\n\n      let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n\n      if (combiningClass !== 'Not_Reordered') {\n        position.xOffset = position.yOffset = 0;\n\n        // x positioning\n        switch (combiningClass) {\n          case 'Double_Above':\n          case 'Double_Below':\n            // LTR. TODO: RTL support.\n            position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n            break;\n\n          case 'Attached_Below_Left':\n          case 'Below_Left':\n          case 'Above_Left':\n            // left align\n            position.xOffset += baseBox.minX - markBox.minX;\n            break;\n\n          case 'Attached_Above_Right':\n          case 'Below_Right':\n          case 'Above_Right':\n            // right align\n            position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n            break;\n\n          default: // Attached_Below, Attached_Above, Below, Above, other\n            // center align\n            position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n        }\n\n        // y positioning\n        switch (combiningClass) {\n          case 'Double_Below':\n          case 'Below_Left':\n          case 'Below':\n          case 'Below_Right':\n          case 'Attached_Below_Left':\n          case 'Attached_Below':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Below_Left' || combiningClass === 'Attached_Below') {\n              baseBox.minY += yGap;\n            }\n\n            position.yOffset = -baseBox.minY - markBox.maxY;\n            baseBox.minY += markBox.height;\n            break;\n\n          case 'Double_Above':\n          case 'Above_Left':\n          case 'Above':\n          case 'Above_Right':\n          case 'Attached_Above':\n          case 'Attached_Above_Right':\n            // add a small gap between the glyphs if they are not attached\n            if (combiningClass === 'Attached_Above' || combiningClass === 'Attached_Above_Right') {\n              baseBox.maxY += yGap;\n            }\n\n            position.yOffset = baseBox.maxY - markBox.minY;\n            baseBox.maxY += markBox.height;\n            break;\n        }\n\n        position.xAdvance = position.yAdvance = 0;\n        position.xOffset += xOffset;\n        position.yOffset += yOffset;\n\n      } else {\n        xOffset -= position.xAdvance;\n        yOffset -= position.yAdvance;\n      }\n    }\n\n    return;\n  }\n\n  getCombiningClass(codePoint) {\n    let combiningClass = getCombiningClass(codePoint);\n\n    // Thai / Lao need some per-character work\n    if ((codePoint & ~0xff) === 0x0e00) {\n      if (combiningClass === 'Not_Reordered') {\n        switch (codePoint) {\n          case 0x0e31:\n          case 0x0e34:\n          case 0x0e35:\n          case 0x0e36:\n          case 0x0e37:\n          case 0x0e47:\n          case 0x0e4c:\n          case 0x0e3d:\n          case 0x0e4e:\n            return 'Above_Right';\n\n          case 0x0eb1:\n          case 0x0eb4:\n          case 0x0eb5:\n          case 0x0eb6:\n          case 0x0eb7:\n          case 0x0ebb:\n          case 0x0ecc:\n          case 0x0ecd:\n            return 'Above';\n\n          case 0x0ebc:\n            return 'Below';\n        }\n      } else if (codePoint === 0x0e3a) { // virama\n        return 'Below_Right';\n      }\n    }\n\n    switch (combiningClass) {\n      // Hebrew\n\n      case 'CCC10': // sheva\n      case 'CCC11': // hataf segol\n      case 'CCC12': // hataf patah\n      case 'CCC13': // hataf qamats\n      case 'CCC14': // hiriq\n      case 'CCC15': // tsere\n      case 'CCC16': // segol\n      case 'CCC17': // patah\n      case 'CCC18': // qamats\n      case 'CCC20': // qubuts\n      case 'CCC22': // meteg\n        return 'Below';\n\n      case 'CCC23': // rafe\n        return 'Attached_Above';\n\n      case 'CCC24': // shin dot\n        return 'Above_Right';\n\n      case 'CCC25': // sin dot\n      case 'CCC19': // holam\n        return 'Above_Left';\n\n      case 'CCC26': // point varika\n        return 'Above';\n\n      case 'CCC21': // dagesh\n        break;\n\n      // Arabic and Syriac\n\n      case 'CCC27': // fathatan\n      case 'CCC28': // dammatan\n      case 'CCC30': // fatha\n      case 'CCC31': // damma\n      case 'CCC33': // shadda\n      case 'CCC34': // sukun\n      case 'CCC35': // superscript alef\n      case 'CCC36': // superscript alaph\n        return 'Above';\n\n      case 'CCC29': // kasratan\n      case 'CCC32': // kasra\n        return 'Below';\n\n      // Thai\n\n      case 'CCC103': // sara u / sara uu\n        return 'Below_Right';\n\n      case 'CCC107': // mai\n        return 'Above_Right';\n\n      // Lao\n\n      case 'CCC118': // sign u / sign uu\n        return 'Below';\n\n      case 'CCC122': // mai\n        return 'Above';\n\n      // Tibetan\n\n      case 'CCC129': // sign aa\n      case 'CCC132': // sign u\n        return 'Below';\n\n      case 'CCC130': // sign i\n        return 'Above';\n    }\n\n    return combiningClass;\n  }\n}\n","/**\n * Represents a glyph bounding box\n */\nexport default class BBox {\n  constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity) {\n    /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * The width of the bounding box\n   * @type {number}\n   */\n  get width() {\n    return this.maxX - this.minX;\n  }\n\n  /**\n   * The height of the bounding box\n   * @type {number}\n   */\n  get height() {\n    return this.maxY - this.minY;\n  }\n\n  addPoint(x, y) {\n    if (Math.abs(x) !== Infinity) {\n      if (x < this.minX) {\n        this.minX = x;\n      }\n\n      if (x > this.maxX) {\n        this.maxX = x;\n      }\n    }\n\n    if (Math.abs(y) !== Infinity) {\n      if (y < this.minY) {\n        this.minY = y;\n      }\n\n      if (y > this.maxY) {\n        this.maxY = y;\n      }\n    }\n  }\n\n  copy() {\n    return new BBox(this.minX, this.minY, this.maxX, this.maxY);\n  }\n}\n","import {getScript} from 'unicode-properties';\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst UNICODE_SCRIPTS = {\n  Caucasian_Albanian: 'aghb',\n  Arabic: 'arab',\n  Imperial_Aramaic: 'armi',\n  Armenian: 'armn',\n  Avestan: 'avst',\n  Balinese: 'bali',\n  Bamum: 'bamu',\n  Bassa_Vah: 'bass',\n  Batak: 'batk',\n  Bengali: ['bng2', 'beng'],\n  Bopomofo: 'bopo',\n  Brahmi: 'brah',\n  Braille: 'brai',\n  Buginese: 'bugi',\n  Buhid: 'buhd',\n  Chakma: 'cakm',\n  Canadian_Aboriginal: 'cans',\n  Carian: 'cari',\n  Cham: 'cham',\n  Cherokee: 'cher',\n  Coptic: 'copt',\n  Cypriot: 'cprt',\n  Cyrillic: 'cyrl',\n  Devanagari: ['dev2', 'deva'],\n  Deseret: 'dsrt',\n  Duployan: 'dupl',\n  Egyptian_Hieroglyphs: 'egyp',\n  Elbasan: 'elba',\n  Ethiopic: 'ethi',\n  Georgian: 'geor',\n  Glagolitic: 'glag',\n  Gothic: 'goth',\n  Grantha: 'gran',\n  Greek: 'grek',\n  Gujarati: ['gjr2', 'gujr'],\n  Gurmukhi: ['gur2', 'guru'],\n  Hangul: 'hang',\n  Han: 'hani',\n  Hanunoo: 'hano',\n  Hebrew: 'hebr',\n  Hiragana: 'hira',\n  Pahawh_Hmong: 'hmng',\n  Katakana_Or_Hiragana: 'hrkt',\n  Old_Italic: 'ital',\n  Javanese: 'java',\n  Kayah_Li: 'kali',\n  Katakana: 'kana',\n  Kharoshthi: 'khar',\n  Khmer: 'khmr',\n  Khojki: 'khoj',\n  Kannada: ['knd2', 'knda'],\n  Kaithi: 'kthi',\n  Tai_Tham: 'lana',\n  Lao: 'lao ',\n  Latin: 'latn',\n  Lepcha: 'lepc',\n  Limbu: 'limb',\n  Linear_A: 'lina',\n  Linear_B: 'linb',\n  Lisu: 'lisu',\n  Lycian: 'lyci',\n  Lydian: 'lydi',\n  Mahajani: 'mahj',\n  Mandaic: 'mand',\n  Manichaean: 'mani',\n  Mende_Kikakui: 'mend',\n  Meroitic_Cursive: 'merc',\n  Meroitic_Hieroglyphs: 'mero',\n  Malayalam: ['mlm2', 'mlym'],\n  Modi: 'modi',\n  Mongolian: 'mong',\n  Mro: 'mroo',\n  Meetei_Mayek: 'mtei',\n  Myanmar: ['mym2', 'mymr'],\n  Old_North_Arabian: 'narb',\n  Nabataean: 'nbat',\n  Nko: 'nko ',\n  Ogham: 'ogam',\n  Ol_Chiki: 'olck',\n  Old_Turkic: 'orkh',\n  Oriya: ['ory2', 'orya'],\n  Osmanya: 'osma',\n  Palmyrene: 'palm',\n  Pau_Cin_Hau: 'pauc',\n  Old_Permic: 'perm',\n  Phags_Pa: 'phag',\n  Inscriptional_Pahlavi: 'phli',\n  Psalter_Pahlavi: 'phlp',\n  Phoenician: 'phnx',\n  Miao: 'plrd',\n  Inscriptional_Parthian: 'prti',\n  Rejang: 'rjng',\n  Runic: 'runr',\n  Samaritan: 'samr',\n  Old_South_Arabian: 'sarb',\n  Saurashtra: 'saur',\n  Shavian: 'shaw',\n  Sharada: 'shrd',\n  Siddham: 'sidd',\n  Khudawadi: 'sind',\n  Sinhala: 'sinh',\n  Sora_Sompeng: 'sora',\n  Sundanese: 'sund',\n  Syloti_Nagri: 'sylo',\n  Syriac: 'syrc',\n  Tagbanwa: 'tagb',\n  Takri: 'takr',\n  Tai_Le: 'tale',\n  New_Tai_Lue: 'talu',\n  Tamil: ['tml2', 'taml'],\n  Tai_Viet: 'tavt',\n  Telugu: ['tel2', 'telu'],\n  Tifinagh: 'tfng',\n  Tagalog: 'tglg',\n  Thaana: 'thaa',\n  Thai: 'thai',\n  Tibetan: 'tibt',\n  Tirhuta: 'tirh',\n  Ugaritic: 'ugar',\n  Vai: 'vai ',\n  Warang_Citi: 'wara',\n  Old_Persian: 'xpeo',\n  Cuneiform: 'xsux',\n  Yi: 'yi  ',\n  Inherited: 'zinh',\n  Common: 'zyyy',\n  Unknown: 'zzzz'\n};\n\nconst OPENTYPE_SCRIPTS = {};\nfor (let script in UNICODE_SCRIPTS) {\n  let tag = UNICODE_SCRIPTS[script];\n  if (Array.isArray(tag)) {\n    for (let t of tag) {\n      OPENTYPE_SCRIPTS[t] = script;\n    }\n  } else {\n    OPENTYPE_SCRIPTS[tag] = script;\n  }\n}\n\nexport function fromUnicode(script) {\n  return UNICODE_SCRIPTS[script];\n}\n\nexport function fromOpenType(tag) {\n  return OPENTYPE_SCRIPTS[tag];\n}\n\nexport function forString(string) {\n  let len = string.length;\n  let idx = 0;\n  while (idx < len) {\n    let code = string.charCodeAt(idx++);\n\n    // Check if this is a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < len) {\n      let next = string.charCodeAt(idx);\n\n      // Check if this is a low surrogate\n      if (0xdc00 <= next && next <= 0xdfff) {\n        idx++;\n        code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n      }\n    }\n\n    let script = getScript(code);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\nexport function forCodePoints(codePoints) {\n  for (let i = 0; i < codePoints.length; i++) {\n    let codePoint = codePoints[i];\n    let script = getScript(codePoint);\n    if (script !== 'Common' && script !== 'Inherited' && script !== 'Unknown') {\n      return UNICODE_SCRIPTS[script];\n    }\n  }\n\n  return UNICODE_SCRIPTS.Unknown;\n}\n\n// The scripts in this map are written from right to left\nconst RTL = {\n  arab: true,   // Arabic\n  hebr: true,   // Hebrew\n  syrc: true,   // Syriac\n  thaa: true,   // Thaana\n  cprt: true,   // Cypriot Syllabary\n  khar: true,   // Kharosthi\n  phnx: true,   // Phoenician\n  'nko ': true, // N'Ko\n  lydi: true,   // Lydian\n  avst: true,   // Avestan\n  armi: true,   // Imperial Aramaic\n  phli: true,   // Inscriptional Pahlavi\n  prti: true,   // Inscriptional Parthian\n  sarb: true,   // Old South Arabian\n  orkh: true,   // Old Turkic, Orkhon Runic\n  samr: true,   // Samaritan\n  mand: true,   // Mandaic, Mandaean\n  merc: true,   // Meroitic Cursive\n  mero: true,   // Meroitic Hieroglyphs\n\n  // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n  mani: true,   // Manichaean\n  mend: true,   // Mende Kikakui\n  nbat: true,   // Nabataean\n  narb: true,   // Old North Arabian\n  palm: true,   // Palmyrene\n  phlp: true    // Psalter Pahlavi\n};\n\nexport function direction(script) {\n  if (RTL[script]) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n","import BBox from '../glyph/BBox';\nimport * as Script from '../layout/Script';\n\n/**\n * Represents a run of Glyph and GlyphPosition objects.\n * Returned by the font layout method.\n */\nexport default class GlyphRun {\n  constructor(glyphs, features, script, language, direction) {\n    /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */\n    this.glyphs = glyphs;\n\n    /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */\n    this.positions = null;\n\n    /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */\n    this.script = script;\n\n    /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */\n    this.language = language || null;\n\n    /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */\n    this.direction = direction || Script.direction(script);\n\n    /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */\n    this.features = {};\n\n    // Convert features to an object\n    if (Array.isArray(features)) {\n      for (let tag of features) {\n        this.features[tag] = true;\n      }\n    } else if (typeof features === 'object') {\n      this.features = features;\n    }\n  }\n\n  /**\n   * The total advance width of the run.\n   * @type {number}\n   */\n  get advanceWidth() {\n    let width = 0;\n    for (let position of this.positions) {\n      width += position.xAdvance;\n    }\n\n    return width;\n  }\n\n /**\n  * The total advance height of the run.\n  * @type {number}\n  */\n  get advanceHeight() {\n    let height = 0;\n    for (let position of this.positions) {\n      height += position.yAdvance;\n    }\n\n    return height;\n  }\n\n /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */\n  get bbox() {\n    let bbox = new BBox;\n\n    let x = 0;\n    let y = 0;\n    for (let index = 0; index < this.glyphs.length; index++) {\n      let glyph = this.glyphs[index];\n      let p = this.positions[index];\n      let b = glyph.bbox;\n\n      bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n      bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n\n      x += p.xAdvance;\n      y += p.yAdvance;\n    }\n\n    return bbox;\n  }\n}\n","/**\n * Represents positioning information for a glyph in a GlyphRun.\n */\nexport default class GlyphPosition {\n  constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0) {\n    /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */\n    this.xAdvance = xAdvance;\n\n    /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */\n    this.yAdvance = yAdvance;\n\n    /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */\n    this.xOffset = xOffset;\n\n    /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */\n    this.yOffset = yOffset;\n  }\n}\n","// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst features = {\n  allTypographicFeatures: {\n    code: 0,\n    exclusive: false,\n    allTypeFeatures: 0\n  },\n  ligatures: {\n    code: 1,\n    exclusive: false,\n    requiredLigatures: 0,\n    commonLigatures: 2,\n    rareLigatures: 4,\n    // logos: 6\n    rebusPictures: 8,\n    diphthongLigatures: 10,\n    squaredLigatures: 12,\n    abbrevSquaredLigatures: 14,\n    symbolLigatures: 16,\n    contextualLigatures: 18,\n    historicalLigatures: 20\n  },\n  cursiveConnection: {\n    code: 2,\n    exclusive: true,\n    unconnected: 0,\n    partiallyConnected: 1,\n    cursive: 2\n  },\n  letterCase: {\n    code: 3,\n    exclusive: true\n  },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n  verticalSubstitution: {\n    code: 4,\n    exclusive: false,\n    substituteVerticalForms: 0\n  },\n  linguisticRearrangement: {\n    code: 5,\n    exclusive: false,\n    linguisticRearrangement: 0\n  },\n  numberSpacing: {\n    code: 6,\n    exclusive: true,\n    monospacedNumbers: 0,\n    proportionalNumbers: 1,\n    thirdWidthNumbers: 2,\n    quarterWidthNumbers: 3\n  },\n  smartSwash: {\n    code: 8,\n    exclusive: false,\n    wordInitialSwashes: 0,\n    wordFinalSwashes: 2,\n    // lineInitialSwashes: 4\n    // lineFinalSwashes: 6\n    nonFinalSwashes: 8\n  },\n  diacritics: {\n    code: 9,\n    exclusive: true,\n    showDiacritics: 0,\n    hideDiacritics: 1,\n    decomposeDiacritics: 2\n  },\n  verticalPosition: {\n    code: 10,\n    exclusive: true,\n    normalPosition: 0,\n    superiors: 1,\n    inferiors: 2,\n    ordinals: 3,\n    scientificInferiors: 4\n  },\n  fractions: {\n    code: 11,\n    exclusive: true,\n    noFractions: 0,\n    verticalFractions: 1,\n    diagonalFractions: 2\n  },\n  overlappingCharacters: {\n    code: 13,\n    exclusive: false,\n    preventOverlap: 0\n  },\n  typographicExtras: {\n    code: 14,\n    exclusive: false,\n    // hyphensToEmDash: 0\n    // hyphenToEnDash: 2\n    slashedZero: 4\n  },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n  mathematicalExtras: {\n    code: 15,\n    exclusive: false,\n    // hyphenToMinus: 0\n    // asteristoMultiply: 2\n    // slashToDivide: 4\n    // inequalityLigatures: 6\n    // exponents: 8\n    mathematicalGreek: 10\n  },\n  ornamentSets: {\n    code: 16,\n    exclusive: true,\n    noOrnaments: 0,\n    dingbats: 1,\n    piCharacters: 2,\n    fleurons: 3,\n    decorativeBorders: 4,\n    internationalSymbols: 5,\n    mathSymbols: 6\n  },\n  characterAlternatives: {\n    code: 17,\n    exclusive: true,\n    noAlternates: 0\n  },\n    // user defined options\n  designComplexity: {\n    code: 18,\n    exclusive: true,\n    designLevel1: 0,\n    designLevel2: 1,\n    designLevel3: 2,\n    designLevel4: 3,\n    designLevel5: 4\n  },\n  styleOptions: {\n    code: 19,\n    exclusive: true,\n    noStyleOptions: 0,\n    displayText: 1,\n    engravedText: 2,\n    illuminatedCaps: 3,\n    titlingCaps: 4,\n    tallCaps: 5\n  },\n  characterShape: {\n    code: 20,\n    exclusive: true,\n    traditionalCharacters: 0,\n    simplifiedCharacters: 1,\n    JIS1978Characters: 2,\n    JIS1983Characters: 3,\n    JIS1990Characters: 4,\n    traditionalAltOne: 5,\n    traditionalAltTwo: 6,\n    traditionalAltThree: 7,\n    traditionalAltFour: 8,\n    traditionalAltFive: 9,\n    expertCharacters: 10,\n    JIS2004Characters: 11,\n    hojoCharacters: 12,\n    NLCCharacters: 13,\n    traditionalNamesCharacters: 14\n  },\n  numberCase: {\n    code: 21,\n    exclusive: true,\n    lowerCaseNumbers: 0,\n    upperCaseNumbers: 1\n  },\n  textSpacing: {\n    code: 22,\n    exclusive: true,\n    proportionalText: 0,\n    monospacedText: 1,\n    halfWidthText: 2,\n    thirdWidthText: 3,\n    quarterWidthText: 4,\n    altProportionalText: 5,\n    altHalfWidthText: 6\n  },\n  transliteration: {\n    code: 23,\n    exclusive: true,\n    noTransliteration: 0\n  },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n  annotation: {\n    code: 24,\n    exclusive: true,\n    noAnnotation: 0,\n    boxAnnotation: 1,\n    roundedBoxAnnotation: 2,\n    circleAnnotation: 3,\n    invertedCircleAnnotation: 4,\n    parenthesisAnnotation: 5,\n    periodAnnotation: 6,\n    romanNumeralAnnotation: 7,\n    diamondAnnotation: 8,\n    invertedBoxAnnotation: 9,\n    invertedRoundedBoxAnnotation: 10\n  },\n  kanaSpacing: {\n    code: 25,\n    exclusive: true,\n    fullWidthKana: 0,\n    proportionalKana: 1\n  },\n  ideographicSpacing: {\n    code: 26,\n    exclusive: true,\n    fullWidthIdeographs: 0,\n    proportionalIdeographs: 1,\n    halfWidthIdeographs: 2\n  },\n  unicodeDecomposition: {\n    code: 27,\n    exclusive: false,\n    canonicalComposition: 0,\n    compatibilityComposition: 2,\n    transcodingComposition: 4\n  },\n  rubyKana: {\n    code: 28,\n    exclusive: false,\n    // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n    // rubyKana: 1     # deprecated - use rubyKanaOn instead\n    rubyKana: 2\n  },\n  CJKSymbolAlternatives: {\n    code: 29,\n    exclusive: true,\n    noCJKSymbolAlternatives: 0,\n    CJKSymbolAltOne: 1,\n    CJKSymbolAltTwo: 2,\n    CJKSymbolAltThree: 3,\n    CJKSymbolAltFour: 4,\n    CJKSymbolAltFive: 5\n  },\n  ideographicAlternatives: {\n    code: 30,\n    exclusive: true,\n    noIdeographicAlternatives: 0,\n    ideographicAltOne: 1,\n    ideographicAltTwo: 2,\n    ideographicAltThree: 3,\n    ideographicAltFour: 4,\n    ideographicAltFive: 5\n  },\n  CJKVerticalRomanPlacement: {\n    code: 31,\n    exclusive: true,\n    CJKVerticalRomanCentered: 0,\n    CJKVerticalRomanHBaseline: 1\n  },\n  italicCJKRoman: {\n    code: 32,\n    exclusive: false,\n    // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n    // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n    CJKItalicRoman: 2\n  },\n  caseSensitiveLayout: {\n    code: 33,\n    exclusive: false,\n    caseSensitiveLayout: 0,\n    caseSensitiveSpacing: 2\n  },\n  alternateKana: {\n    code: 34,\n    exclusive: false,\n    alternateHorizKana: 0,\n    alternateVertKana: 2\n  },\n  stylisticAlternatives: {\n    code: 35,\n    exclusive: false,\n    noStylisticAlternates: 0,\n    stylisticAltOne: 2,\n    stylisticAltTwo: 4,\n    stylisticAltThree: 6,\n    stylisticAltFour: 8,\n    stylisticAltFive: 10,\n    stylisticAltSix: 12,\n    stylisticAltSeven: 14,\n    stylisticAltEight: 16,\n    stylisticAltNine: 18,\n    stylisticAltTen: 20,\n    stylisticAltEleven: 22,\n    stylisticAltTwelve: 24,\n    stylisticAltThirteen: 26,\n    stylisticAltFourteen: 28,\n    stylisticAltFifteen: 30,\n    stylisticAltSixteen: 32,\n    stylisticAltSeventeen: 34,\n    stylisticAltEighteen: 36,\n    stylisticAltNineteen: 38,\n    stylisticAltTwenty: 40\n  },\n  contextualAlternates: {\n    code: 36,\n    exclusive: false,\n    contextualAlternates: 0,\n    swashAlternates: 2,\n    contextualSwashAlternates: 4\n  },\n  lowerCase: {\n    code: 37,\n    exclusive: true,\n    defaultLowerCase: 0,\n    lowerCaseSmallCaps: 1,\n    lowerCasePetiteCaps: 2\n  },\n  upperCase: {\n    code: 38,\n    exclusive: true,\n    defaultUpperCase: 0,\n    upperCaseSmallCaps: 1,\n    upperCasePetiteCaps: 2\n  },\n  languageTag: { // indices into ltag table\n    code: 39,\n    exclusive: true\n  },\n  CJKRomanSpacing: {\n    code: 103,\n    exclusive: true,\n    halfWidthCJKRoman: 0,\n    proportionalCJKRoman: 1,\n    defaultCJKRoman: 2,\n    fullWidthCJKRoman: 3\n  }\n};\n\nconst feature = (name, selector) => [features[name].code, features[name][selector]];\n\nconst OTMapping = {\n  rlig: feature('ligatures', 'requiredLigatures'),\n  clig: feature('ligatures', 'contextualLigatures'),\n  dlig: feature('ligatures', 'rareLigatures'),\n  hlig: feature('ligatures', 'historicalLigatures'),\n  liga: feature('ligatures', 'commonLigatures'),\n  hist: feature('ligatures', 'historicalLigatures'), // ??\n\n  smcp: feature('lowerCase', 'lowerCaseSmallCaps'),\n  pcap: feature('lowerCase', 'lowerCasePetiteCaps'),\n\n  frac: feature('fractions', 'diagonalFractions'),\n  dnom: feature('fractions', 'diagonalFractions'), // ??\n  numr: feature('fractions', 'diagonalFractions'), // ??\n  afrc: feature('fractions', 'verticalFractions'),\n  // aalt\n  // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n  // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n  // unic, vatu, vhal, vjmo, vpal, vrt2\n  // dist -> trak table?\n  // kern, vkrn -> kern table\n  // lfbd + opbd + rtbd -> opbd table?\n  // mark, mkmk -> acnt table?\n  // locl -> languageTag + ltag table\n\n  case: feature('caseSensitiveLayout', 'caseSensitiveLayout'), // also caseSensitiveSpacing\n  ccmp: feature('unicodeDecomposition', 'canonicalComposition'), // compatibilityComposition?\n  cpct: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'), // guess..., probably not given below\n  valt: feature('CJKVerticalRomanPlacement', 'CJKVerticalRomanCentered'),\n  swsh: feature('contextualAlternates', 'swashAlternates'),\n  cswh: feature('contextualAlternates', 'contextualSwashAlternates'),\n  curs: feature('cursiveConnection', 'cursive'), // ??\n  c2pc: feature('upperCase', 'upperCasePetiteCaps'),\n  c2sc: feature('upperCase', 'upperCaseSmallCaps'),\n\n  init: feature('smartSwash', 'wordInitialSwashes'), // ??\n  fin2: feature('smartSwash', 'wordFinalSwashes'), // ??\n  medi: feature('smartSwash', 'nonFinalSwashes'), // ??\n  med2: feature('smartSwash', 'nonFinalSwashes'), // ??\n  fin3: feature('smartSwash', 'wordFinalSwashes'), // ??\n  fina: feature('smartSwash', 'wordFinalSwashes'), // ??\n\n  pkna: feature('kanaSpacing', 'proportionalKana'),\n  half: feature('textSpacing', 'halfWidthText'), // also HalfWidthCJKRoman, HalfWidthIdeographs?\n  halt: feature('textSpacing', 'altHalfWidthText'),\n\n  hkna: feature('alternateKana', 'alternateHorizKana'),\n  vkna: feature('alternateKana', 'alternateVertKana'),\n  // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n\n  ital: feature('italicCJKRoman', 'CJKItalicRoman'),\n  lnum: feature('numberCase', 'upperCaseNumbers'),\n  onum: feature('numberCase', 'lowerCaseNumbers'),\n  mgrk: feature('mathematicalExtras', 'mathematicalGreek'),\n\n  // nalt: not enough info. what type of annotation?\n  // ornm: ditto, which ornament style?\n\n  calt: feature('contextualAlternates', 'contextualAlternates'), // or more?\n  vrt2: feature('verticalSubstitution', 'substituteVerticalForms'), // oh... below?\n  vert: feature('verticalSubstitution', 'substituteVerticalForms'),\n  tnum: feature('numberSpacing', 'monospacedNumbers'),\n  pnum: feature('numberSpacing', 'proportionalNumbers'),\n  sups: feature('verticalPosition', 'superiors'),\n  subs: feature('verticalPosition', 'inferiors'),\n  ordn: feature('verticalPosition', 'ordinals'),\n  pwid: feature('textSpacing', 'proportionalText'),\n  hwid: feature('textSpacing', 'halfWidthText'),\n  qwid: feature('textSpacing', 'quarterWidthText'), // also QuarterWidthNumbers?\n  twid: feature('textSpacing', 'thirdWidthText'), // also ThirdWidthNumbers?\n  fwid: feature('textSpacing', 'proportionalText'), //??\n  palt: feature('textSpacing', 'altProportionalText'),\n  trad: feature('characterShape', 'traditionalCharacters'),\n  smpl: feature('characterShape', 'simplifiedCharacters'),\n  jp78: feature('characterShape', 'JIS1978Characters'),\n  jp83: feature('characterShape', 'JIS1983Characters'),\n  jp90: feature('characterShape', 'JIS1990Characters'),\n  jp04: feature('characterShape', 'JIS2004Characters'),\n  expt: feature('characterShape', 'expertCharacters'),\n  hojo: feature('characterShape', 'hojoCharacters'),\n  nlck: feature('characterShape', 'NLCCharacters'),\n  tnam: feature('characterShape', 'traditionalNamesCharacters'),\n  ruby: feature('rubyKana', 'rubyKana'),\n  titl: feature('styleOptions', 'titlingCaps'),\n  zero: feature('typographicExtras', 'slashedZero'),\n\n  ss01: feature('stylisticAlternatives', 'stylisticAltOne'),\n  ss02: feature('stylisticAlternatives', 'stylisticAltTwo'),\n  ss03: feature('stylisticAlternatives', 'stylisticAltThree'),\n  ss04: feature('stylisticAlternatives', 'stylisticAltFour'),\n  ss05: feature('stylisticAlternatives', 'stylisticAltFive'),\n  ss06: feature('stylisticAlternatives', 'stylisticAltSix'),\n  ss07: feature('stylisticAlternatives', 'stylisticAltSeven'),\n  ss08: feature('stylisticAlternatives', 'stylisticAltEight'),\n  ss09: feature('stylisticAlternatives', 'stylisticAltNine'),\n  ss10: feature('stylisticAlternatives', 'stylisticAltTen'),\n  ss11: feature('stylisticAlternatives', 'stylisticAltEleven'),\n  ss12: feature('stylisticAlternatives', 'stylisticAltTwelve'),\n  ss13: feature('stylisticAlternatives', 'stylisticAltThirteen'),\n  ss14: feature('stylisticAlternatives', 'stylisticAltFourteen'),\n  ss15: feature('stylisticAlternatives', 'stylisticAltFifteen'),\n  ss16: feature('stylisticAlternatives', 'stylisticAltSixteen'),\n  ss17: feature('stylisticAlternatives', 'stylisticAltSeventeen'),\n  ss18: feature('stylisticAlternatives', 'stylisticAltEighteen'),\n  ss19: feature('stylisticAlternatives', 'stylisticAltNineteen'),\n  ss20: feature('stylisticAlternatives', 'stylisticAltTwenty')\n};\n\n  // salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n\n// Add cv01-cv99 features\nfor (let i = 1; i <= 99; i++) {\n  OTMapping[`cv${`00${i}`.slice(-2)}`] = [features.characterAlternatives.code, i];\n}\n\n// create inverse mapping\nlet AATMapping = {};\nfor (let ot in OTMapping) {\n  let aat = OTMapping[ot];\n  if (AATMapping[aat[0]] == null) {\n    AATMapping[aat[0]] = {};\n  }\n\n  AATMapping[aat[0]][aat[1]] = ot;\n}\n\n// Maps an array of OpenType features to AAT features\n// in the form of {featureType:{featureSetting:true}}\nexport function mapOTToAAT(features) {\n  let res = {};\n  for (let k in features) {\n    let r;\n    if (r = OTMapping[k]) {\n      if (res[r[0]] == null) {\n        res[r[0]] = {};\n      }\n\n      res[r[0]][r[1]] = features[k];\n    }\n  }\n\n  return res;\n}\n\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction mapFeatureStrings(f) {\n  let [type, setting] = f;\n  if (isNaN(type)) {\n    var typeCode = features[type] && features[type].code;\n  } else {\n    var typeCode = type;\n  }\n\n  if (isNaN(setting)) {\n    var settingCode = features[type] && features[type][setting];\n  } else {\n    var settingCode = setting;\n  }\n\n  return [typeCode, settingCode];\n}\n\n// Maps AAT features to an array of OpenType features\n// Supports both arrays in the form of [[featureType, featureSetting]]\n// and objects in the form of {featureType:{featureSetting:true}}\n// featureTypes and featureSettings can be either strings or number codes\nexport function mapAATToOT(features) {\n  let res = {};\n  if (Array.isArray(features)) {\n    for (let k = 0; k < features.length; k++) {\n      let r;\n      let f = mapFeatureStrings(features[k]);\n      if (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]]) {\n        res[r] = true;\n      }\n    }\n\n  } else if (typeof features === 'object') {\n    for (let type in features) {\n      let feature = features[type];\n      for (let setting in feature) {\n        let r;\n        let f = mapFeatureStrings([type, setting]);\n        if (feature[setting] && (r = AATMapping[f[0]] && AATMapping[f[0]][f[1]])) {\n          res[r] = true;\n        }\n      }\n    }\n  }\n\n  return Object.keys(res);\n}\n","import {cache} from '../decorators';\nimport {range} from '../utils';\n\nexport default class AATLookupTable {\n  constructor(table) {\n    this.table = table;\n  }\n\n  lookup(glyph) {\n    switch (this.table.version) {\n      case 0: // simple array format\n        return this.table.values.getItem(glyph);\n\n      case 2: // segment format\n      case 4: {\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.firstGlyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.firstGlyph) {\n            max = mid - 1;\n          } else if (glyph > seg.lastGlyph) {\n            min = mid + 1;\n          } else {\n            if (this.table.version === 2) {\n              return seg.value;\n            } else {\n              return seg.values[glyph - seg.firstGlyph];\n            }\n          }\n        }\n\n        return null;\n      }\n\n      case 6: { // lookup single\n        let min = 0;\n        let max = this.table.binarySearchHeader.nUnits - 1;\n\n        while (min <= max) {\n          var mid = (min + max) >> 1;\n          var seg = this.table.segments[mid];\n\n          // special end of search value\n          if (seg.glyph === 0xffff) {\n            return null;\n          }\n\n          if (glyph < seg.glyph) {\n            max = mid - 1;\n          } else if (glyph > seg.glyph) {\n            min = mid + 1;\n          } else {\n            return seg.value;\n          }\n        }\n\n        return null;\n      }\n\n      case 8: // lookup trimmed\n        return this.table.values[glyph - this.table.firstGlyph];\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n  }\n\n  @cache\n  glyphsForValue(classValue) {\n    let res = [];\n\n    switch (this.table.version) {\n      case 2: // segment format\n      case 4: {\n        for (let segment of this.table.segments) {\n          if ((this.table.version === 2 && segment.value === classValue)) {\n            res.push(...range(segment.firstGlyph, segment.lastGlyph + 1));\n          } else {\n            for (let index = 0; index < segment.values.length; index++) {\n              if (segment.values[index] === classValue) {\n                res.push(segment.firstGlyph + index);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 6: { // lookup single\n        for (let segment of this.table.segments) {\n          if (segment.value === classValue) {\n            res.push(segment.glyph);\n          }\n        }\n\n        break;\n      }\n\n      case 8: { // lookup trimmed\n        for (let i = 0; i < this.table.values.length; i++) {\n          if (this.table.values[i] === classValue) {\n            res.push(this.table.firstGlyph + i);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        throw new Error(`Unknown lookup table format: ${this.table.version}`);\n    }\n\n    return res;\n  }\n}\n","import AATLookupTable from './AATLookupTable';\n\nconst START_OF_TEXT_STATE = 0;\nconst START_OF_LINE_STATE = 1;\n\nconst END_OF_TEXT_CLASS = 0;\nconst OUT_OF_BOUNDS_CLASS = 1;\nconst DELETED_GLYPH_CLASS = 2;\nconst END_OF_LINE_CLASS = 3;\n\nconst DONT_ADVANCE = 0x4000;\n\nexport default class AATStateMachine {\n  constructor(stateTable) {\n    this.stateTable = stateTable;\n    this.lookupTable = new AATLookupTable(stateTable.classTable);\n  }\n\n  process(glyphs, reverse, processEntry) {\n    let currentState = START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n    let index = reverse ? glyphs.length - 1 : 0;\n    let dir = reverse ? -1 : 1;\n\n    while ((dir === 1 && index <= glyphs.length) || (dir === -1 && index >= -1)) {\n      let glyph = null;\n      let classCode = OUT_OF_BOUNDS_CLASS;\n      let shouldAdvance = true;\n\n      if (index === glyphs.length || index === -1) {\n        classCode = END_OF_TEXT_CLASS;\n      } else {\n        glyph = glyphs[index];\n        if (glyph.id === 0xffff) { // deleted glyph\n          classCode = DELETED_GLYPH_CLASS;\n        } else {\n          classCode = this.lookupTable.lookup(glyph.id);\n          if (classCode == null) {\n            classCode = OUT_OF_BOUNDS_CLASS;\n          }\n        }\n      }\n\n      let row = this.stateTable.stateArray.getItem(currentState);\n      let entryIndex = row[classCode];\n      let entry = this.stateTable.entryTable.getItem(entryIndex);\n\n      if (classCode !== END_OF_TEXT_CLASS && classCode !==  DELETED_GLYPH_CLASS) {\n        processEntry(glyph, entry, index);\n        shouldAdvance = !(entry.flags & DONT_ADVANCE);\n      }\n\n      currentState = entry.newState;\n      if (shouldAdvance) {\n        index += dir;\n      }\n    }\n\n    return glyphs;\n  }\n\n  /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */\n  traverse(opts, state = 0, visited = new Set) {\n    if (visited.has(state)) {\n      return;\n    }\n\n    visited.add(state);\n\n    let {nClasses, stateArray, entryTable} = this.stateTable;\n    let row = stateArray.getItem(state);\n\n    // Skip predefined classes\n    for (let classCode = 4; classCode < nClasses; classCode++) {\n      let entryIndex = row[classCode];\n      let entry = entryTable.getItem(entryIndex);\n\n      // Try all glyphs in the class\n      for (let glyph of this.lookupTable.glyphsForValue(classCode)) {\n        if (opts.enter) {\n          opts.enter(glyph, entry);\n        }\n\n        if (entry.newState !== 0) {\n          this.traverse(opts, entry.newState, visited);\n        }\n\n        if (opts.exit) {\n          opts.exit(glyph, entry);\n        }\n      }\n    }\n  }\n}\n","import AATStateMachine from './AATStateMachine';\nimport AATLookupTable from './AATLookupTable';\nimport {cache} from '../decorators';\n\n// indic replacement flags\nconst MARK_FIRST = 0x8000;\nconst MARK_LAST  = 0x2000;\nconst VERB       = 0x000F;\n\n// contextual substitution and glyph insertion flag\nconst SET_MARK = 0x8000;\n\n// ligature entry flags\nconst SET_COMPONENT  = 0x8000;\nconst PERFORM_ACTION = 0x2000;\n\n// ligature action masks\nconst LAST_MASK   = 0x80000000;\nconst STORE_MASK  = 0x40000000;\nconst OFFSET_MASK = 0x3FFFFFFF;\n\nconst VERTICAL_ONLY           = 0x800000;\nconst REVERSE_DIRECTION       = 0x400000;\nconst HORIZONTAL_AND_VERTICAL = 0x200000;\n\n// glyph insertion flags\nconst CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst MARKED_IS_KASHIDA_LIKE  = 0x1000;\nconst CURRENT_INSERT_BEFORE   = 0x0800;\nconst MARKED_INSERT_BEFORE    = 0x0400;\nconst CURRENT_INSERT_COUNT    = 0x03E0;\nconst MARKED_INSERT_COUNT     = 0x001F;\n\nexport default class AATMorxProcessor {\n  constructor(font) {\n    this.processIndicRearragement = this.processIndicRearragement.bind(this);\n    this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n    this.processLigature = this.processLigature.bind(this);\n    this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n    this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n    this.font = font;\n    this.morx = font.morx;\n    this.inputCache = null;\n  }\n\n  // Processes an array of glyphs and applies the specified features\n  // Features should be in the form of {featureType:{featureSetting:boolean}}\n  process(glyphs, features = {}) {\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      // enable/disable the requested features\n      for (let feature of chain.features) {\n        let f;\n        if (f = features[feature.featureType]) {\n          if (f[feature.featureSetting]) {\n            flags &= feature.disableFlags;\n            flags |= feature.enableFlags;\n          } else if (f[feature.featureSetting] === false) {\n            flags |= ~feature.disableFlags;\n            flags &= ~feature.enableFlags;\n          }\n        }\n      }\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.processSubtable(subtable, glyphs);\n        }\n      }\n    }\n\n    // remove deleted glyphs\n    let index = glyphs.length - 1;\n    while (index >= 0) {\n      if (glyphs[index].id === 0xffff) {\n        glyphs.splice(index, 1);\n      }\n\n      index--;\n    }\n\n    return glyphs;\n  }\n\n  processSubtable(subtable, glyphs) {\n    this.subtable = subtable;\n    this.glyphs = glyphs;\n    if (this.subtable.type === 4) {\n      this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n      return;\n    }\n\n    this.ligatureStack = [];\n    this.markedGlyph = null;\n    this.firstGlyph = null;\n    this.lastGlyph = null;\n    this.markedIndex = null;\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let reverse = !!(this.subtable.coverage & REVERSE_DIRECTION);\n    return stateMachine.process(this.glyphs, reverse, process);\n  }\n\n  @cache\n  getStateMachine(subtable) {\n    return new AATStateMachine(subtable.table.stateTable);\n  }\n\n  getProcessor() {\n    switch (this.subtable.type) {\n      case 0:\n        return this.processIndicRearragement;\n      case 1:\n        return this.processContextualSubstitution;\n      case 2:\n        return this.processLigature;\n      case 4:\n        return this.processNoncontextualSubstitutions;\n      case 5:\n        return this.processGlyphInsertion;\n      default:\n        throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n    }\n  }\n\n  processIndicRearragement(glyph, entry, index) {\n    if (entry.flags & MARK_FIRST) {\n      this.firstGlyph = index;\n    }\n\n    if (entry.flags & MARK_LAST) {\n      this.lastGlyph = index;\n    }\n\n    reorderGlyphs(this.glyphs, entry.flags & VERB, this.firstGlyph, this.lastGlyph);\n  }\n\n  processContextualSubstitution(glyph, entry, index) {\n    let subsitutions = this.subtable.table.substitutionTable.items;\n    if (entry.markIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.markIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[this.markedGlyph];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.currentIndex !== 0xffff) {\n      let lookup = subsitutions.getItem(entry.currentIndex);\n      let lookupTable = new AATLookupTable(lookup);\n      glyph = this.glyphs[index];\n      var gid = lookupTable.lookup(glyph.id);\n      if (gid) {\n        this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n      }\n    }\n\n    if (entry.flags & SET_MARK) {\n      this.markedGlyph = index;\n    }\n  }\n\n  processLigature(glyph, entry, index) {\n    if (entry.flags & SET_COMPONENT) {\n      this.ligatureStack.push(index);\n    }\n\n    if (entry.flags & PERFORM_ACTION) {\n      let actions = this.subtable.table.ligatureActions;\n      let components = this.subtable.table.components;\n      let ligatureList = this.subtable.table.ligatureList;\n\n      let actionIndex = entry.action;\n      let last = false;\n      let ligatureIndex = 0;\n      let codePoints = [];\n      let ligatureGlyphs = [];\n\n      while (!last) {\n        let componentGlyph = this.ligatureStack.pop();\n        codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n\n        let action = actions.getItem(actionIndex++);\n        last = !!(action & LAST_MASK);\n        let store = !!(action & STORE_MASK);\n        let offset = (action & OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n        offset += this.glyphs[componentGlyph].id;\n\n        let component = components.getItem(offset);\n        ligatureIndex += component;\n\n        if (last || store) {\n          let ligatureEntry = ligatureList.getItem(ligatureIndex);\n          this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n          ligatureGlyphs.push(componentGlyph);\n          ligatureIndex = 0;\n          codePoints = [];\n        } else {\n          this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n        }\n      }\n\n      // Put ligature glyph indexes back on the stack\n      this.ligatureStack.push(...ligatureGlyphs);\n    }\n  }\n\n  processNoncontextualSubstitutions(subtable, glyphs, index) {\n    let lookupTable = new AATLookupTable(subtable.table.lookupTable);\n\n    for (index = 0; index < glyphs.length; index++) {\n      let glyph = glyphs[index];\n      if (glyph.id !== 0xffff) {\n        let gid = lookupTable.lookup(glyph.id);\n        if (gid) { // 0 means do nothing\n          glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n      }\n    }\n  }\n\n  _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n    let insertions = [];\n    while (count--) {\n      let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n      insertions.push(this.font.getGlyph(gid));\n    }\n\n    if (!isBefore) {\n      glyphIndex++;\n    }\n\n    this.glyphs.splice(glyphIndex, 0, ...insertions);\n  }\n\n  processGlyphInsertion(glyph, entry, index) {\n    if (entry.flags & SET_MARK) {\n      this.markedIndex = index;\n    }\n\n    if (entry.markedInsertIndex !== 0xffff) {\n      let count = (entry.flags & MARKED_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & MARKED_INSERT_BEFORE);\n      this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n    }\n\n    if (entry.currentInsertIndex !== 0xffff) {\n      let count = (entry.flags & CURRENT_INSERT_COUNT) >>> 5;\n      let isBefore = !!(entry.flags & CURRENT_INSERT_BEFORE);\n      this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n    }\n  }\n\n  getSupportedFeatures() {\n    let features = [];\n    for (let chain of this.morx.chains) {\n      for (let feature of chain.features) {\n        features.push([feature.featureType, feature.featureSetting]);\n      }\n    }\n\n    return features;\n  }\n\n  generateInputs(gid) {\n    if (!this.inputCache) {\n      this.generateInputCache();\n    }\n\n    return this.inputCache[gid] || [];\n  }\n\n  generateInputCache() {\n    this.inputCache = {};\n\n    for (let chain of this.morx.chains) {\n      let flags = chain.defaultFlags;\n\n      for (let subtable of chain.subtables) {\n        if (subtable.subFeatureFlags & flags) {\n          this.generateInputsForSubtable(subtable);\n        }\n      }\n    }\n  }\n\n  generateInputsForSubtable(subtable) {\n    // Currently, only supporting ligature subtables.\n    if (subtable.type !== 2) {\n      return;\n    }\n\n    let reverse = !!(subtable.coverage & REVERSE_DIRECTION);\n    if (reverse) {\n      throw new Error('Reverse subtable, not supported.');\n    }\n\n    this.subtable = subtable;\n    this.ligatureStack = [];\n\n    let stateMachine = this.getStateMachine(subtable);\n    let process = this.getProcessor();\n\n    let input = [];\n    let stack = [];\n    this.glyphs = [];\n\n    stateMachine.traverse({\n      enter: (glyph, entry) => {\n        let glyphs = this.glyphs;\n        stack.push({\n          glyphs: glyphs.slice(),\n          ligatureStack: this.ligatureStack.slice()\n        });\n\n        // Add glyph to input and glyphs to process.\n        let g = this.font.getGlyph(glyph);\n        input.push(g);\n        glyphs.push(input[input.length - 1]);\n\n        // Process ligature substitution\n        process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n\n        // Add input to result if only one matching (non-deleted) glyph remains.\n        let count = 0;\n        let found = 0;\n        for (let i = 0; i < glyphs.length && count <= 1; i++) {\n          if (glyphs[i].id !== 0xffff) {\n            count++;\n            found = glyphs[i].id;\n          }\n        }\n\n        if (count === 1) {\n          let result = input.map(g => g.id);\n          let cache = this.inputCache[found];\n          if (cache) {\n            cache.push(result);\n          } else {\n            this.inputCache[found] = [result];\n          }\n        }\n      },\n\n      exit: () => {\n        ({glyphs: this.glyphs, ligatureStack: this.ligatureStack} = stack.pop());\n        input.pop();\n      }\n    });\n  }\n}\n\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n  let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n  if (reverseB) {\n    end.reverse();\n  }\n\n  let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n  if (reverseA) {\n    start.reverse();\n  }\n\n  glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n  return glyphs;\n}\n\nfunction reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n  let length = lastGlyph - firstGlyph + 1;\n  switch (verb) {\n    case 0: // no change\n      return glyphs;\n\n    case 1: // Ax => xA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 0]);\n\n    case 2: // xD => Dx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 1]);\n\n    case 3: // AxD => DxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 1]);\n\n    case 4: // ABx => xAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0]);\n\n    case 5: // ABx => xBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 0], true, false);\n\n    case 6: // xCD => CDx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2]);\n\n    case 7: // xCD => DCx\n      return swap(glyphs, [firstGlyph, 0], [lastGlyph, 2], false, true);\n\n    case 8: // AxCD => CDxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2]);\n\n    case 9: // AxCD => DCxA\n      return swap(glyphs, [firstGlyph, 1], [lastGlyph, 2], false, true);\n\n    case 10: // ABxD => DxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1]);\n\n    case 11: // ABxD => DxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 1], true, false);\n\n    case 12: // ABxCD => CDxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2]);\n\n    case 13: // ABxCD => CDxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, false);\n\n    case 14: // ABxCD => DCxAB\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], false, true);\n\n    case 15: // ABxCD => DCxBA\n      return swap(glyphs, [firstGlyph, 2], [lastGlyph, 2], true, true);\n\n    default:\n      throw new Error(`Unknown verb: ${verb}`);\n  }\n}\n","import * as AATFeatureMap from './AATFeatureMap';\nimport * as Script from '../layout/Script';\nimport AATMorxProcessor from './AATMorxProcessor';\n\nexport default class AATLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.morxProcessor = new AATMorxProcessor(font);\n    this.fallbackPosition = false;\n  }\n\n  substitute(glyphRun) {\n    // AAT expects the glyphs to be in visual order prior to morx processing,\n    // so reverse the glyphs if the script is right-to-left.\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n    }\n\n    this.morxProcessor.process(glyphRun.glyphs, AATFeatureMap.mapOTToAAT(glyphRun.features));\n  }\n\n  getAvailableFeatures(script, language) {\n    return AATFeatureMap.mapAATToOT(this.morxProcessor.getSupportedFeatures());\n  }\n\n  stringsForGlyph(gid) {\n    let glyphStrings = this.morxProcessor.generateInputs(gid);\n    let result = new Set;\n\n    for (let glyphs of glyphStrings) {\n      this._addStrings(glyphs, 0, result, '');\n    }\n\n    return result;\n  }\n\n  _addStrings(glyphs, index, strings, string) {\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n\n    for (let codePoint of codePoints) {\n      let s = string + String.fromCodePoint(codePoint);\n      if (index < glyphs.length - 1) {\n        this._addStrings(glyphs, index + 1, strings, s);\n      } else {\n        strings.add(s);\n      }\n    }\n  }\n}\n","import * as Script from '../layout/Script';\n\n/**\n * ShapingPlans are used by the OpenType shapers to store which\n * features should by applied, and in what order to apply them.\n * The features are applied in groups called stages. A feature\n * can be applied globally to all glyphs, or locally to only\n * specific glyphs.\n *\n * @private\n */\nexport default class ShapingPlan {\n  constructor(font, script, direction) {\n    this.font = font;\n    this.script = script;\n    this.direction = direction;\n    this.stages = [];\n    this.globalFeatures = {};\n    this.allFeatures = {};\n  }\n\n  /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */\n  _addFeatures(features, global) {\n    let stageIndex = this.stages.length - 1;\n    let stage = this.stages[stageIndex];\n    for (let feature of features) {\n      if (this.allFeatures[feature] == null) {\n        stage.push(feature);\n        this.allFeatures[feature] = stageIndex;\n\n        if (global) {\n          this.globalFeatures[feature] = true;\n        }\n      }\n    }\n  }\n\n  /**\n   * Add features to the last stage\n   */\n  add(arg, global = true) {\n    if (this.stages.length === 0) {\n      this.stages.push([]);\n    }\n\n    if (typeof arg === 'string') {\n      arg = [arg];\n    }\n\n    if (Array.isArray(arg)) {\n      this._addFeatures(arg, global);\n    } else if (typeof arg === 'object') {\n      this._addFeatures(arg.global || [], true);\n      this._addFeatures(arg.local || [], false);\n    } else {\n      throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n  }\n\n  /**\n   * Add a new stage\n   */\n  addStage(arg, global) {\n    if (typeof arg === 'function') {\n      this.stages.push(arg, []);\n    } else {\n      this.stages.push([]);\n      this.add(arg, global);\n    }\n  }\n\n  setFeatureOverrides(features) {\n    if (Array.isArray(features)) {\n      this.add(features);\n    } else if (typeof features === 'object') {\n      for (let tag in features) {\n        if (features[tag]) {\n          this.add(tag);\n        } else if (this.allFeatures[tag] != null) {\n          let stage = this.stages[this.allFeatures[tag]];\n          stage.splice(stage.indexOf(tag), 1);\n          delete this.allFeatures[tag];\n          delete this.globalFeatures[tag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Assigns the global features to the given glyphs\n   */\n  assignGlobalFeatures(glyphs) {\n    for (let glyph of glyphs) {\n      for (let feature in this.globalFeatures) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n\n  /**\n   * Executes the planned stages using the given OTProcessor\n   */\n  process(processor, glyphs, positions) {\n    for (let stage of this.stages) {\n      if (typeof stage === 'function') {\n        if (!positions) {\n          stage(this.font, glyphs, this);\n        }\n\n      } else if (stage.length > 0) {\n        processor.applyFeatures(stage, glyphs, positions);\n      }\n    }\n  }\n}\n","import {isDigit} from 'unicode-properties';\n\nconst VARIATION_FEATURES = ['rvrn'];\nconst COMMON_FEATURES = ['ccmp', 'locl', 'rlig', 'mark', 'mkmk'];\nconst FRACTIONAL_FEATURES = ['frac', 'numr', 'dnom'];\nconst HORIZONTAL_FEATURES = ['calt', 'clig', 'liga', 'rclt', 'curs', 'kern'];\nconst VERTICAL_FEATURES = ['vert'];\nconst DIRECTIONAL_FEATURES = {\n  ltr: ['ltra', 'ltrm'],\n  rtl: ['rtla', 'rtlm']\n};\n\nexport default class DefaultShaper {\n  static zeroMarkWidths = 'AFTER_GPOS';\n  static plan(plan, glyphs, features) {\n    // Plan the features we want to apply\n    this.planPreprocessing(plan);\n    this.planFeatures(plan);\n    this.planPostprocessing(plan, features);\n\n    // Assign the global features to all the glyphs\n    plan.assignGlobalFeatures(glyphs);\n\n    // Assign local features to glyphs\n    this.assignFeatures(plan, glyphs);\n  }\n\n  static planPreprocessing(plan) {\n    plan.add({\n      global: [...VARIATION_FEATURES, ...DIRECTIONAL_FEATURES[plan.direction]],\n      local: FRACTIONAL_FEATURES\n    });\n  }\n\n  static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n  }\n\n  static planPostprocessing(plan, userFeatures) {\n    plan.add([...COMMON_FEATURES, ...HORIZONTAL_FEATURES]);\n    plan.setFeatureOverrides(userFeatures);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Enable contextual fractions\n    for (let i = 0; i < glyphs.length; i++) {\n      let glyph = glyphs[i];\n      if (glyph.codePoints[0] === 0x2044) { // fraction slash\n        let start = i;\n        let end = i + 1;\n\n        // Apply numerator\n        while (start > 0 && isDigit(glyphs[start - 1].codePoints[0])) {\n          glyphs[start - 1].features.numr = true;\n          glyphs[start - 1].features.frac = true;\n          start--;\n        }\n\n        // Apply denominator\n        while (end < glyphs.length && isDigit(glyphs[end].codePoints[0])) {\n          glyphs[end].features.dnom = true;\n          glyphs[end].features.frac = true;\n          end++;\n        }\n\n        // Apply fraction slash\n        glyph.features.frac = true;\n        i = end - 1;\n      }\n    }\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport {getCategory} from 'unicode-properties';\nimport UnicodeTrie from 'unicode-trie';\nimport { decodeBase64 } from '../../utils';\n\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/data.trie', 'base64')));\nconst FEATURES = ['isol', 'fina', 'fin2', 'fin3', 'medi', 'med2', 'init'];\n\nconst ShapingClasses = {\n  Non_Joining: 0,\n  Left_Joining: 1,\n  Right_Joining: 2,\n  Dual_Joining: 3,\n  Join_Causing: 3,\n  ALAPH: 4,\n  'DALATH RISH': 5,\n  Transparent: 6\n};\n\nconst ISOL = 'isol';\nconst FINA = 'fina';\nconst FIN2 = 'fin2';\nconst FIN3 = 'fin3';\nconst MEDI = 'medi';\nconst MED2 = 'med2';\nconst INIT = 'init';\nconst NONE = null;\n\n// Each entry is [prevAction, curAction, nextState]\nconst STATE_TABLE = [\n  //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n  // State 0: prev was U,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN2, 5 ],  [ NONE, ISOL, 6 ] ],\n\n  // State 2: prev was D/L in ISOL form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ INIT, FINA, 1 ],  [ INIT, FINA, 3 ],  [ INIT, FINA, 4 ],  [ INIT, FINA, 6 ] ],\n\n  // State 3: prev was D in FINA form,  willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MEDI, FINA, 1 ],  [ MEDI, FINA, 3 ],  [ MEDI, FINA, 4 ],  [ MEDI, FINA, 6 ] ],\n\n  // State 4: prev was FINA ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ MED2, ISOL, 1 ],  [ MED2, ISOL, 2 ],  [ MED2, FIN2, 5 ],  [ MED2, ISOL, 6 ] ],\n\n  // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ ISOL, ISOL, 1 ],  [ ISOL, ISOL, 2 ],  [ ISOL, FIN2, 5 ],  [ ISOL, ISOL, 6 ] ],\n\n  // State 6: prev was DALATH/RISH,  not willing to join.\n  [ [ NONE, NONE, 0 ],  [ NONE, ISOL, 2 ],  [ NONE, ISOL, 1 ],  [ NONE, ISOL, 2 ],  [ NONE, FIN3, 5 ],  [ NONE, ISOL, 6 ] ]\n];\n\n/**\n * This is a shaper for Arabic, and other cursive scripts.\n * It uses data from ArabicShaping.txt in the Unicode database,\n * compiled to a UnicodeTrie by generate-data.coffee.\n *\n * The shaping state machine was ported from Harfbuzz.\n * https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-arabic.cc\n */\nexport default class ArabicShaper extends DefaultShaper {\n  static planFeatures(plan) {\n    plan.add(['ccmp', 'locl']);\n    for (let i = 0; i < FEATURES.length; i++) {\n      let feature = FEATURES[i];\n      plan.addStage(feature, false);\n    }\n\n    plan.addStage('mset');\n  }\n\n  static assignFeatures(plan, glyphs) {\n    super.assignFeatures(plan, glyphs);\n\n    let prev = -1;\n    let state = 0;\n    let actions = [];\n\n    // Apply the state machine to map glyphs to features\n    for (let i = 0; i < glyphs.length; i++) {\n      let curAction, prevAction;\n      var glyph = glyphs[i];\n      let type = getShapingClass(glyph.codePoints[0]);\n      if (type === ShapingClasses.Transparent) {\n        actions[i] = NONE;\n        continue;\n      }\n\n      [prevAction, curAction, state] = STATE_TABLE[state][type];\n\n      if (prevAction !== NONE && prev !== -1) {\n        actions[prev] = prevAction;\n      }\n\n      actions[i] = curAction;\n      prev = i;\n    }\n\n    // Apply the chosen features to their respective glyphs\n    for (let index = 0; index < glyphs.length; index++) {\n      let feature;\n      var glyph = glyphs[index];\n      if (feature = actions[index]) {\n        glyph.features[feature] = true;\n      }\n    }\n  }\n}\n\nfunction getShapingClass(codePoint) {\n  let res = trie.get(codePoint);\n  if (res) {\n    return res - 1;\n  }\n\n  let category = getCategory(codePoint);\n  if (category === 'Mn' || category === 'Me' || category === 'Cf') {\n    return ShapingClasses.Transparent;\n  }\n\n  return ShapingClasses.Non_Joining;\n}\n","export default class GlyphIterator {\n  constructor(glyphs, options) {\n    this.glyphs = glyphs;\n    this.reset(options);\n  }\n\n  reset(options = {}, index = 0) {\n    this.options = options;\n    this.flags = options.flags || {};\n    this.markAttachmentType = options.markAttachmentType || 0;\n    this.index = index;\n  }\n\n  get cur() {\n    return this.glyphs[this.index] || null;\n  }\n\n  shouldIgnore(glyph) {\n    return (this.flags.ignoreMarks && glyph.isMark) ||\n           (this.flags.ignoreBaseGlyphs && glyph.isBase) ||\n           (this.flags.ignoreLigatures && glyph.isLigature) ||\n           (this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType);\n  }\n\n  move(dir) {\n    this.index += dir;\n    while (0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index])) {\n      this.index += dir;\n    }\n\n    if (0 > this.index || this.index >= this.glyphs.length) {\n      return null;\n    }\n\n    return this.glyphs[this.index];\n  }\n\n  next() {\n    return this.move(+1);\n  }\n\n  prev() {\n    return this.move(-1);\n  }\n\n  peek(count = 1) {\n    let idx = this.index;\n    let res = this.increment(count);\n    this.index = idx;\n    return res;\n  }\n\n  peekIndex(count = 1) {\n    let idx = this.index;\n    this.increment(count);\n    let res = this.index;\n    this.index = idx;\n    return res;\n  }\n\n  increment(count = 1) {\n    let dir = count < 0 ? -1 : 1;\n    count = Math.abs(count);\n    while (count--) {\n      this.move(dir);\n    }\n\n    return this.glyphs[this.index];\n  }\n}\n","import GlyphIterator from './GlyphIterator';\nimport * as Script from '../layout/Script';\n\nconst DEFAULT_SCRIPTS = ['DFLT', 'dflt', 'latn'];\n\nexport default class OTProcessor {\n  constructor(font, table) {\n    this.font = font;\n    this.table = table;\n\n    this.script = null;\n    this.scriptTag = null;\n\n    this.language = null;\n    this.languageTag = null;\n\n    this.features = {};\n    this.lookups = {};\n\n    // Setup variation substitutions\n    this.variationsIndex = font._variationProcessor\n      ? this.findVariationsIndex(font._variationProcessor.normalizedCoords)\n      : -1;\n\n    // initialize to default script + language\n    this.selectScript();\n\n    // current context (set by applyFeatures)\n    this.glyphs = [];\n    this.positions = []; // only used by GPOS\n    this.ligatureID = 1;\n    this.currentFeature = null;\n  }\n\n  findScript(script) {\n    if (this.table.scriptList == null) {\n      return null;\n    }\n\n    if (!Array.isArray(script)) {\n      script = [script];\n    }\n\n    for (let s of script) {\n      for (let entry of this.table.scriptList) {\n        if (entry.tag === s) {\n          return entry;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  selectScript(script, language, direction) {\n    let changed = false;\n    let entry;\n    if (!this.script || script !== this.scriptTag) {\n      entry = this.findScript(script);\n      if (!entry) {\n        entry = this.findScript(DEFAULT_SCRIPTS);\n      }\n\n      if (!entry) {\n        return this.scriptTag;\n      }\n\n      this.scriptTag = entry.tag;\n      this.script = entry.script;\n      this.language = null;\n      this.languageTag = null;\n      changed = true;\n    }\n\n    if (!direction || direction !== this.direction) {\n      this.direction = direction || Script.direction(script);\n    }\n\n    if (language && language.length < 4) {\n      language += ' '.repeat(4 - language.length);\n    }\n\n    if (!language || language !== this.languageTag) {\n      this.language = null;\n\n      for (let lang of this.script.langSysRecords) {\n        if (lang.tag === language) {\n          this.language = lang.langSys;\n          this.languageTag = lang.tag;\n          break;\n        }\n      }\n\n      if (!this.language) {\n        this.language = this.script.defaultLangSys;\n        this.languageTag = null;\n      }\n\n      changed = true;\n    }\n\n    // Build a feature lookup table\n    if (changed) {\n      this.features = {};\n      if (this.language) {\n        for (let featureIndex of this.language.featureIndexes) {\n          let record = this.table.featureList[featureIndex];\n          let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n          this.features[record.tag] = substituteFeature || record.feature;\n        }\n      }\n    }\n\n    return this.scriptTag;\n  }\n\n  lookupsForFeatures(userFeatures = [], exclude) {\n    let lookups = [];\n    for (let tag of userFeatures) {\n      let feature = this.features[tag];\n      if (!feature) {\n        continue;\n      }\n\n      for (let lookupIndex of feature.lookupListIndexes) {\n        if (exclude && exclude.indexOf(lookupIndex) !== -1) {\n          continue;\n        }\n\n        lookups.push({\n          feature: tag,\n          index: lookupIndex,\n          lookup: this.table.lookupList.get(lookupIndex)\n        });\n      }\n    }\n\n    lookups.sort((a, b) => a.index - b.index);\n    return lookups;\n  }\n\n  substituteFeatureForVariations(featureIndex) {\n    if (this.variationsIndex === -1) {\n      return null;\n    }\n\n    let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n    let substitutions = record.featureTableSubstitution.substitutions;\n    for (let substitution of substitutions) {\n      if (substitution.featureIndex === featureIndex) {\n        return substitution.alternateFeatureTable;\n      }\n    }\n\n    return null;\n  }\n\n  findVariationsIndex(coords) {\n    let variations = this.table.featureVariations;\n    if (!variations) {\n      return -1;\n    }\n\n    let records = variations.featureVariationRecords;\n    for (let i = 0; i < records.length; i++) {\n      let conditions = records[i].conditionSet.conditionTable;\n      if (this.variationConditionsMatch(conditions, coords)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  variationConditionsMatch(conditions, coords) {\n    return conditions.every(condition => {\n      let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n      return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n    });\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    let lookups = this.lookupsForFeatures(userFeatures);\n    this.applyLookups(lookups, glyphs, advances);\n  }\n\n  applyLookups(lookups, glyphs, positions) {\n    this.glyphs = glyphs;\n    this.positions = positions;\n    this.glyphIterator = new GlyphIterator(glyphs);\n\n    for (let { feature, lookup } of lookups) {\n      this.currentFeature = feature;\n      this.glyphIterator.reset(lookup.flags);\n\n      while (this.glyphIterator.index < glyphs.length) {\n        if (!(feature in this.glyphIterator.cur.features)) {\n          this.glyphIterator.next();\n          continue;\n        }\n\n        for (let table of lookup.subTables) {\n          let res = this.applyLookup(lookup.lookupType, table);\n          if (res) {\n            break;\n          }\n        }\n\n        this.glyphIterator.next();\n      }\n    }\n  }\n\n  applyLookup(lookup, table) {\n    throw new Error(\"applyLookup must be implemented by subclasses\");\n  }\n\n  applyLookupList(lookupRecords) {\n    let options = this.glyphIterator.options;\n    let glyphIndex = this.glyphIterator.index;\n\n    for (let lookupRecord of lookupRecords) {\n      // Reset flags and find glyph index for this lookup record\n      this.glyphIterator.reset(options, glyphIndex);\n      this.glyphIterator.increment(lookupRecord.sequenceIndex);\n\n      // Get the lookup and setup flags for subtables\n      let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n      this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n\n      // Apply lookup subtables until one matches\n      for (let table of lookup.subTables) {\n        if (this.applyLookup(lookup.lookupType, table)) {\n          break;\n        }\n      }\n    }\n\n    this.glyphIterator.reset(options, glyphIndex);\n    return true;\n  }\n\n  coverageIndex(coverage, glyph) {\n    if (glyph == null) {\n      glyph = this.glyphIterator.cur.id;\n    }\n\n    switch (coverage.version) {\n      case 1:\n        return coverage.glyphs.indexOf(glyph);\n\n      case 2:\n        for (let range of coverage.rangeRecords) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.startCoverageIndex + glyph - range.start;\n          }\n        }\n\n        break;\n    }\n\n    return -1;\n  }\n\n  match(sequenceIndex, sequence, fn, matched) {\n    let pos = this.glyphIterator.index;\n    let glyph = this.glyphIterator.increment(sequenceIndex);\n    let idx = 0;\n\n    while (idx < sequence.length && glyph && fn(sequence[idx], glyph)) {\n      if (matched) {\n        matched.push(this.glyphIterator.index);\n      }\n\n      idx++;\n      glyph = this.glyphIterator.next();\n    }\n\n    this.glyphIterator.index = pos;\n    if (idx < sequence.length) {\n      return false;\n    }\n\n    return matched || true;\n  }\n\n  sequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => component === glyph.id);\n  }\n\n  sequenceMatchIndices(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (component, glyph) => {\n      // If the current feature doesn't apply to this glyph,\n      if (!(this.currentFeature in glyph.features)) {\n        return false;\n      }\n\n      return component === glyph.id;\n    }, []);\n  }\n\n  coverageSequenceMatches(sequenceIndex, sequence) {\n    return this.match(sequenceIndex, sequence, (coverage, glyph) =>\n      this.coverageIndex(coverage, glyph.id) >= 0\n    );\n  }\n\n  getClassID(glyph, classDef) {\n    switch (classDef.version) {\n      case 1: // Class array\n        let i = glyph - classDef.startGlyph;\n        if (i >= 0 && i < classDef.classValueArray.length) {\n          return classDef.classValueArray[i];\n        }\n\n        break;\n\n      case 2:\n        for (let range of classDef.classRangeRecord) {\n          if (range.start <= glyph && glyph <= range.end) {\n            return range.class;\n          }\n        }\n\n        break;\n    }\n\n    return 0;\n  }\n\n  classSequenceMatches(sequenceIndex, sequence, classDef) {\n    return this.match(sequenceIndex, sequence, (classID, glyph) =>\n      classID === this.getClassID(glyph.id, classDef)\n    );\n  }\n\n  applyContext(table) {\n    let index, set;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.ruleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(1, rule.input)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n        if (index === -1) {\n          return false;\n        }\n\n        set = table.classSet[index];\n        for (let rule of set) {\n          if (this.classSequenceMatches(1, rule.classes, table.classDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(0, table.coverages)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n\n  applyChainingContext(table) {\n    let index;\n    switch (table.version) {\n      case 1:\n        index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let set = table.chainRuleSets[index];\n        for (let rule of set) {\n          if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack)\n            && this.sequenceMatches(1, rule.input)\n            && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 2:\n        if (this.coverageIndex(table.coverage) === -1) {\n          return false;\n        }\n\n        index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n        let rules = table.chainClassSet[index];\n        if (!rules) {\n          return false;\n        }\n\n        for (let rule of rules) {\n          if (this.classSequenceMatches(-rule.backtrack.length, rule.backtrack, table.backtrackClassDef) &&\n            this.classSequenceMatches(1, rule.input, table.inputClassDef) &&\n            this.classSequenceMatches(1 + rule.input.length, rule.lookahead, table.lookaheadClassDef)) {\n            return this.applyLookupList(rule.lookupRecords);\n          }\n        }\n\n        break;\n\n      case 3:\n        if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) &&\n          this.coverageSequenceMatches(0, table.inputCoverage) &&\n          this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) {\n          return this.applyLookupList(table.lookupRecords);\n        }\n\n        break;\n    }\n\n    return false;\n  }\n}\n","import {isMark} from 'unicode-properties';\nimport OTProcessor from './OTProcessor';\n\nexport default class GlyphInfo {\n  constructor(font, id, codePoints = [], features) {\n    this._font = font;\n    this.codePoints = codePoints;\n    this.id = id;\n\n    this.features = {};\n    if (Array.isArray(features)) {\n      for (let i = 0; i < features.length; i++) {\n        let feature = features[i];\n        this.features[feature] = true;\n      }\n    } else if (typeof features === 'object') {\n      Object.assign(this.features, features);\n    }\n\n    this.ligatureID = null;\n    this.ligatureComponent = null;\n    this.isLigated = false;\n    this.cursiveAttachment = null;\n    this.markAttachment = null;\n    this.shaperInfo = null;\n    this.substituted = false;\n    this.isMultiplied = false;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(id) {\n    this._id = id;\n    this.substituted = true;\n\n    let GDEF = this._font.GDEF;\n    if (GDEF && GDEF.glyphClassDef) {\n      // TODO: clean this up\n      let classID = OTProcessor.prototype.getClassID(id, GDEF.glyphClassDef);\n      this.isBase = classID === 1;\n      this.isLigature = classID === 2;\n      this.isMark = classID === 3;\n      this.markAttachmentType = GDEF.markAttachClassDef ? OTProcessor.prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n    } else {\n      this.isMark = this.codePoints.length > 0 && this.codePoints.every(isMark);\n      this.isBase = !this.isMark;\n      this.isLigature = this.codePoints.length > 1;\n      this.markAttachmentType = 0;\n    }\n  }\n\n  copy() {\n    return new GlyphInfo(this._font, this.id, this.codePoints, this.features);\n  }\n}\n","import DefaultShaper from './DefaultShaper';\nimport GlyphInfo from '../GlyphInfo';\n\n/**\n * This is a shaper for the Hangul script, used by the Korean language.\n * It does the following:\n *   - decompose if unsupported by the font:\n *     <LV>   -> <L,V>\n *     <LVT>  -> <L,V,T>\n *     <LV,T> -> <L,V,T>\n *\n *   - compose if supported by the font:\n *     <L,V>   -> <LV>\n *     <L,V,T> -> <LVT>\n *     <LV,T>  -> <LVT>\n *\n *   - reorder tone marks (S is any valid syllable):\n *     <S, M> -> <M, S>\n *\n *   - apply ljmo, vjmo, and tjmo OpenType features to decomposed Jamo sequences.\n *\n * This logic is based on the following documents:\n *   - http://www.microsoft.com/typography/OpenTypeDev/hangul/intro.htm\n *   - http://ktug.org/~nomos/harfbuzz-hangul/hangulshaper.pdf\n */\nexport default class HangulShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.add(['ljmo', 'vjmo', 'tjmo'], false);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    let state = 0;\n    let i = 0;\n    while (i < glyphs.length) {\n      let action;\n      let glyph = glyphs[i];\n      let code = glyph.codePoints[0];\n      let type = getType(code);\n\n      [ action, state ] = STATE_TABLE[state][type];\n\n      switch (action) {\n        case DECOMPOSE:\n          // Decompose the composed syllable if it is not supported by the font.\n          if (!plan.font.hasGlyphForCodePoint(code)) {\n            i = decompose(glyphs, i, plan.font);\n          }\n          break;\n\n        case COMPOSE:\n          // Found a decomposed syllable. Try to compose if supported by the font.\n          i = compose(glyphs, i, plan.font);\n          break;\n\n        case TONE_MARK:\n          // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n          reorderToneMark(glyphs, i, plan.font);\n          break;\n\n        case INVALID:\n          // Tone mark has no valid syllable to attach to, so insert a dotted circle\n          i = insertDottedCircle(glyphs, i, plan.font);\n          break;\n      }\n\n      i++;\n    }\n  }\n}\n\nconst HANGUL_BASE  = 0xac00;\nconst HANGUL_END   = 0xd7a4;\nconst HANGUL_COUNT = HANGUL_END - HANGUL_BASE + 1;\nconst L_BASE  = 0x1100; // lead\nconst V_BASE  = 0x1161; // vowel\nconst T_BASE  = 0x11a7; // trail\nconst L_COUNT = 19;\nconst V_COUNT = 21;\nconst T_COUNT = 28;\nconst L_END   = L_BASE + L_COUNT - 1;\nconst V_END   = V_BASE + V_COUNT - 1;\nconst T_END   = T_BASE + T_COUNT - 1;\nconst DOTTED_CIRCLE = 0x25cc;\n\nconst isL    = code => 0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst isV    = code => 0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst isT    = code => 0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst isTone = code => 0x302e <= code && code <= 0x302f;\nconst isLVT  = code => HANGUL_BASE <= code && code <= HANGUL_END;\nconst isLV   = code => (code - HANGUL_BASE) < HANGUL_COUNT && (code - HANGUL_BASE) % T_COUNT === 0;\nconst isCombiningL = code => L_BASE <= code && code <= L_END;\nconst isCombiningV = code => V_BASE <= code && code <= V_END;\nconst isCombiningT = code => T_BASE + 1 && 1 <= code && code <= T_END;\n\n// Character categories\nconst X   = 0; // Other character\nconst L   = 1; // Leading consonant\nconst V   = 2; // Medial vowel\nconst T   = 3; // Trailing consonant\nconst LV  = 4; // Composed <LV> syllable\nconst LVT = 5; // Composed <LVT> syllable\nconst M   = 6; // Tone mark\n\n// This function classifies a character using the above categories.\nfunction getType(code) {\n  if (isL(code))    { return L; }\n  if (isV(code))    { return V; }\n  if (isT(code))    { return T; }\n  if (isLV(code))   { return LV; }\n  if (isLVT(code))  { return LVT; }\n  if (isTone(code)) { return M; }\n  return X;\n}\n\n// State machine actions\nconst NO_ACTION = 0;\nconst DECOMPOSE = 1;\nconst COMPOSE   = 2;\nconst TONE_MARK = 4;\nconst INVALID   = 5;\n\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst STATE_TABLE = [\n  //       X                 L                 V                T                  LV                LVT               M\n  // State 0: start state\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 1: <L>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [  COMPOSE, 2  ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [  INVALID, 0  ] ],\n\n  // State 2: <L,V> or <LV>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [  COMPOSE, 3  ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ],\n\n  // State 3: <L,V,T> or <LVT>\n  [ [ NO_ACTION, 0 ], [ NO_ACTION, 1 ], [ NO_ACTION, 0 ], [ NO_ACTION, 0 ], [ DECOMPOSE, 2 ], [ DECOMPOSE, 3 ], [ TONE_MARK, 0 ] ]\n];\n\nfunction getGlyph(font, code, features) {\n  return new GlyphInfo(font, font.glyphForCodePoint(code).id, [code], features);\n}\n\nfunction decompose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyph.codePoints[0];\n\n  let s = code - HANGUL_BASE;\n  let t = T_BASE + s % T_COUNT;\n  s = s / T_COUNT | 0;\n  let l = L_BASE + s / V_COUNT | 0;\n  let v = V_BASE + s % V_COUNT;\n\n  // Don't decompose if all of the components are not available\n  if (!font.hasGlyphForCodePoint(l) ||\n      !font.hasGlyphForCodePoint(v) ||\n      (t !== T_BASE && !font.hasGlyphForCodePoint(t))) {\n    return i;\n  }\n\n  // Replace the current glyph with decomposed L, V, and T glyphs,\n  // and apply the proper OpenType features to each component.\n  let ljmo = getGlyph(font, l, glyph.features);\n  ljmo.features.ljmo = true;\n\n  let vjmo = getGlyph(font, v, glyph.features);\n  vjmo.features.vjmo = true;\n\n  let insert = [ ljmo, vjmo ];\n\n  if (t > T_BASE) {\n    let tjmo = getGlyph(font, t, glyph.features);\n    tjmo.features.tjmo = true;\n    insert.push(tjmo);\n  }\n\n  glyphs.splice(i, 1, ...insert);\n  return i + insert.length - 1;\n}\n\nfunction compose(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n  let type = getType(code);\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let prevType = getType(prev);\n\n  // Figure out what type of syllable we're dealing with\n  let lv, ljmo, vjmo, tjmo;\n  if (prevType === LV && type === T) {\n    // <LV,T>\n    lv = prev;\n    tjmo = glyph;\n  } else {\n    if (type === V) {\n      // <L,V>\n      ljmo = glyphs[i - 1];\n      vjmo = glyph;\n    } else {\n      // <L,V,T>\n      ljmo = glyphs[i - 2];\n      vjmo = glyphs[i - 1];\n      tjmo = glyph;\n    }\n\n    let l = ljmo.codePoints[0];\n    let v = vjmo.codePoints[0];\n\n    // Make sure L and V are combining characters\n    if (isCombiningL(l) && isCombiningV(v)) {\n      lv = HANGUL_BASE + ((l - L_BASE) * V_COUNT + (v - V_BASE)) * T_COUNT;\n    }\n  }\n\n  let t = (tjmo && tjmo.codePoints[0]) || T_BASE;\n  if ((lv != null) && (t === T_BASE || isCombiningT(t))) {\n    let s = lv + (t - T_BASE);\n\n    // Replace with a composed glyph if supported by the font,\n    // otherwise apply the proper OpenType features to each component.\n    if (font.hasGlyphForCodePoint(s)) {\n      let del = prevType === V ? 3 : 2;\n      glyphs.splice(i - del + 1, del, getGlyph(font, s, glyph.features));\n      return i - del + 1;\n    }\n  }\n\n  // Didn't compose (either a non-combining component or unsupported by font).\n  if (ljmo) { ljmo.features.ljmo = true; }\n  if (vjmo) { vjmo.features.vjmo = true; }\n  if (tjmo) { tjmo.features.tjmo = true; }\n\n  if (prevType === LV) {\n    // Sequence was originally <L,V>, which got combined earlier.\n    // Either the T was non-combining, or the LVT glyph wasn't supported.\n    // Decompose the glyph again and apply OT features.\n    decompose(glyphs, i - 1, font);\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction getLength(code) {\n  switch (getType(code)) {\n    case LV:\n    case LVT:\n      return 1;\n    case V:\n      return 2;\n    case T:\n      return 3;\n  }\n}\n\nfunction reorderToneMark(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  // Move tone mark to the beginning of the previous syllable, unless it is zero width\n  if (font.glyphForCodePoint(code).advanceWidth === 0) { return; }\n\n  let prev = glyphs[i - 1].codePoints[0];\n  let len = getLength(prev);\n\n  glyphs.splice(i, 1);\n  return glyphs.splice(i - len, 0, glyph);\n}\n\nfunction insertDottedCircle(glyphs, i, font) {\n  let glyph = glyphs[i];\n  let code = glyphs[i].codePoints[0];\n\n  if (font.hasGlyphForCodePoint(DOTTED_CIRCLE)) {\n    let dottedCircle = getGlyph(font, DOTTED_CIRCLE, glyph.features);\n\n    // If the tone mark is zero width, insert the dotted circle before, otherwise after\n    let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n    glyphs.splice(idx, 0, dottedCircle);\n    i++;\n  }\n\n  return i;\n}\n","{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}","{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}","// Cateories used in the OpenType spec:\n// https://www.microsoft.com/typography/otfntdev/devanot/shaping.aspx\nexport const CATEGORIES = {\n  X: 1 << 0,\n  C: 1 << 1,\n  V: 1 << 2,\n  N: 1 << 3,\n  H: 1 << 4,\n  ZWNJ: 1 << 5,\n  ZWJ: 1 << 6,\n  M: 1 << 7,\n  SM: 1 << 8,\n  VD: 1 << 9,\n  A: 1 << 10,\n  Placeholder: 1 << 11,\n  Dotted_Circle: 1 << 12,\n  RS: 1 << 13,    // Register Shifter, used in Khmer OT spec.\n  Coeng: 1 << 14, // Khmer-style Virama.\n  Repha: 1 << 15, // Atomically-encoded logical or visual repha.\n  Ra: 1 << 16,\n  CM: 1 << 17,    // Consonant-Medial.\n  Symbol: 1 << 18 // Avagraha, etc that take marks (SM,A,VD).\n};\n\n// Visual positions in a syllable from left to right.\nexport const POSITIONS = {\n  Start: 1 << 0,\n\n  Ra_To_Become_Reph: 1 << 1,\n  Pre_M: 1 << 2,\n  Pre_C: 1 << 3,\n\n  Base_C: 1 << 4,\n  After_Main: 1 << 5,\n\n  Above_C: 1 << 6,\n\n  Before_Sub: 1 << 7,\n  Below_C: 1 << 8,\n  After_Sub: 1 << 9,\n\n  Before_Post: 1 << 10,\n  Post_C: 1 << 11,\n  After_Post: 1 << 12,\n\n  Final_C: 1 << 13,\n  SMVD: 1 << 14,\n\n  End: 1 << 15\n};\n\nexport const CONSONANT_FLAGS = CATEGORIES.C | CATEGORIES.Ra | CATEGORIES.CM | CATEGORIES.V | CATEGORIES.Placeholder | CATEGORIES.Dotted_Circle;\nexport const JOINER_FLAGS = CATEGORIES.ZWJ | CATEGORIES.ZWNJ;\nexport const HALANT_OR_COENG_FLAGS = CATEGORIES.H | CATEGORIES.Coeng;\n\nexport const INDIC_CONFIGS = {\n  Default: {\n    hasOldSpec: false,\n    virama: 0,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Devanagari: {\n    hasOldSpec: true,\n    virama: 0x094D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Bengali: {\n    hasOldSpec: true,\n    virama: 0x09CD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gurmukhi: {\n    hasOldSpec: true,\n    virama: 0x0A4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Sub,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Gujarati: {\n    hasOldSpec: true,\n    virama: 0x0ACD,\n    basePos: 'Last',\n    rephPos: POSITIONS.Before_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Oriya: {\n    hasOldSpec: true,\n    virama: 0x0B4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Tamil: {\n    hasOldSpec: true,\n    virama: 0x0BCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  Telugu: {\n    hasOldSpec: true,\n    virama: 0x0C4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Explicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Kannada: {\n    hasOldSpec: true,\n    virama: 0x0CCD,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Post,\n    rephMode: 'Implicit',\n    blwfMode: 'Post_Only'\n  },\n\n  Malayalam: {\n    hasOldSpec: true,\n    virama: 0x0D4D,\n    basePos: 'Last',\n    rephPos: POSITIONS.After_Main,\n    rephMode: 'Log_Repha',\n    blwfMode: 'Pre_And_Post'\n  },\n\n  // Handled by UniversalShaper\n  // Sinhala: {\n  //   hasOldSpec: false,\n  //   virama: 0x0DCA,\n  //   basePos: 'Last_Sinhala',\n  //   rephPos: POSITIONS.After_Main,\n  //   rephMode: 'Explicit',\n  //   blwfMode: 'Pre_And_Post'\n  // },\n\n  Khmer: {\n    hasOldSpec: false,\n    virama: 0x17D2,\n    basePos: 'First',\n    rephPos: POSITIONS.Ra_To_Become_Reph,\n    rephMode: 'Vis_Repha',\n    blwfMode: 'Pre_And_Post'\n  }\n};\n\n// Additional decompositions that aren't in Unicode\nexport const INDIC_DECOMPOSITIONS = {\n  // Khmer\n  0x17BE: [0x17C1, 0x17BE],\n  0x17BF: [0x17C1, 0x17BF],\n  0x17C0: [0x17C1, 0x17C0],\n  0x17C4: [0x17C1, 0x17C4],\n  0x17C5: [0x17C1, 0x17C5]\n};\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport {getCategory} from 'unicode-properties';\nimport * as Script from '../../layout/Script';\nimport GlyphInfo from '../GlyphInfo';\nimport indicMachine from './indic.json';\nimport useData from './use.json';\nimport {\n  CATEGORIES,\n  POSITIONS,\n  CONSONANT_FLAGS,\n  JOINER_FLAGS,\n  HALANT_OR_COENG_FLAGS, INDIC_CONFIGS,\n  INDIC_DECOMPOSITIONS\n} from './indic-data';\nimport { decodeBase64 } from '../../utils';\n\nconst {decompositions} = useData;\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/indic.trie', 'base64')));\nconst stateMachine = new StateMachine(indicMachine);\n\n/**\n * The IndicShaper supports indic scripts e.g. Devanagari, Kannada, etc.\n * Based on code from Harfbuzz: https://github.com/behdad/harfbuzz/blob/master/src/hb-ot-shape-complex-indic.cc\n */\nexport default class IndicShaper extends DefaultShaper {\n  static zeroMarkWidths = 'NONE';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    plan.addStage(['locl', 'ccmp']);\n\n    plan.addStage(initialReordering);\n\n    plan.addStage('nukt');\n    plan.addStage('akhn');\n    plan.addStage('rphf', false);\n    plan.addStage('rkrf');\n    plan.addStage('pref', false);\n    plan.addStage('blwf', false);\n    plan.addStage('abvf', false);\n    plan.addStage('half', false);\n    plan.addStage('pstf', false);\n    plan.addStage('vatu');\n    plan.addStage('cjct');\n    plan.addStage('cfar', false);\n\n    plan.addStage(finalReordering);\n\n    plan.addStage({\n      local: ['init'],\n      global: ['pres', 'abvs', 'blws', 'psts', 'haln', 'dist', 'abvm', 'blwm', 'calt', 'clig']\n    });\n\n    // Setup the indic config for the selected script\n    plan.unicodeScript = Script.fromOpenType(plan.script);\n    plan.indicConfig = INDIC_CONFIGS[plan.unicodeScript] || INDIC_CONFIGS.Default;\n    plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== '2';\n\n    // TODO: turn off kern (Khmer) and liga features.\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split matras\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      let d = INDIC_DECOMPOSITIONS[codepoint] || decompositions[codepoint];\n      if (d) {\n        let decomposed = d.map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction indicCategory(glyph) {\n  return trie.get(glyph.codePoints[0]) >> 8;\n}\n\nfunction indicPosition(glyph) {\n  return 1 << (trie.get(glyph.codePoints[0]) & 0xff);\n}\n\nclass IndicInfo {\n  constructor(category, position, syllableType, syllable) {\n    this.category = category;\n    this.position = position;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  let last = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(indicCategory))) {\n    if (start > last) {\n      ++syllable;\n      for (let i = last; i < start; i++) {\n        glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n      }\n    }\n\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(\n        1 << indicCategory(glyphs[i]),\n        indicPosition(glyphs[i]),\n        tags[0],\n        syllable\n      );\n    }\n\n    last = end + 1;\n  }\n\n  if (last < glyphs.length) {\n    ++syllable;\n    for (let i = last; i < glyphs.length; i++) {\n      glyphs[i].shaperInfo = new IndicInfo(CATEGORIES.X, POSITIONS.End, 'non_indic_cluster', syllable);\n    }\n  }\n}\n\nfunction isConsonant(glyph) {\n  return glyph.shaperInfo.category & CONSONANT_FLAGS;\n}\n\nfunction isJoiner(glyph) {\n  return glyph.shaperInfo.category & JOINER_FLAGS;\n}\n\nfunction isHalantOrCoeng(glyph) {\n  return glyph.shaperInfo.category & HALANT_OR_COENG_FLAGS;\n}\n\nfunction wouldSubstitute(glyphs, feature) {\n  for (let glyph of glyphs) {\n    glyph.features = {[feature]: true};\n  }\n\n  let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n  GSUB.applyFeatures([feature], glyphs);\n\n  return glyphs.length === 1;\n}\n\nfunction consonantPosition(font, consonant, virama) {\n  let glyphs = [virama, consonant, virama];\n  if (wouldSubstitute(glyphs.slice(0, 2), 'blwf') || wouldSubstitute(glyphs.slice(1, 3), 'blwf')) {\n    return POSITIONS.Below_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pstf') || wouldSubstitute(glyphs.slice(1, 3), 'pstf')) {\n    return POSITIONS.Post_C;\n  } else if (wouldSubstitute(glyphs.slice(0, 2), 'pref') || wouldSubstitute(glyphs.slice(1, 3), 'pref')) {\n    return POSITIONS.Post_C;\n  }\n\n  return POSITIONS.Base_C;\n}\n\nfunction initialReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n  let virama = font.glyphForCodePoint(indicConfig.virama).id;\n  if (virama) {\n    let info = new GlyphInfo(font, virama, [indicConfig.virama]);\n    for (let i = 0; i < glyphs.length; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        glyphs[i].shaperInfo.position = consonantPosition(font, glyphs[i].copy(), info);\n      }\n    }\n  }\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let {category, syllableType} = glyphs[start].shaperInfo;\n\n    if (syllableType === 'symbol_cluster' || syllableType === 'non_indic_cluster') {\n      continue;\n    }\n\n    if (syllableType === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = new IndicInfo(\n        1 << indicCategory(g),\n        indicPosition(g),\n        glyphs[start].shaperInfo.syllableType,\n        glyphs[start].shaperInfo.syllable\n      );\n\n      // Insert after possible Repha.\n      let i = start;\n      while (i < end && glyphs[i].shaperInfo.category === CATEGORIES.Repha) {\n        i++;\n      }\n\n      glyphs.splice(i++, 0, g);\n      end++;\n    }\n\n    // 1. Find base consonant:\n    //\n    // The shaping engine finds the base consonant of the syllable, using the\n    // following algorithm: starting from the end of the syllable, move backwards\n    // until a consonant is found that does not have a below-base or post-base\n    // form (post-base forms have to follow below-base forms), or that is not a\n    // pre-base reordering Ra, or arrive at the first consonant. The consonant\n    // stopped at will be the base.\n\n    let base = end;\n    let limit = start;\n    let hasReph = false;\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    if (indicConfig.rephPos !== POSITIONS.Ra_To_Become_Reph &&\n      features.rphf &&\n      start + 3 <= end && (\n        (indicConfig.rephMode === 'Implicit' && !isJoiner(glyphs[start + 2])) ||\n        (indicConfig.rephMode === 'Explicit' && glyphs[start + 2].shaperInfo.category === CATEGORIES.ZWJ)\n      )\n    ) {\n      // See if it matches the 'rphf' feature.\n      let g = [glyphs[start].copy(), glyphs[start + 1].copy(), glyphs[start + 2].copy()];\n      if (wouldSubstitute(g.slice(0, 2), 'rphf') || (indicConfig.rephMode === 'Explicit' && wouldSubstitute(g, 'rphf'))) {\n        limit += 2;\n        while (limit < end && isJoiner(glyphs[limit])) {\n          limit++;\n        }\n        base = start;\n        hasReph = true;\n      }\n    } else if (indicConfig.rephMode === 'Log_Repha' && glyphs[start].shaperInfo.category === CATEGORIES.Repha) {\n      limit++;\n      while (limit < end && isJoiner(glyphs[limit])) {\n        limit++;\n      }\n      base = start;\n      hasReph = true;\n    }\n\n    switch (indicConfig.basePos) {\n      case 'Last': {\n        // starting from the end of the syllable, move backwards\n        let i = end;\n        let seenBelow = false;\n\n        do {\n          let info = glyphs[--i].shaperInfo;\n\n          // until a consonant is found\n          if (isConsonant(glyphs[i])) {\n            // that does not have a below-base or post-base form\n            // (post-base forms have to follow below-base forms),\n            if (info.position !== POSITIONS.Below_C && (info.position !== POSITIONS.Post_C || seenBelow)) {\n              base = i;\n              break;\n            }\n\n            // or that is not a pre-base reordering Ra,\n            //\n            // IMPLEMENTATION NOTES:\n            //\n            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n            // by the logic above already.\n            //\n\n            // or arrive at the first consonant. The consonant stopped at will\n            // be the base.\n            if (info.position === POSITIONS.Below_C) {\n              seenBelow = true;\n            }\n\n            base = i;\n          } else if (start < i && info.category === CATEGORIES.ZWJ && glyphs[i - 1].shaperInfo.category === CATEGORIES.H) {\n            // A ZWJ after a Halant stops the base search, and requests an explicit\n            // half form.\n            // A ZWJ before a Halant, requests a subjoined form instead, and hence\n            // search continues.  This is particularly important for Bengali\n            // sequence Ra,H,Ya that should form Ya-Phalaa by subjoining Ya.\n            break;\n          }\n        } while (i > limit);\n        break;\n      }\n\n      case 'First': {\n        // The first consonant is always the base.\n        base = start;\n\n        // Mark all subsequent consonants as below.\n        for (let i = base + 1; i < end; i++) {\n          if (isConsonant(glyphs[i])) {\n            glyphs[i].shaperInfo.position = POSITIONS.Below_C;\n          }\n        }\n      }\n    }\n\n    // If the syllable starts with Ra + Halant (in a script that has Reph)\n    // and has more than one consonant, Ra is excluded from candidates for\n    // base consonants.\n    //\n    //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n    if (hasReph && base === start && limit - base <= 2) {\n      hasReph = false;\n    }\n\n    // 2. Decompose and reorder Matras:\n    //\n    // Each matra and any syllable modifier sign in the cluster are moved to the\n    // appropriate position relative to the consonant(s) in the cluster. The\n    // shaping engine decomposes two- or three-part matras into their constituent\n    // parts before any repositioning. Matra characters are classified by which\n    // consonant in a conjunct they have affinity for and are reordered to the\n    // following positions:\n    //\n    //   o Before first half form in the syllable\n    //   o After subjoined consonants\n    //   o After post-form consonant\n    //   o After main consonant (for above marks)\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // The normalize() routine has already decomposed matras for us, so we don't\n    // need to worry about that.\n\n    // 3.  Reorder marks to canonical order:\n    //\n    // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n    // if necessary, so that the nukta is first.\n    //\n    // IMPLEMENTATION NOTES:\n    //\n    // We don't need to do this: the normalize() routine already did this for us.\n\n    // Reorder characters\n\n    for (let i = start; i < base; i++) {\n      let info = glyphs[i].shaperInfo;\n      info.position = Math.min(POSITIONS.Pre_C, info.position);\n    }\n\n    if (base < end) {\n      glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n    }\n\n    // Mark final consonants.  A final consonant is one appearing after a matra,\n    // like in Khmer.\n    for (let i = base + 1; i < end; i++) {\n      if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n        for (let j = i + 1; j < end; j++) {\n          if (isConsonant(glyphs[j])) {\n            glyphs[j].shaperInfo.position = POSITIONS.Final_C;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // Handle beginning Ra\n    if (hasReph) {\n      glyphs[start].shaperInfo.position = POSITIONS.Ra_To_Become_Reph;\n    }\n\n    // For old-style Indic script tags, move the first post-base Halant after\n    // last consonant.\n    //\n    // Reports suggest that in some scripts Uniscribe does this only if there\n    // is *not* a Halant after last consonant already (eg. Kannada), while it\n    // does it unconditionally in other scripts (eg. Malayalam).  We don't\n    // currently know about other scripts, so we single out Malayalam for now.\n    //\n    // Kannada test case:\n    // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n    // With some versions of Lohit Kannada.\n    // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n    //\n    // Malayalam test case:\n    // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n    // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n    if (plan.isOldSpec) {\n      let disallowDoubleHalants = plan.unicodeScript !== 'Malayalam';\n      for (let i = base + 1; i < end; i++) {\n        if (glyphs[i].shaperInfo.category === CATEGORIES.H) {\n          let j;\n          for (j = end - 1; j > i; j--) {\n            if (isConsonant(glyphs[j]) || (disallowDoubleHalants && glyphs[j].shaperInfo.category === CATEGORIES.H)) {\n              break;\n            }\n          }\n\n          if (glyphs[j].shaperInfo.category !== CATEGORIES.H && j > i) {\n            // Move Halant to after last consonant.\n            let t = glyphs[i];\n            glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n            glyphs[j] = t;\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Attach misc marks to previous char to move with them.\n    let lastPos = POSITIONS.Start;\n    for (let i = start; i < end; i++) {\n      let info = glyphs[i].shaperInfo;\n      if (info.category & (JOINER_FLAGS | CATEGORIES.N | CATEGORIES.RS | CATEGORIES.CM | HALANT_OR_COENG_FLAGS & info.category)) {\n        info.position = lastPos;\n        if (info.category === CATEGORIES.H && info.position === POSITIONS.Pre_M) {\n          // Uniscribe doesn't move the Halant with Left Matra.\n          // TEST: U+092B,U+093F,U+094DE\n          // We follow.  This is important for the Sinhala\n          // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n          // where U+0DD9 is a left matra and U+0DCA is the virama.\n          // We don't want to move the virama with the left matra.\n          // TEST: U+0D9A,U+0DDA\n          for (let j = i; j > start; j--) {\n            if (glyphs[j - 1].shaperInfo.position !== POSITIONS.Pre_M) {\n              info.position = glyphs[j - 1].shaperInfo.position;\n              break;\n            }\n          }\n        }\n      } else if (info.position !== POSITIONS.SMVD) {\n        lastPos = info.position;\n      }\n    }\n\n    // For post-base consonants let them own anything before them\n    // since the last consonant or matra.\n    let last = base;\n    for (let i = base + 1; i < end; i++) {\n      if (isConsonant(glyphs[i])) {\n        for (let j = last + 1; j < i; j++) {\n          if (glyphs[j].shaperInfo.position < POSITIONS.SMVD) {\n            glyphs[j].shaperInfo.position = glyphs[i].shaperInfo.position;\n          }\n        }\n        last = i;\n      } else if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n        last = i;\n      }\n    }\n\n    let arr = glyphs.slice(start, end);\n    arr.sort((a, b) => a.shaperInfo.position - b.shaperInfo.position);\n    glyphs.splice(start, arr.length, ...arr);\n\n    // Find base again\n    for (let i = start; i < end; i++) {\n      if (glyphs[i].shaperInfo.position === POSITIONS.Base_C) {\n        base = i;\n        break;\n      }\n    }\n\n    // Setup features now\n\n    // Reph\n    for (let i = start; i < end && glyphs[i].shaperInfo.position === POSITIONS.Ra_To_Become_Reph; i++) {\n      glyphs[i].features.rphf = true;\n    }\n\n    // Pre-base\n    let blwf = !plan.isOldSpec && indicConfig.blwfMode === 'Pre_And_Post';\n    for (let i = start; i < base; i++) {\n      glyphs[i].features.half = true;\n      if (blwf) {\n        glyphs[i].features.blwf = true;\n      }\n    }\n\n    // Post-base\n    for (let i = base + 1; i < end; i++) {\n      glyphs[i].features.abvf = true;\n      glyphs[i].features.pstf = true;\n      glyphs[i].features.blwf = true;\n    }\n\n    if (plan.isOldSpec && plan.unicodeScript === 'Devanagari') {\n      // Old-spec eye-lash Ra needs special handling.  From the\n      // spec:\n      //\n      // \"The feature 'below-base form' is applied to consonants\n      // having below-base forms and following the base consonant.\n      // The exception is vattu, which may appear below half forms\n      // as well as below the base glyph. The feature 'below-base\n      // form' will be applied to all such occurrences of Ra as well.\"\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n      // with Sanskrit 2003 font.\n      //\n      // However, note that Ra,Halant,ZWJ is the correct way to\n      // request eyelash form of Ra, so we wouldbn't inhibit it\n      // in that sequence.\n      //\n      // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n      for (let i = start; i + 1 < base; i++) {\n        if (glyphs[i].shaperInfo.category === CATEGORIES.Ra &&\n          glyphs[i + 1].shaperInfo.category === CATEGORIES.H &&\n          (i + 1 === base || glyphs[i + 2].shaperInfo.category === CATEGORIES.ZWJ)\n        ) {\n          glyphs[i].features.blwf = true;\n          glyphs[i + 1].features.blwf = true;\n        }\n      }\n    }\n\n    let prefLen = 2;\n    if (features.pref && base + prefLen < end) {\n      // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n      for (let i = base + 1; i + prefLen - 1 < end; i++) {\n        let g = [glyphs[i].copy(), glyphs[i + 1].copy()];\n        if (wouldSubstitute(g, 'pref')) {\n          for (let j = 0; j < prefLen; j++) {\n            glyphs[i++].features.pref = true;\n          }\n\n          // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n          // Read the feature spec.\n          // This allows distinguishing the following cases with MS Khmer fonts:\n          // U+1784,U+17D2,U+179A,U+17D2,U+1782\n          // U+1784,U+17D2,U+1782,U+17D2,U+179A\n          if (features.cfar) {\n            for (; i < end; i++) {\n              glyphs[i].features.cfar = true;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply ZWJ/ZWNJ effects\n    for (let i = start + 1; i < end; i++) {\n      if (isJoiner(glyphs[i])) {\n        let nonJoiner = glyphs[i].shaperInfo.category === CATEGORIES.ZWNJ;\n        let j = i;\n\n        do {\n          j--;\n\n          // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n          // being there, since we don't skip them for the CJCT\n          // feature (ie. F_MANUAL_ZWJ)\n\n          // A ZWNJ disables HALF.\n          if (nonJoiner) {\n            delete glyphs[j].features.half;\n          }\n        } while (j > start && !isConsonant(glyphs[j]));\n      }\n    }\n  }\n}\n\nfunction finalReordering(font, glyphs, plan) {\n  let indicConfig = plan.indicConfig;\n  let features = font._layoutEngine.engine.GSUBProcessor.features;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    // 4. Final reordering:\n    //\n    // After the localized forms and basic shaping forms GSUB features have been\n    // applied (see below), the shaping engine performs some final glyph\n    // reordering before applying all the remaining font features to the entire\n    // cluster.\n\n    let tryPref = !!features.pref;\n\n    // Find base again\n    let base = start;\n    for (; base < end; base++) {\n      if (glyphs[base].shaperInfo.position >= POSITIONS.Base_C) {\n        if (tryPref && base + 1 < end) {\n          for (let i = base + 1; i < end; i++) {\n            if (glyphs[i].features.pref) {\n              if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                // Ok, this was a 'pref' candidate but didn't form any.\n                // Base is around here...\n                base = i;\n                while (base < end && isHalantOrCoeng(glyphs[base])) {\n                  base++;\n                }\n                glyphs[base].shaperInfo.position = POSITIONS.BASE_C;\n                tryPref = false;\n              }\n              break;\n            }\n          }\n        }\n\n        // For Malayalam, skip over unformed below- (but NOT post-) forms.\n        if (plan.unicodeScript === 'Malayalam') {\n          for (let i = base + 1; i < end; i++) {\n            while (i < end && isJoiner(glyphs[i])) {\n              i++;\n            }\n\n            if (i === end || !isHalantOrCoeng(glyphs[i])) {\n              break;\n            }\n\n            i++; // Skip halant.\n            while (i < end && isJoiner(glyphs[i])) {\n              i++;\n            }\n\n            if (i < end && isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === POSITIONS.Below_C) {\n              base = i;\n              glyphs[base].shaperInfo.position = POSITIONS.Base_C;\n            }\n          }\n        }\n\n        if (start < base && glyphs[base].shaperInfo.position > POSITIONS.Base_C) {\n          base--;\n        }\n        break;\n      }\n    }\n\n    if (base === end && start < base && glyphs[base - 1].shaperInfo.category === CATEGORIES.ZWJ) {\n      base--;\n    }\n\n    if (base < end) {\n      while (start < base && glyphs[base].shaperInfo.category & (CATEGORIES.N | HALANT_OR_COENG_FLAGS)) {\n        base--;\n      }\n    }\n\n    // o Reorder matras:\n    //\n    // If a pre-base matra character had been reordered before applying basic\n    // features, the glyph can be moved closer to the main consonant based on\n    // whether half-forms had been formed. Actual position for the matra is\n    // defined as “after last standalone halant glyph, after initial matra\n    // position and before the main consonant”. If ZWJ or ZWNJ follow this\n    // halant, position is moved after it.\n    //\n\n    if (start + 1 < end && start < base) { // Otherwise there can't be any pre-base matra characters.\n      // If we lost track of base, alas, position before last thingy.\n      let newPos = base === end ? base - 2 : base - 1;\n\n      // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n      // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n      // We want to position matra after them.\n      if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n        while (newPos > start && !(glyphs[newPos].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n          newPos--;\n        }\n\n        // If we found no Halant we are done.\n        // Otherwise only proceed if the Halant does\n        // not belong to the Matra itself!\n        if (isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n          // If ZWJ or ZWNJ follow this halant, position is moved after it.\n          if (newPos + 1 < end && isJoiner(glyphs[newPos + 1])) {\n            newPos++;\n          }\n        } else {\n          newPos = start; // No move.\n        }\n      }\n\n      if (start < newPos && glyphs[newPos].shaperInfo.position !== POSITIONS.Pre_M) {\n        // Now go see if there's actually any matras...\n        for (let i = newPos; i > start; i--) {\n          if (glyphs[i - 1].shaperInfo.position === POSITIONS.Pre_M) {\n            let oldPos = i - 1;\n            if (oldPos < base && base <= newPos) { // Shouldn't actually happen.\n              base--;\n            }\n\n            let tmp = glyphs[oldPos];\n            glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n            glyphs[newPos] = tmp;\n\n            newPos--;\n          }\n        }\n      }\n    }\n\n    // o Reorder reph:\n    //\n    // Reph’s original position is always at the beginning of the syllable,\n    // (i.e. it is not reordered at the character reordering stage). However,\n    // it will be reordered according to the basic-forms shaping results.\n    // Possible positions for reph, depending on the script, are; after main,\n    // before post-base consonant forms, and after post-base consonant forms.\n\n    // Two cases:\n    //\n    // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n    //   we should only move it if the sequence ligated to the repha form.\n    //\n    // - If repha is encoded separately and in the logical position, we should only\n    //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n    //   to make it work without the reordering.\n    if (start + 1 < end &&\n      glyphs[start].shaperInfo.position === POSITIONS.Ra_To_Become_Reph &&\n      (glyphs[start].shaperInfo.category === CATEGORIES.Repha) !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)\n    ) {\n      let newRephPos;\n      let rephPos = indicConfig.rephPos;\n      let found = false;\n\n      // 1. If reph should be positioned after post-base consonant forms,\n      //    proceed to step 5.\n      if (rephPos !== POSITIONS.After_Post) {\n        //  2. If the reph repositioning class is not after post-base: target\n        //     position is after the first explicit halant glyph between the\n        //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n        //     are following this halant, position is moved after it. If such\n        //     position is found, this is the target position. Otherwise,\n        //     proceed to the next step.\n        //\n        //     Note: in old-implementation fonts, where classifications were\n        //     fixed in shaping engine, there was no case where reph position\n        //     will be found on this step.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n\n        // 3. If reph should be repositioned after the main consonant: find the\n        //    first consonant not ligated with main, or find the first\n        //    consonant that is not a potential pre-base reordering Ra.\n        if (!found && rephPos === POSITIONS.After_Main) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= POSITIONS.After_Main) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n\n        // 4. If reph should be positioned before post-base consonant, find\n        //    first post-base classified consonant not ligated with main. If no\n        //    consonant is found, the target position should be before the\n        //    first matra, syllable modifier sign or vedic sign.\n        //\n        // This is our take on what step 4 is trying to say (and failing, BADLY).\n        if (!found && rephPos === POSITIONS.After_Sub) {\n          newRephPos = base;\n          while (newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & (POSITIONS.Post_C | POSITIONS.After_Post | POSITIONS.SMVD))) {\n            newRephPos++;\n          }\n\n          found = newRephPos < end;\n        }\n      }\n\n      //  5. If no consonant is found in steps 3 or 4, move reph to a position\n      //     immediately before the first post-base matra, syllable modifier\n      //     sign or vedic sign that has a reordering class after the intended\n      //     reph position. For example, if the reordering position for reph\n      //     is post-main, it will skip above-base matras that also have a\n      //     post-main position.\n      if (!found) {\n        // Copied from step 2.\n        newRephPos = start + 1;\n        while (newRephPos < base && !isHalantOrCoeng(glyphs[newRephPos])) {\n          newRephPos++;\n        }\n\n        if (newRephPos < base && isHalantOrCoeng(glyphs[newRephPos])) {\n          // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n          if (newRephPos + 1 < base && isJoiner(glyphs[newRephPos + 1])) {\n            newRephPos++;\n          }\n\n          found = true;\n        }\n      }\n\n      // 6. Otherwise, reorder reph to the end of the syllable.\n      if (!found) {\n        newRephPos = end - 1;\n        while (newRephPos > start && glyphs[newRephPos].shaperInfo.position === POSITIONS.SMVD) {\n          newRephPos--;\n        }\n\n        // If the Reph is to be ending up after a Matra,Halant sequence,\n        // position it before that Halant so it can interact with the Matra.\n        // However, if it's a plain Consonant,Halant we shouldn't do that.\n        // Uniscribe doesn't do this.\n        // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n        if (isHalantOrCoeng(glyphs[newRephPos])) {\n          for (let i = base + 1; i < newRephPos; i++) {\n            if (glyphs[i].shaperInfo.category === CATEGORIES.M) {\n              newRephPos--;\n            }\n          }\n        }\n      }\n\n      let reph = glyphs[start];\n      glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n      glyphs[newRephPos] = reph;\n\n      if (start < base && base <= newRephPos) {\n        base--;\n      }\n    }\n\n    // o Reorder pre-base reordering consonants:\n    //\n    // If a pre-base reordering consonant is found, reorder it according to\n    // the following rules:\n    if (tryPref && base + 1 < end) {\n      for (let i = base + 1; i < end; i++) {\n        if (glyphs[i].features.pref) {\n           // 1. Only reorder a glyph produced by substitution during application\n           //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n           //    the feature generally but block it in certain contexts.)\n\n          // Note: We just check that something got substituted.  We don't check that\n          // the <pref> feature actually did it...\n          //\n          // Reorder pref only if it ligated.\n          if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n            // 2. Try to find a target position the same way as for pre-base matra.\n            //    If it is found, reorder pre-base consonant glyph.\n            //\n            // 3. If position is not found, reorder immediately before main\n            //    consonant.\n            let newPos = base;\n\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== 'Malayalam' && plan.unicodeScript !== 'Tamil') {\n              while (newPos > start && !(glyphs[newPos - 1].shaperInfo.category & (CATEGORIES.M | HALANT_OR_COENG_FLAGS))) {\n                newPos--;\n              }\n\n              // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n              // split matra, it should be reordered to *before* the left part of such matra.\n              if (newPos > start && glyphs[newPos - 1].shaperInfo.category === CATEGORIES.M) {\n                let oldPos = i;\n                for (let j = base + 1; j < oldPos; j++) {\n                  if (glyphs[j].shaperInfo.category === CATEGORIES.M) {\n                    newPos--;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (newPos > start && isHalantOrCoeng(glyphs[newPos - 1])) {\n              // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n              if (newPos < end && isJoiner(glyphs[newPos])) {\n                newPos++;\n              }\n            }\n\n            let oldPos = i;\n            let tmp = glyphs[oldPos];\n            glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n            glyphs[newPos] = tmp;\n\n            if (newPos <= base && base < oldPos) {\n              base++;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    // Apply 'init' to the Left Matra if it's a word start.\n    if (glyphs[start].shaperInfo.position === POSITIONS.Pre_M && (!start || !/Cf|Mn/.test(getCategory(glyphs[start - 1].codePoints[0])))) {\n      glyphs[start].features.init = true;\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n","import DefaultShaper from './DefaultShaper';\nimport StateMachine from 'dfa';\nimport UnicodeTrie from 'unicode-trie';\nimport GlyphInfo from '../GlyphInfo';\nimport useData from './use.json';\nimport { decodeBase64 } from '../../utils';\n\nconst {categories, decompositions} = useData;\nconst trie = new UnicodeTrie(decodeBase64(require('fs').readFileSync(__dirname + '/use.trie', 'base64')));\nconst stateMachine = new StateMachine(useData);\n\n/**\n * This shaper is an implementation of the Universal Shaping Engine, which\n * uses Unicode data to shape a number of scripts without a dedicated shaping engine.\n * See https://www.microsoft.com/typography/OpenTypeDev/USE/intro.htm.\n */\nexport default class UniversalShaper extends DefaultShaper {\n  static zeroMarkWidths = 'BEFORE_GPOS';\n  static planFeatures(plan) {\n    plan.addStage(setupSyllables);\n\n    // Default glyph pre-processing group\n    plan.addStage(['locl', 'ccmp', 'nukt', 'akhn']);\n\n    // Reordering group\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['rphf'], false);\n    plan.addStage(recordRphf);\n    plan.addStage(clearSubstitutionFlags);\n    plan.addStage(['pref']);\n    plan.addStage(recordPref);\n\n    // Orthographic unit shaping group\n    plan.addStage(['rkrf', 'abvf', 'blwf', 'half', 'pstf', 'vatu', 'cjct']);\n    plan.addStage(reorder);\n\n    // Topographical features\n    // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n    // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n\n    // Standard topographic presentation and positional feature application\n    plan.addStage(['abvs', 'blws', 'pres', 'psts', 'dist', 'abvm', 'blwm']);\n  }\n\n  static assignFeatures(plan, glyphs) {\n    // Decompose split vowels\n    // TODO: do this in a more general unicode normalizer\n    for (let i = glyphs.length - 1; i >= 0; i--) {\n      let codepoint = glyphs[i].codePoints[0];\n      if (decompositions[codepoint]) {\n        let decomposed = decompositions[codepoint].map(c => {\n          let g = plan.font.glyphForCodePoint(c);\n          return new GlyphInfo(plan.font, g.id, [c], glyphs[i].features);\n        });\n\n        glyphs.splice(i, 1, ...decomposed);\n      }\n    }\n  }\n}\n\nfunction useCategory(glyph) {\n  return trie.get(glyph.codePoints[0]);\n}\n\nclass USEInfo {\n  constructor(category, syllableType, syllable) {\n    this.category = category;\n    this.syllableType = syllableType;\n    this.syllable = syllable;\n  }\n}\n\nfunction setupSyllables(font, glyphs) {\n  let syllable = 0;\n  for (let [start, end, tags] of stateMachine.match(glyphs.map(useCategory))) {\n    ++syllable;\n\n    // Create shaper info\n    for (let i = start; i <= end; i++) {\n      glyphs[i].shaperInfo = new USEInfo(categories[useCategory(glyphs[i])], tags[0], syllable);\n    }\n\n    // Assign rphf feature\n    let limit = glyphs[start].shaperInfo.category === 'R' ? 1 : Math.min(3, end - start);\n    for (let i = start; i < start + limit; i++) {\n      glyphs[i].features.rphf = true;\n    }\n  }\n}\n\nfunction clearSubstitutionFlags(font, glyphs) {\n  for (let glyph of glyphs) {\n    glyph.substituted = false;\n  }\n}\n\nfunction recordRphf(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted && glyph.features.rphf) {\n      // Mark a substituted repha.\n      glyph.shaperInfo.category = 'R';\n    }\n  }\n}\n\nfunction recordPref(font, glyphs) {\n  for (let glyph of glyphs) {\n    if (glyph.substituted) {\n      // Mark a substituted pref as VPre, as they behave the same way.\n      glyph.shaperInfo.category = 'VPre';\n    }\n  }\n}\n\nfunction reorder(font, glyphs) {\n  let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n\n  for (let start = 0, end = nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = nextSyllable(glyphs, start)) {\n    let i, j;\n    let info = glyphs[start].shaperInfo;\n    let type = info.syllableType;\n\n    // Only a few syllable types need reordering.\n    if (type !== 'virama_terminated_cluster' && type !== 'standard_cluster' && type !== 'broken_cluster') {\n      continue;\n    }\n\n    // Insert a dotted circle glyph in broken clusters.\n    if (type === 'broken_cluster' && dottedCircle) {\n      let g = new GlyphInfo(font, dottedCircle, [0x25cc]);\n      g.shaperInfo = info;\n\n      // Insert after possible Repha.\n      for (i = start; i < end && glyphs[i].shaperInfo.category === 'R'; i++);\n      glyphs.splice(++i, 0, g);\n      end++;\n    }\n\n    // Move things forward.\n    if (info.category === 'R' && end - start > 1) {\n      // Got a repha. Reorder it to after first base, before first halant.\n      for (i = start + 1; i < end; i++) {\n        info = glyphs[i].shaperInfo;\n        if (isBase(info) || isHalant(glyphs[i])) {\n          // If we hit a halant, move before it; otherwise it's a base: move to it's\n          // place, and shift things in between backward.\n          if (isHalant(glyphs[i])) {\n            i--;\n          }\n\n          glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n          break;\n        }\n      }\n    }\n\n    // Move things back.\n    for (i = start, j = end; i < end; i++) {\n      info = glyphs[i].shaperInfo;\n      if (isBase(info) || isHalant(glyphs[i])) {\n        // If we hit a halant, move after it; otherwise it's a base: move to it's\n        // place, and shift things in between backward.\n        j = isHalant(glyphs[i]) ? i + 1 : i;\n      } else if ((info.category === 'VPre' || info.category === 'VMPre') && j < i) {\n        glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n      }\n    }\n  }\n}\n\nfunction nextSyllable(glyphs, start) {\n  if (start >= glyphs.length) return start;\n  let syllable = glyphs[start].shaperInfo.syllable;\n  while (++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n  return start;\n}\n\nfunction isHalant(glyph) {\n  return glyph.shaperInfo.category === 'H' && !glyph.isLigated;\n}\n\nfunction isBase(info) {\n  return info.category === 'B' || info.category === 'GB';\n}\n","import DefaultShaper from './DefaultShaper';\nimport ArabicShaper from './ArabicShaper';\nimport HangulShaper from './HangulShaper';\nimport IndicShaper from './IndicShaper';\nimport UniversalShaper from './UniversalShaper';\n\nconst SHAPERS = {\n  arab: ArabicShaper,    // Arabic\n  mong: ArabicShaper,    // Mongolian\n  syrc: ArabicShaper,    // Syriac\n  'nko ': ArabicShaper,  // N'Ko\n  phag: ArabicShaper,    // Phags Pa\n  mand: ArabicShaper,    // Mandaic\n  mani: ArabicShaper,    // Manichaean\n  phlp: ArabicShaper,    // Psalter Pahlavi\n\n  hang: HangulShaper,    // Hangul\n\n  bng2: IndicShaper,     // Bengali\n  beng: IndicShaper,     // Bengali\n  dev2: IndicShaper,     // Devanagari\n  deva: IndicShaper,     // Devanagari\n  gjr2: IndicShaper,     // Gujarati\n  gujr: IndicShaper,     // Gujarati\n  guru: IndicShaper,     // Gurmukhi\n  gur2: IndicShaper,     // Gurmukhi\n  knda: IndicShaper,     // Kannada\n  knd2: IndicShaper,     // Kannada\n  mlm2: IndicShaper,     // Malayalam\n  mlym: IndicShaper,     // Malayalam\n  ory2: IndicShaper,     // Oriya\n  orya: IndicShaper,     // Oriya\n  taml: IndicShaper,     // Tamil\n  tml2: IndicShaper,     // Tamil\n  telu: IndicShaper,     // Telugu\n  tel2: IndicShaper,     // Telugu\n  khmr: IndicShaper,     // Khmer\n\n  bali: UniversalShaper, // Balinese\n  batk: UniversalShaper, // Batak\n  brah: UniversalShaper, // Brahmi\n  bugi: UniversalShaper, // Buginese\n  buhd: UniversalShaper, // Buhid\n  cakm: UniversalShaper, // Chakma\n  cham: UniversalShaper, // Cham\n  dupl: UniversalShaper, // Duployan\n  egyp: UniversalShaper, // Egyptian Hieroglyphs\n  gran: UniversalShaper, // Grantha\n  hano: UniversalShaper, // Hanunoo\n  java: UniversalShaper, // Javanese\n  kthi: UniversalShaper, // Kaithi\n  kali: UniversalShaper, // Kayah Li\n  khar: UniversalShaper, // Kharoshthi\n  khoj: UniversalShaper, // Khojki\n  sind: UniversalShaper, // Khudawadi\n  lepc: UniversalShaper, // Lepcha\n  limb: UniversalShaper, // Limbu\n  mahj: UniversalShaper, // Mahajani\n  // mand: UniversalShaper, // Mandaic\n  // mani: UniversalShaper, // Manichaean\n  mtei: UniversalShaper, // Meitei Mayek\n  modi: UniversalShaper, // Modi\n  // mong: UniversalShaper, // Mongolian\n  // 'nko ': UniversalShaper, // N’Ko\n  hmng: UniversalShaper, // Pahawh Hmong\n  // phag: UniversalShaper, // Phags-pa\n  // phlp: UniversalShaper, // Psalter Pahlavi\n  rjng: UniversalShaper, // Rejang\n  saur: UniversalShaper, // Saurashtra\n  shrd: UniversalShaper, // Sharada\n  sidd: UniversalShaper, // Siddham\n  sinh: IndicShaper, // Sinhala\n  sund: UniversalShaper, // Sundanese\n  sylo: UniversalShaper, // Syloti Nagri\n  tglg: UniversalShaper, // Tagalog\n  tagb: UniversalShaper, // Tagbanwa\n  tale: UniversalShaper, // Tai Le\n  lana: UniversalShaper, // Tai Tham\n  tavt: UniversalShaper, // Tai Viet\n  takr: UniversalShaper, // Takri\n  tibt: UniversalShaper, // Tibetan\n  tfng: UniversalShaper, // Tifinagh\n  tirh: UniversalShaper, // Tirhuta\n\n  latn: DefaultShaper,   // Latin\n  DFLT: DefaultShaper    // Default\n};\n\nexport function choose(script) {\n  if (!Array.isArray(script)) {\n    script = [script];\n  }\n\n  for (let s of script) {\n    let shaper = SHAPERS[s];\n    if (shaper) {\n      return shaper;\n    }\n  }\n\n  return DefaultShaper;\n}\n","import OTProcessor from './OTProcessor';\nimport GlyphInfo from './GlyphInfo';\n\nexport default class GSUBProcessor extends OTProcessor {\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        let glyph = this.glyphIterator.cur;\n        switch (table.version) {\n          case 1:\n            glyph.id = (glyph.id + table.deltaGlyphID) & 0xffff;\n            break;\n\n          case 2:\n            glyph.id = table.substitute.get(index);\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Multiple Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let sequence = table.sequences.get(index);\n\n          if (sequence.length === 0) {\n            // If the sequence length is zero, delete the glyph.\n            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n            this.glyphs.splice(this.glyphIterator.index, 1);\n            return true;\n          }\n\n          this.glyphIterator.cur.id = sequence[0];\n          this.glyphIterator.cur.ligatureComponent = 0;\n\n          let features = this.glyphIterator.cur.features;\n          let curGlyph = this.glyphIterator.cur;\n          let replacement = sequence.slice(1).map((gid, i) => {\n            let glyph = new GlyphInfo(this.font, gid, undefined, features);\n            glyph.shaperInfo = curGlyph.shaperInfo;\n            glyph.isLigated = curGlyph.isLigated;\n            glyph.ligatureComponent = i + 1;\n            glyph.substituted = true;\n            glyph.isMultiplied = true;\n            return glyph;\n          });\n\n          this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n          return true;\n        }\n\n        return false;\n      }\n\n      case 3: { // Alternate Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index !== -1) {\n          let USER_INDEX = 0; // TODO\n          this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n          return true;\n        }\n\n        return false;\n      }\n\n      case 4: { // Ligature Substitution\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        for (let ligature of table.ligatureSets.get(index)) {\n          let matched = this.sequenceMatchIndices(1, ligature.components);\n          if (!matched) {\n            continue;\n          }\n\n          let curGlyph = this.glyphIterator.cur;\n\n          // Concatenate all of the characters the new ligature will represent\n          let characters = curGlyph.codePoints.slice();\n          for (let index of matched) {\n            characters.push(...this.glyphs[index].codePoints);\n          }\n\n          // Create the replacement ligature glyph\n          let ligatureGlyph = new GlyphInfo(this.font, ligature.glyph, characters, curGlyph.features);\n          ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n          ligatureGlyph.isLigated = true;\n          ligatureGlyph.substituted = true;\n\n          // From Harfbuzz:\n          // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n          //   the ligature to keep its old ligature id.  This will allow it to attach to\n          //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n          //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n          //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n          //   later, we don't want them to lose their ligature id/component, otherwise\n          //   GPOS will fail to correctly position the mark ligature on top of the\n          //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n          //\n          // - If a ligature is formed of components that some of which are also ligatures\n          //   themselves, and those ligature components had marks attached to *their*\n          //   components, we have to attach the marks to the new ligature component\n          //   positions!  Now *that*'s tricky!  And these marks may be following the\n          //   last component of the whole sequence, so we should loop forward looking\n          //   for them and update them.\n          //\n          //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n          //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n          //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n          //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n          //   the new ligature with a component value of 2.\n          //\n          //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n          let isMarkLigature = curGlyph.isMark;\n          for (let i = 0; i < matched.length && isMarkLigature; i++) {\n            isMarkLigature = this.glyphs[matched[i]].isMark;\n          }\n\n          ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n\n          let lastLigID = curGlyph.ligatureID;\n          let lastNumComps = curGlyph.codePoints.length;\n          let curComps = lastNumComps;\n          let idx = this.glyphIterator.index + 1;\n\n          // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n          // This allows GPOS to attach marks to the correct ligature components.\n          for (let matchIndex of matched) {\n            // Don't assign new ligature components for mark ligatures (see above)\n            if (isMarkLigature) {\n              idx = matchIndex;\n            } else {\n              while (idx < matchIndex) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                idx++;\n              }\n            }\n\n            lastLigID = this.glyphs[idx].ligatureID;\n            lastNumComps = this.glyphs[idx].codePoints.length;\n            curComps += lastNumComps;\n            idx++; // skip base glyph\n          }\n\n          // Adjust ligature components for any marks following\n          if (lastLigID && !isMarkLigature) {\n            for (let i = idx; i < this.glyphs.length; i++) {\n              if (this.glyphs[i].ligatureID === lastLigID) {\n                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i].ligatureComponent || 1, lastNumComps);\n                this.glyphs[i].ligatureComponent = ligatureComponent;\n              } else {\n                break;\n              }\n            }\n          }\n\n          // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n          for (let i = matched.length - 1; i >= 0; i--) {\n            this.glyphs.splice(matched[i], 1);\n          }\n\n          this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n          return true;\n        }\n\n        return false;\n      }\n\n      case 5: // Contextual Substitution\n        return this.applyContext(table);\n\n      case 6: // Chaining Contextual Substitution\n        return this.applyChainingContext(table);\n\n      case 7: // Extension Substitution\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n    }\n  }\n}\n","import OTProcessor from './OTProcessor';\n\nexport default class GPOSProcessor extends OTProcessor {\n  applyPositionValue(sequenceIndex, value) {\n    let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n    if (value.xAdvance != null) {\n      position.xAdvance += value.xAdvance;\n    }\n\n    if (value.yAdvance != null) {\n      position.yAdvance += value.yAdvance;\n    }\n\n    if (value.xPlacement != null) {\n      position.xOffset += value.xPlacement;\n    }\n\n    if (value.yPlacement != null) {\n      position.yOffset += value.yPlacement;\n    }\n\n    // Adjustments for font variations\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (value.xPlaDevice) {\n        position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n      }\n\n      if (value.yPlaDevice) {\n        position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n      }\n\n      if (value.xAdvDevice) {\n        position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n      }\n\n      if (value.yAdvDevice) {\n        position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n      }\n    }\n\n    // TODO: device tables\n  }\n\n  applyLookup(lookupType, table) {\n    switch (lookupType) {\n      case 1: { // Single positioning value\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1:\n            this.applyPositionValue(0, table.value);\n            break;\n\n          case 2:\n            this.applyPositionValue(0, table.values.get(index));\n            break;\n        }\n\n        return true;\n      }\n\n      case 2: { // Pair Adjustment Positioning\n        let nextGlyph = this.glyphIterator.peek();\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let index = this.coverageIndex(table.coverage);\n        if (index === -1) {\n          return false;\n        }\n\n        switch (table.version) {\n          case 1: // Adjustments for glyph pairs\n            let set = table.pairSets.get(index);\n\n            for (let pair of set) {\n              if (pair.secondGlyph === nextGlyph.id) {\n                this.applyPositionValue(0, pair.value1);\n                this.applyPositionValue(1, pair.value2);\n                return true;\n              }\n            }\n\n            return false;\n\n          case 2: // Class pair adjustment\n            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n            if (class1 === -1 || class2 === -1) {\n              return false;\n            }\n\n            var pair = table.classRecords.get(class1).get(class2);\n            this.applyPositionValue(0, pair.value1);\n            this.applyPositionValue(1, pair.value2);\n            return true;\n        }\n      }\n\n      case 3: { // Cursive Attachment Positioning\n        let nextIndex = this.glyphIterator.peekIndex();\n        let nextGlyph = this.glyphs[nextIndex];\n        if (!nextGlyph) {\n          return false;\n        }\n\n        let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n        if (!curRecord || !curRecord.exitAnchor) {\n          return false;\n        }\n\n        let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n        if (!nextRecord || !nextRecord.entryAnchor) {\n          return false;\n        }\n\n        let entry = this.getAnchor(nextRecord.entryAnchor);\n        let exit = this.getAnchor(curRecord.exitAnchor);\n\n        let cur = this.positions[this.glyphIterator.index];\n        let next = this.positions[nextIndex];\n        let d;\n\n        switch (this.direction) {\n          case 'ltr':\n            cur.xAdvance = exit.x + cur.xOffset;\n\n            d = entry.x + next.xOffset;\n            next.xAdvance -= d;\n            next.xOffset -= d;\n            break;\n\n          case 'rtl':\n            d = exit.x + cur.xOffset;\n            cur.xAdvance -= d;\n            cur.xOffset -= d;\n            next.xAdvance = entry.x + next.xOffset;\n            break;\n        }\n\n        if (this.glyphIterator.flags.rightToLeft) {\n          this.glyphIterator.cur.cursiveAttachment = nextIndex;\n          cur.yOffset = entry.y - exit.y;\n        } else {\n          nextGlyph.cursiveAttachment = this.glyphIterator.index;\n          cur.yOffset = exit.y - entry.y;\n        }\n\n        return true;\n      }\n\n      case 4: { // Mark to base positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n        if (baseIndex === -1) {\n          return false;\n        }\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 5: { // Mark to ligature positioning\n        let markIndex = this.coverageIndex(table.markCoverage);\n        if (markIndex === -1) {\n          return false;\n        }\n\n        // search backward for a base glyph\n        let baseGlyphIndex = this.glyphIterator.index;\n        while (--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n\n        if (baseGlyphIndex < 0) {\n          return false;\n        }\n\n        let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n        if (ligIndex === -1) {\n          return false;\n        }\n\n        let ligAttach = table.ligatureArray[ligIndex];\n        let markGlyph = this.glyphIterator.cur;\n        let ligGlyph = this.glyphs[baseGlyphIndex];\n        let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && (markGlyph.ligatureComponent > 0)\n          ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1\n          : ligGlyph.codePoints.length - 1;\n\n        let markRecord = table.markArray[markIndex];\n        let baseAnchor = ligAttach[compIndex][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n        return true;\n      }\n\n      case 6: { // Mark to mark positioning\n        let mark1Index = this.coverageIndex(table.mark1Coverage);\n        if (mark1Index === -1) {\n          return false;\n        }\n\n        // get the previous mark to attach to\n        let prevIndex = this.glyphIterator.peekIndex(-1);\n        let prev = this.glyphs[prevIndex];\n        if (!prev || !prev.isMark) {\n          return false;\n        }\n\n        let cur = this.glyphIterator.cur;\n\n        // The following logic was borrowed from Harfbuzz\n        let good = false;\n        if (cur.ligatureID === prev.ligatureID) {\n          if (!cur.ligatureID) { // Marks belonging to the same base\n            good = true;\n          } else if (cur.ligatureComponent === prev.ligatureComponent) { // Marks belonging to the same ligature component\n            good = true;\n          }\n        } else {\n          // If ligature ids don't match, it may be the case that one of the marks\n          // itself is a ligature, in which case match.\n          if ((cur.ligatureID && !cur.ligatureComponent) || (prev.ligatureID && !prev.ligatureComponent)) {\n            good = true;\n          }\n        }\n\n        if (!good) {\n          return false;\n        }\n\n        let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n        if (mark2Index === -1) {\n          return false;\n        }\n\n        let markRecord = table.mark1Array[mark1Index];\n        let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n        this.applyAnchor(markRecord, baseAnchor, prevIndex);\n        return true;\n      }\n\n      case 7: // Contextual positioning\n        return this.applyContext(table);\n\n      case 8: // Chaining contextual positioning\n        return this.applyChainingContext(table);\n\n      case 9: // Extension positioning\n        return this.applyLookup(table.lookupType, table.extension);\n\n      default:\n        throw new Error(`Unsupported GPOS table: ${lookupType}`);\n    }\n  }\n\n  applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n    let baseCoords = this.getAnchor(baseAnchor);\n    let markCoords = this.getAnchor(markRecord.markAnchor);\n\n    let basePos = this.positions[baseGlyphIndex];\n    let markPos = this.positions[this.glyphIterator.index];\n\n    markPos.xOffset = baseCoords.x - markCoords.x;\n    markPos.yOffset = baseCoords.y - markCoords.y;\n    this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n  }\n\n  getAnchor(anchor) {\n    // TODO: contour point, device tables\n    let x = anchor.xCoordinate;\n    let y = anchor.yCoordinate;\n\n    // Adjustments for font variations\n    let variationProcessor = this.font._variationProcessor;\n    let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n    if (variationProcessor && variationStore) {\n      if (anchor.xDeviceTable) {\n        x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n      }\n\n      if (anchor.yDeviceTable) {\n        y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n      }\n    }\n\n    return { x, y };\n  }\n\n  applyFeatures(userFeatures, glyphs, advances) {\n    super.applyFeatures(userFeatures, glyphs, advances);\n\n    for (var i = 0; i < this.glyphs.length; i++) {\n      this.fixCursiveAttachment(i);\n    }\n\n    this.fixMarkAttachment();\n  }\n\n  fixCursiveAttachment(i) {\n    let glyph = this.glyphs[i];\n    if (glyph.cursiveAttachment != null) {\n      let j = glyph.cursiveAttachment;\n\n      glyph.cursiveAttachment = null;\n      this.fixCursiveAttachment(j);\n\n      this.positions[i].yOffset += this.positions[j].yOffset;\n    }\n  }\n\n  fixMarkAttachment() {\n    for (let i = 0; i < this.glyphs.length; i++) {\n      let glyph = this.glyphs[i];\n      if (glyph.markAttachment != null) {\n        let j = glyph.markAttachment;\n\n        this.positions[i].xOffset += this.positions[j].xOffset;\n        this.positions[i].yOffset += this.positions[j].yOffset;\n\n        if (this.direction === 'ltr') {\n          for (let k = j; k < i; k++) {\n            this.positions[i].xOffset -= this.positions[k].xAdvance;\n            this.positions[i].yOffset -= this.positions[k].yAdvance;\n          }\n        } else {\n          for (let k = j + 1; k < i + 1; k++) {\n            this.positions[i].xOffset += this.positions[k].xAdvance;\n            this.positions[i].yOffset += this.positions[k].yAdvance;\n          }\n        }\n      }\n    }\n  }\n}\n","import ShapingPlan from './ShapingPlan';\nimport * as Shapers from './shapers';\nimport GlyphInfo from './GlyphInfo';\nimport GSUBProcessor from './GSUBProcessor';\nimport GPOSProcessor from './GPOSProcessor';\n\nexport default class OTLayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.glyphInfos = null;\n    this.plan = null;\n    this.GSUBProcessor = null;\n    this.GPOSProcessor = null;\n    this.fallbackPosition = true;\n\n    if (font.GSUB) {\n      this.GSUBProcessor = new GSUBProcessor(font, font.GSUB);\n    }\n\n    if (font.GPOS) {\n      this.GPOSProcessor = new GPOSProcessor(font, font.GPOS);\n    }\n  }\n\n  setup(glyphRun) {\n    // Map glyphs to GlyphInfo objects so data can be passed between\n    // GSUB and GPOS without mutating the real (shared) Glyph objects.\n    this.glyphInfos = glyphRun.glyphs.map(glyph => new GlyphInfo(this.font, glyph.id, [...glyph.codePoints]));\n\n    // Select a script based on what is available in GSUB/GPOS.\n    let script = null;\n    if (this.GPOSProcessor) {\n      script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    if (this.GSUBProcessor) {\n      script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n    }\n\n    // Choose a shaper based on the script, and setup a shaping plan.\n    // This determines which features to apply to which glyphs.\n    this.shaper = Shapers.choose(script);\n    this.plan = new ShapingPlan(this.font, script, glyphRun.direction);\n    this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n\n    // Assign chosen features to output glyph run\n    for (let key in this.plan.allFeatures) {\n      glyphRun.features[key] = true;\n    }\n  }\n\n  substitute(glyphRun) {\n    if (this.GSUBProcessor) {\n      this.plan.process(this.GSUBProcessor, this.glyphInfos);\n\n      // Map glyph infos back to normal Glyph objects\n      glyphRun.glyphs = this.glyphInfos.map(glyphInfo => this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n    }\n  }\n\n  position(glyphRun) {\n    if (this.shaper.zeroMarkWidths === 'BEFORE_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    if (this.GPOSProcessor) {\n      this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n    }\n\n    if (this.shaper.zeroMarkWidths === 'AFTER_GPOS') {\n      this.zeroMarkAdvances(glyphRun.positions);\n    }\n\n    // Reverse the glyphs and positions if the script is right-to-left\n    if (glyphRun.direction === 'rtl') {\n      glyphRun.glyphs.reverse();\n      glyphRun.positions.reverse();\n    }\n\n    return this.GPOSProcessor && this.GPOSProcessor.features;\n  }\n\n  zeroMarkAdvances(positions) {\n    for (let i = 0; i < this.glyphInfos.length; i++) {\n      if (this.glyphInfos[i].isMark) {\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  cleanup() {\n    this.glyphInfos = null;\n    this.plan = null;\n    this.shaper = null;\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.GSUBProcessor) {\n      this.GSUBProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GSUBProcessor.features));\n    }\n\n    if (this.GPOSProcessor) {\n      this.GPOSProcessor.selectScript(script, language);\n      features.push(...Object.keys(this.GPOSProcessor.features));\n    }\n\n    return features;\n  }\n}\n","import KernProcessor from './KernProcessor';\nimport UnicodeLayoutEngine from './UnicodeLayoutEngine';\nimport GlyphRun from './GlyphRun';\nimport GlyphPosition from './GlyphPosition';\nimport * as Script from './Script';\nimport AATLayoutEngine from '../aat/AATLayoutEngine';\nimport OTLayoutEngine from '../opentype/OTLayoutEngine';\n\nexport default class LayoutEngine {\n  constructor(font) {\n    this.font = font;\n    this.unicodeLayoutEngine = null;\n    this.kernProcessor = null;\n\n    // Choose an advanced layout engine. We try the AAT morx table first since more\n    // scripts are currently supported because the shaping logic is built into the font.\n    if (this.font.morx) {\n      this.engine = new AATLayoutEngine(this.font);\n\n    } else if (this.font.GSUB || this.font.GPOS) {\n      this.engine = new OTLayoutEngine(this.font);\n    }\n  }\n\n  layout(string, features, script, language, direction) {\n    // Make the features parameter optional\n    if (typeof features === 'string') {\n      direction = language;\n      language = script;\n      script = features;\n      features = [];\n    }\n\n    // Map string to glyphs if needed\n    if (typeof string === 'string') {\n      // Attempt to detect the script from the string if not provided.\n      if (script == null) {\n        script = Script.forString(string);\n      }\n\n      var glyphs = this.font.glyphsForString(string);\n    } else {\n      // Attempt to detect the script from the glyph code points if not provided.\n      if (script == null) {\n        let codePoints = [];\n        for (let glyph of string) {\n          codePoints.push(...glyph.codePoints);\n        }\n\n        script = Script.forCodePoints(codePoints);\n      }\n\n      var glyphs = string;\n    }\n\n    let glyphRun = new GlyphRun(glyphs, features, script, language, direction);\n\n    // Return early if there are no glyphs\n    if (glyphs.length === 0) {\n      glyphRun.positions = [];\n      return glyphRun;\n    }\n\n    // Setup the advanced layout engine\n    if (this.engine && this.engine.setup) {\n      this.engine.setup(glyphRun);\n    }\n\n    // Substitute and position the glyphs\n    this.substitute(glyphRun);\n    this.position(glyphRun);\n\n    this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n\n    // Let the layout engine clean up any state it might have\n    if (this.engine && this.engine.cleanup) {\n      this.engine.cleanup();\n    }\n\n    return glyphRun;\n  }\n\n  substitute(glyphRun) {\n    // Call the advanced layout engine to make substitutions\n    if (this.engine && this.engine.substitute) {\n      this.engine.substitute(glyphRun);\n    }\n  }\n\n  position(glyphRun) {\n    // Get initial glyph positions\n    glyphRun.positions = glyphRun.glyphs.map(glyph => new GlyphPosition(glyph.advanceWidth));\n    let positioned = null;\n\n    // Call the advanced layout engine. Returns the features applied.\n    if (this.engine && this.engine.position) {\n      positioned = this.engine.position(glyphRun);\n    }\n\n    // if there is no GPOS table, use unicode properties to position marks.\n    if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n      if (!this.unicodeLayoutEngine) {\n        this.unicodeLayoutEngine = new UnicodeLayoutEngine(this.font);\n      }\n\n      this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n    }\n\n    // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n    if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n      if (!this.kernProcessor) {\n        this.kernProcessor = new KernProcessor(this.font);\n      }\n\n      this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n      glyphRun.features.kern = true;\n    }\n  }\n\n  hideDefaultIgnorables(glyphs, positions) {\n    let space = this.font.glyphForCodePoint(0x20);\n    for (let i = 0; i < glyphs.length; i++) {\n      if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n        glyphs[i] = space;\n        positions[i].xAdvance = 0;\n        positions[i].yAdvance = 0;\n      }\n    }\n  }\n\n  isDefaultIgnorable(ch) {\n    // From DerivedCoreProperties.txt in the Unicode database,\n    // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n    // Harfbuzz and Uniscribe do.\n    let plane = ch >> 16;\n    if (plane === 0) {\n      // BMP\n      switch (ch >> 8) {\n      \tcase 0x00: return ch === 0x00AD;\n      \tcase 0x03: return ch === 0x034F;\n      \tcase 0x06: return ch === 0x061C;\n      \tcase 0x17: return 0x17B4 <= ch && ch <= 0x17B5;\n      \tcase 0x18: return 0x180B <= ch && ch <= 0x180E;\n      \tcase 0x20: return (0x200B <= ch && ch <= 0x200F) || (0x202A <= ch && ch <= 0x202E) || (0x2060 <= ch && ch <= 0x206F);\n      \tcase 0xFE: return (0xFE00 <= ch && ch <= 0xFE0F) || ch === 0xFEFF;\n      \tcase 0xFF: return 0xFFF0 <= ch && ch <= 0xFFF8;\n      \tdefault:   return false;\n      }\n    } else {\n      // Other planes\n      switch (plane) {\n      \tcase 0x01: return (0x1BCA0 <= ch && ch <= 0x1BCA3) || (0x1D173 <= ch && ch <= 0x1D17A);\n      \tcase 0x0E: return 0xE0000 <= ch && ch <= 0xE0FFF;\n      \tdefault:   return false;\n      }\n    }\n  }\n\n  getAvailableFeatures(script, language) {\n    let features = [];\n\n    if (this.engine) {\n      features.push(...this.engine.getAvailableFeatures(script, language));\n    }\n\n    if (this.font.kern && features.indexOf('kern') === -1) {\n      features.push('kern');\n    }\n\n    return features;\n  }\n\n  stringsForGlyph(gid) {\n    let result = new Set;\n\n    let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n    for (let codePoint of codePoints) {\n      result.add(String.fromCodePoint(codePoint));\n    }\n\n    if (this.engine && this.engine.stringsForGlyph) {\n      for (let string of this.engine.stringsForGlyph(gid)) {\n        result.add(string);\n      }\n    }\n\n    return Array.from(result);\n  }\n}\n","import BBox from './BBox';\n\nconst SVG_COMMANDS = {\n  moveTo: 'M',\n  lineTo: 'L',\n  quadraticCurveTo: 'Q',\n  bezierCurveTo: 'C',\n  closePath: 'Z'\n};\n\n/**\n * Path objects are returned by glyphs and represent the actual\n * vector outlines for each glyph in the font. Paths can be converted\n * to SVG path data strings, or to functions that can be applied to\n * render the path to a graphics context.\n */\nexport default class Path {\n  constructor() {\n    this.commands = [];\n    this._bbox = null;\n    this._cbox = null;\n  }\n\n  /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */\n  toFunction() {\n    return ctx => {\n      this.commands.forEach(c => {\n        return ctx[c.command].apply(ctx, c.args)\n      })\n    };\n  }\n\n  /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */\n  toSVG() {\n    let cmds = this.commands.map(c => {\n      let args = c.args.map(arg => Math.round(arg * 100) / 100);\n      return `${SVG_COMMANDS[c.command]}${args.join(' ')}`;\n    });\n\n    return cmds.join('');\n  }\n\n  /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */\n  get cbox() {\n    if (!this._cbox) {\n      let cbox = new BBox;\n      for (let command of this.commands) {\n        for (let i = 0; i < command.args.length; i += 2) {\n          cbox.addPoint(command.args[i], command.args[i + 1]);\n        }\n      }\n\n      this._cbox = Object.freeze(cbox);\n    }\n\n    return this._cbox;\n  }\n\n  /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */\n  get bbox() {\n    if (this._bbox) {\n      return this._bbox;\n    }\n\n    let bbox = new BBox;\n    let cx = 0, cy = 0;\n\n    let f = t => (\n      Math.pow(1 - t, 3) * p0[i]\n        + 3 * Math.pow(1 - t, 2) * t * p1[i]\n        + 3 * (1 - t) * Math.pow(t, 2) * p2[i]\n        + Math.pow(t, 3) * p3[i]\n    );\n\n    for (let c of this.commands) {\n      switch (c.command) {\n        case 'moveTo':\n        case 'lineTo':\n          let [x, y] = c.args;\n          bbox.addPoint(x, y);\n          cx = x;\n          cy = y;\n          break;\n\n        case 'quadraticCurveTo':\n        case 'bezierCurveTo':\n          if (c.command === 'quadraticCurveTo') {\n            // http://fontforge.org/bezier.html\n            var [qp1x, qp1y, p3x, p3y] = c.args;\n            var cp1x = cx + 2 / 3 * (qp1x - cx);    // CP1 = QP0 + 2/3 * (QP1-QP0)\n            var cp1y = cy + 2 / 3 * (qp1y - cy);\n            var cp2x = p3x + 2 / 3 * (qp1x - p3x);  // CP2 = QP2 + 2/3 * (QP1-QP2)\n            var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n          } else {\n            var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n          }\n\n          // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n          bbox.addPoint(p3x, p3y);\n\n          var p0 = [cx, cy];\n          var p1 = [cp1x, cp1y];\n          var p2 = [cp2x, cp2y];\n          var p3 = [p3x, p3y];\n\n          for (var i = 0; i <= 1; i++) {\n            let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            c = 3 * p1[i] - 3 * p0[i];\n\n            if (a === 0) {\n              if (b === 0) {\n                continue;\n              }\n\n              let t = -c / b;\n              if (0 < t && t < 1) {\n                if (i === 0) {\n                  bbox.addPoint(f(t), bbox.maxY);\n                } else if (i === 1) {\n                  bbox.addPoint(bbox.maxX, f(t));\n                }\n              }\n\n              continue;\n            }\n\n            let b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0) {\n              continue;\n            }\n\n            let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t1), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t1));\n              }\n            }\n\n            let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n              if (i === 0) {\n                bbox.addPoint(f(t2), bbox.maxY);\n              } else if (i === 1) {\n                bbox.addPoint(bbox.maxX, f(t2));\n              }\n            }\n          }\n\n          cx = p3x;\n          cy = p3y;\n          break;\n      }\n    }\n\n    return this._bbox = Object.freeze(bbox);\n  }\n\n  /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */\n  mapPoints(fn) {\n    let path = new Path;\n\n    for (let c of this.commands) {\n      let args = [];\n      for (let i = 0; i < c.args.length; i += 2) {\n        let [x, y] = fn(c.args[i], c.args[i + 1]);\n        args.push(x, y);\n      }\n\n      path[c.command](...args);\n    }\n\n    return path;\n  }\n\n  /**\n   * Transforms the path by the given matrix.\n   */\n  transform(m0, m1, m2, m3, m4, m5) {\n    return this.mapPoints((x, y) => {\n      const tx = m0 * x + m2 * y + m4;\n      const ty = m1 * x + m3 * y + m5;\n      return [tx, ty];\n    });\n  }\n\n  /**\n   * Translates the path by the given offset.\n   */\n  translate(x, y) {\n    return this.transform(1, 0, 0, 1, x, y);\n  }\n\n  /**\n   * Rotates the path by the given angle (in radians).\n   */\n  rotate(angle) {\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    return this.transform(cos, sin, -sin, cos, 0, 0);\n  }\n\n  /**\n   * Scales the path.\n   */\n  scale(scaleX, scaleY = scaleX) {\n    return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n  }\n}\n\nfor (let command of ['moveTo', 'lineTo', 'quadraticCurveTo', 'bezierCurveTo', 'closePath']) {\n  Path.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n      command,\n      args\n    });\n\n    return this;\n  };\n}\n","export default [\n  '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n  'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n  'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n  'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n  'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n  'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n  'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n  'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n  'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n  'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n  'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n  'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n  'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n  'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n  'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n  'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n  'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n  'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n  'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n  'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n  'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n  'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n  'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n  'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n  'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'\n];\n","import { cache } from '../decorators';\nimport Path from './Path';\nimport {isMark} from 'unicode-properties';\nimport StandardNames from './StandardNames';\n\n/**\n * Glyph objects represent a glyph in the font. They have various properties for accessing metrics and\n * the actual vector path the glyph represents, and methods for rendering the glyph to a graphics context.\n *\n * You do not create glyph objects directly. They are created by various methods on the font object.\n * There are several subclasses of the base Glyph class internally that may be returned depending\n * on the font format, but they all inherit from this class.\n */\nexport default class Glyph {\n  constructor(id, codePoints, font) {\n    /**\n     * The glyph id in the font\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */\n    this.codePoints = codePoints;\n    this._font = font;\n\n    // TODO: get this info from GDEF if available\n    this.isMark = this.codePoints.length > 0 && this.codePoints.every(isMark);\n    this.isLigature = this.codePoints.length > 1;\n  }\n\n  _getPath() {\n    return new Path();\n  }\n\n  _getCBox() {\n    return this.path.cbox;\n  }\n\n  _getBBox() {\n    return this.path.bbox;\n  }\n\n  _getTableMetrics(table) {\n    if (this.id < table.metrics.length) {\n      return table.metrics.get(this.id);\n    }\n\n    let metric = table.metrics.get(table.metrics.length - 1);\n    let res = {\n      advance: metric ? metric.advance : 0,\n      bearing: table.bearings.get(this.id - table.metrics.length) || 0\n    };\n\n    return res;\n  }\n\n  _getMetrics(cbox) {\n    if (this._metrics) { return this._metrics; }\n\n    let {advance:advanceWidth, bearing:leftBearing} = this._getTableMetrics(this._font.hmtx);\n\n    // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n    if (this._font.vmtx) {\n      var {advance:advanceHeight, bearing:topBearing} = this._getTableMetrics(this._font.vmtx);\n\n    } else {\n      let os2;\n      if (typeof cbox === 'undefined' || cbox === null) { ({ cbox } = this); }\n\n      if ((os2 = this._font['OS/2']) && os2.version > 0) {\n        var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n        var topBearing = os2.typoAscender - cbox.maxY;\n\n      } else {\n        let { hhea } = this._font;\n        var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n        var topBearing = hhea.ascent - cbox.maxY;\n      }\n    }\n\n    if (this._font._variationProcessor && this._font.HVAR) {\n      advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n    }\n\n    return this._metrics = { advanceWidth, advanceHeight, leftBearing, topBearing };\n  }\n\n  /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */\n  @cache\n  get cbox() {\n    return this._getCBox();\n  }\n\n  /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return this._getBBox();\n  }\n\n  /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */\n  @cache\n  get path() {\n    // Cache the path so we only decode it once\n    // Decoding is actually performed by subclasses\n    return this._getPath();\n  }\n\n  /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */\n  getScaledPath(size) {\n    let scale = 1 / this._font.unitsPerEm * size;\n    return this.path.scale(scale);\n  }\n\n  /**\n   * The glyph's advance width.\n   * @type {number}\n   */\n  @cache\n  get advanceWidth() {\n    return this._getMetrics().advanceWidth;\n  }\n\n  /**\n   * The glyph's advance height.\n   * @type {number}\n   */\n  @cache\n  get advanceHeight() {\n    return this._getMetrics().advanceHeight;\n  }\n\n  get ligatureCaretPositions() {}\n\n  _getName() {\n    let { post } = this._font;\n    if (!post) {\n      return null;\n    }\n\n    switch (post.version) {\n      case 1:\n        return StandardNames[this.id];\n\n      case 2:\n        let id = post.glyphNameIndex[this.id];\n        if (id < StandardNames.length) {\n          return StandardNames[id];\n        }\n\n        return post.names[id - StandardNames.length];\n\n      case 2.5:\n        return StandardNames[this.id + post.offsets[this.id]];\n\n      case 4:\n        return String.fromCharCode(post.map[this.id]);\n    }\n  }\n\n  /**\n   * The glyph's name\n   * @type {string}\n   */\n  @cache\n  get name() {\n    return this._getName();\n  }\n\n  /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */\n  render(ctx, size) {\n    ctx.save();\n\n    let scale = 1 / this._font.head.unitsPerEm * size;\n    ctx.scale(scale, scale);\n\n    let fn = this.path.toFunction();\n    fn(ctx);\n    ctx.fill();\n\n    ctx.restore();\n  }\n}\n","import Glyph from './Glyph';\nimport Path from './Path';\nimport BBox from './BBox';\nimport * as r from 'restructure';\n\n// The header for both simple and composite glyphs\nlet GlyfHeader = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin:             r.int16,\n  yMin:             r.int16,\n  xMax:             r.int16,\n  yMax:             r.int16\n});\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\n// Flags for composite glyphs\nconst ARG_1_AND_2_ARE_WORDS     = 1 << 0;\nconst ARGS_ARE_XY_VALUES        = 1 << 1;\nconst ROUND_XY_TO_GRID          = 1 << 2;\nconst WE_HAVE_A_SCALE           = 1 << 3;\nconst MORE_COMPONENTS           = 1 << 5;\nconst WE_HAVE_AN_X_AND_Y_SCALE  = 1 << 6;\nconst WE_HAVE_A_TWO_BY_TWO      = 1 << 7;\nconst WE_HAVE_INSTRUCTIONS      = 1 << 8;\nconst USE_MY_METRICS            = 1 << 9;\nconst OVERLAP_COMPOUND          = 1 << 10;\nconst SCALED_COMPONENT_OFFSET   = 1 << 11;\nconst UNSCALED_COMPONENT_OFFSET = 1 << 12;\n\n// Represents a point in a simple glyph\nexport class Point {\n  constructor(onCurve, endContour, x = 0, y = 0) {\n    this.onCurve = onCurve;\n    this.endContour = endContour;\n    this.x = x;\n    this.y = y;\n  }\n\n  copy() {\n    return new Point(this.onCurve, this.endContour, this.x, this.y);\n  }\n}\n\n// Represents a component in a composite glyph\nclass Component {\n  constructor(glyphID, dx, dy) {\n    this.glyphID = glyphID;\n    this.dx = dx;\n    this.dy = dy;\n    this.pos = 0;\n    this.scaleX = this.scaleY = 1;\n    this.scale01 = this.scale10 = 0;\n  }\n}\n\n/**\n * Represents a TrueType glyph.\n */\nexport default class TTFGlyph extends Glyph {\n  type = 'TTF';\n\n  // Parses just the glyph header and returns the bounding box\n  _getCBox(internal) {\n    // We need to decode the glyph if variation processing is requested,\n    // so it's easier just to recompute the path's cbox after decoding.\n    if (this._font._variationProcessor && !internal) {\n      return this.path.cbox;\n    }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += this._font.loca.offsets[this.id];\n    let glyph = GlyfHeader.decode(stream);\n\n    let cbox = new BBox(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n    return Object.freeze(cbox);\n  }\n\n  // Parses a single glyph coordinate\n  _parseGlyphCoord(stream, prev, short, same) {\n    if (short) {\n      var val = stream.readUInt8();\n      if (!same) {\n        val = -val;\n      }\n\n      val += prev;\n    } else {\n      if (same) {\n        var val = prev;\n      } else {\n        var val = prev + stream.readInt16BE();\n      }\n    }\n\n    return val;\n  }\n\n  // Decodes the glyph data into points for simple glyphs,\n  // or components for composite glyphs\n  _decode() {\n    let glyfPos = this._font.loca.offsets[this.id];\n    let nextPos = this._font.loca.offsets[this.id + 1];\n\n    // Nothing to do if there is no data for this glyph\n    if (glyfPos === nextPos) { return null; }\n\n    let stream = this._font._getTableStream('glyf');\n    stream.pos += glyfPos;\n    let startPos = stream.pos;\n\n    let glyph = GlyfHeader.decode(stream);\n\n    if (glyph.numberOfContours > 0) {\n      this._decodeSimple(glyph, stream);\n\n    } else if (glyph.numberOfContours < 0) {\n      this._decodeComposite(glyph, stream, startPos);\n    }\n\n    return glyph;\n  }\n\n  _decodeSimple(glyph, stream) {\n    // this is a simple glyph\n    glyph.points = [];\n\n    let endPtsOfContours = new r.Array(r.uint16, glyph.numberOfContours).decode(stream);\n    glyph.instructions = new r.Array(r.uint8, r.uint16).decode(stream);\n\n    let flags = [];\n    let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\n    while (flags.length < numCoords) {\n      var flag = stream.readUInt8();\n      flags.push(flag);\n\n      // check for repeat flag\n      if (flag & REPEAT) {\n        let count = stream.readUInt8();\n        for (let j = 0; j < count; j++) {\n          flags.push(flag);\n        }\n      }\n    }\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      let point = new Point(!!(flag & ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n      glyph.points.push(point);\n    }\n\n    let px = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & X_SHORT_VECTOR, flag & SAME_X);\n    }\n\n    let py = 0;\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags[i];\n      glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & Y_SHORT_VECTOR, flag & SAME_Y);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = glyph.points.slice();\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.slice(-4);\n    }\n\n    return;\n  }\n\n  _decodeComposite(glyph, stream, offset = 0) {\n    // this is a composite glyph\n    glyph.components = [];\n    let haveInstructions = false;\n    let flags = MORE_COMPONENTS;\n\n    while (flags & MORE_COMPONENTS) {\n      flags = stream.readUInt16BE();\n      let gPos = stream.pos - offset;\n      let glyphID = stream.readUInt16BE();\n      if (!haveInstructions) {\n        haveInstructions = (flags & WE_HAVE_INSTRUCTIONS) !== 0;\n      }\n\n      if (flags & ARG_1_AND_2_ARE_WORDS) {\n        var dx = stream.readInt16BE();\n        var dy = stream.readInt16BE();\n      } else {\n        var dx = stream.readInt8();\n        var dy = stream.readInt8();\n      }\n\n      var component = new Component(glyphID, dx, dy);\n      component.pos = gPos;\n\n      if (flags & WE_HAVE_A_SCALE) {\n        // fixed number with 14 bits of fraction\n        component.scaleX =\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n        component.scaleX = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n\n      } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n        component.scaleX  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale01 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scale10 = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n        component.scaleY  = ((stream.readUInt8() << 24) | (stream.readUInt8() << 16)) / 1073741824;\n      }\n\n      glyph.components.push(component);\n    }\n\n    if (this._font._variationProcessor) {\n      let points = [];\n      for (let j = 0; j < glyph.components.length; j++) {\n        var component = glyph.components[j];\n        points.push(new Point(true, true, component.dx, component.dy));\n      }\n\n      points.push(...this._getPhantomPoints(glyph));\n\n      this._font._variationProcessor.transformPoints(this.id, points);\n      glyph.phantomPoints = points.splice(-4, 4);\n\n      for (let i = 0; i < points.length; i++) {\n        let point = points[i];\n        glyph.components[i].dx = point.x;\n        glyph.components[i].dy = point.y;\n      }\n    }\n\n    return haveInstructions;\n  }\n\n  _getPhantomPoints(glyph) {\n    let cbox = this._getCBox(true);\n    if (this._metrics == null) {\n      this._metrics = Glyph.prototype._getMetrics.call(this, cbox);\n    }\n\n    let { advanceWidth, advanceHeight, leftBearing, topBearing } = this._metrics;\n\n    return [\n      new Point(false, true, glyph.xMin - leftBearing, 0),\n      new Point(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n      new Point(false, true, 0, glyph.yMax + topBearing),\n      new Point(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n    ];\n  }\n\n  // Decodes font data, resolves composite glyphs, and returns an array of contours\n  _getContours() {\n    let glyph = this._decode();\n    if (!glyph) {\n      return [];\n    }\n\n    let points = [];\n\n    if (glyph.numberOfContours < 0) {\n      // resolve composite glyphs\n      for (let component of glyph.components) {\n        let contours = this._font.getGlyph(component.glyphID)._getContours();\n        for (let i = 0; i < contours.length; i++) {\n          let contour = contours[i];\n          for (let j = 0; j < contour.length; j++) {\n            let point = contour[j];\n            let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n            let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n            points.push(new Point(point.onCurve, point.endContour, x, y));\n          }\n        }\n      }\n    } else {\n      points = glyph.points || [];\n    }\n\n    // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n    if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n      this._metrics.advanceWidth  = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n      this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n      this._metrics.leftBearing   = glyph.xMin - glyph.phantomPoints[0].x;\n      this._metrics.topBearing    = glyph.phantomPoints[2].y - glyph.yMax;\n    }\n\n    let contours = [];\n    let cur = [];\n    for (let k = 0; k < points.length; k++) {\n      var point = points[k];\n      cur.push(point);\n      if (point.endContour) {\n        contours.push(cur);\n        cur = [];\n      }\n    }\n\n    return contours;\n  }\n\n  _getMetrics() {\n    if (this._metrics) {\n      return this._metrics;\n    }\n\n    let cbox = this._getCBox(true);\n    super._getMetrics(cbox);\n\n    if (this._font._variationProcessor && !this._font.HVAR) {\n      // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n      this.path;\n    }\n\n    return this._metrics;\n  }\n\n  // Converts contours to a Path object that can be rendered\n  _getPath() {\n    let contours = this._getContours();\n    let path = new Path;\n\n    for (let i = 0; i < contours.length; i++) {\n      let contour = contours[i];\n      let firstPt = contour[0];\n      let lastPt = contour[contour.length - 1];\n      let start = 0;\n\n      if (firstPt.onCurve) {\n        // The first point will be consumed by the moveTo command, so skip in the loop\n        var curvePt = null;\n        start = 1;\n      } else {\n        if (lastPt.onCurve) {\n          // Start at the last point if the first point is off curve and the last point is on curve\n          firstPt = lastPt;\n        } else {\n          // Start at the middle if both the first and last points are off curve\n          firstPt = new Point(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n        }\n\n        var curvePt = firstPt;\n      }\n\n      path.moveTo(firstPt.x, firstPt.y);\n\n      for (let j = start; j < contour.length; j++) {\n        let pt = contour[j];\n        let prevPt = j === 0 ? firstPt : contour[j - 1];\n\n        if (prevPt.onCurve && pt.onCurve) {\n          path.lineTo(pt.x, pt.y);\n\n        } else if (prevPt.onCurve && !pt.onCurve) {\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && !pt.onCurve) {\n          let midX = (prevPt.x + pt.x) / 2;\n          let midY = (prevPt.y + pt.y) / 2;\n          path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n          var curvePt = pt;\n\n        } else if (!prevPt.onCurve && pt.onCurve) {\n          path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n          var curvePt = null;\n\n        } else {\n          throw new Error(\"Unknown TTF path state\");\n        }\n      }\n\n      // Connect the first and last points\n      if (curvePt) {\n        path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n      }\n\n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import Glyph from './Glyph';\nimport Path from './Path';\n\n/**\n * Represents an OpenType PostScript glyph, in the Compact Font Format.\n */\nexport default class CFFGlyph extends Glyph {\n  type = 'CFF';\n\n  _getName() {\n    if (this._font.CFF2) {\n      return super._getName();\n    }\n\n    return this._font['CFF '].getGlyphName(this.id);\n  }\n\n  bias(s) {\n    if (s.length < 1240) {\n      return 107;\n    } else if (s.length < 33900) {\n      return 1131;\n    } else {\n      return 32768;\n    }\n  }\n\n  _getPath() {\n    let cff = this._font.CFF2 || this._font['CFF '];\n    let { stream } = cff;\n    let str = cff.topDict.CharStrings[this.id];\n    let end = str.offset + str.length;\n    stream.pos = str.offset;\n\n    let path = new Path;\n    let stack = [];\n    let trans = [];\n\n    let width = null;\n    let nStems = 0;\n    let x = 0, y = 0;\n    let usedGsubrs;\n    let usedSubrs;\n    let open = false;\n\n    this._usedGsubrs = usedGsubrs = {};\n    this._usedSubrs = usedSubrs = {};\n\n    let gsubrs = cff.globalSubrIndex || [];\n    let gsubrsBias = this.bias(gsubrs);\n\n    let privateDict = cff.privateDictForGlyph(this.id) || {};\n    let subrs = privateDict.Subrs || [];\n    let subrsBias = this.bias(subrs);\n\n    let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n    let vsindex = privateDict.vsindex;\n    let variationProcessor = this._font._variationProcessor;\n\n    function checkWidth() {\n      if (width == null) {\n        width = stack.shift() + privateDict.nominalWidthX;\n      }\n    }\n\n    function parseStems() {\n      if (stack.length % 2 !== 0) {\n        checkWidth();\n      }\n\n      nStems += stack.length >> 1;\n      return stack.length = 0;\n    }\n\n    function moveTo(x, y) {\n      if (open) {\n        path.closePath();\n      }\n\n      path.moveTo(x, y);\n      open = true;\n    }\n\n    let parse = function () {\n      while (stream.pos < end) {\n        let op = stream.readUInt8();\n        if (op < 32) {\n          let index, subr, phase;\n          switch (op) {\n            case 1:  // hstem\n            case 3:  // vstem\n            case 18: // hstemhm\n            case 23: // vstemhm\n              parseStems();\n              break;\n\n            case 4: // vmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 5: // rlineto\n              while (stack.length >= 2) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n              break;\n\n            case 6: // hlineto\n            case 7: // vlineto\n              phase = op === 6;\n              while (stack.length >= 1) {\n                if (phase) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n\n                path.lineTo(x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 8: // rrcurveto\n              while (stack.length > 0) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 10: // callsubr\n              index = stack.pop() + subrsBias;\n              subr = subrs[index];\n              if (subr) {\n                usedSubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 11: // return\n              if (cff.version >= 2) {\n                break;\n              }\n              return;\n\n            case 14: // endchar\n              if (cff.version >= 2) {\n                break;\n              }\n\n              if (stack.length > 0) {\n                checkWidth();\n              }\n\n              if (open) {\n                path.closePath();\n                open = false;\n              }\n              break;\n\n            case 15: { // vsindex\n              if (cff.version < 2) {\n                throw new Error('vsindex operator not supported in CFF v1');\n              }\n\n              vsindex = stack.pop();\n              break;\n            }\n\n            case 16: { // blend\n              if (cff.version < 2) {\n                throw new Error('blend operator not supported in CFF v1');\n              }\n\n              if (!variationProcessor) {\n                throw new Error('blend operator in non-variation font');\n              }\n\n              let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n              let numBlends = stack.pop();\n              let numOperands = numBlends * blendVector.length;\n              let delta = stack.length - numOperands;\n              let base = delta - numBlends;\n\n              for (let i = 0; i < numBlends; i++) {\n                let sum = stack[base + i];\n                for (let j = 0; j < blendVector.length; j++) {\n                  sum += blendVector[j] * stack[delta++];\n                }\n\n                stack[base + i] = sum;\n              }\n\n              while (numOperands--) {\n                stack.pop();\n              }\n\n              break;\n            }\n\n            case 19: // hintmask\n            case 20: // cntrmask\n              parseStems();\n              stream.pos += (nStems + 7) >> 3;\n              break;\n\n            case 21: // rmoveto\n              if (stack.length > 2) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 22: // hmoveto\n              if (stack.length > 1) {\n                checkWidth();\n              }\n\n              x += stack.shift();\n              moveTo(x, y);\n              break;\n\n            case 24: // rcurveline\n              while (stack.length >= 8) {\n                var c1x = x + stack.shift();\n                var c1y = y + stack.shift();\n                var c2x = c1x + stack.shift();\n                var c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n\n              x += stack.shift();\n              y += stack.shift();\n              path.lineTo(x, y);\n              break;\n\n            case 25: // rlinecurve\n              while (stack.length >= 8) {\n                x += stack.shift();\n                y += stack.shift();\n                path.lineTo(x, y);\n              }\n\n              var c1x = x + stack.shift();\n              var c1y = y + stack.shift();\n              var c2x = c1x + stack.shift();\n              var c2y = c1y + stack.shift();\n              x = c2x + stack.shift();\n              y = c2y + stack.shift();\n              path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              break;\n\n            case 26: // vvcurveto\n              if (stack.length % 2) {\n                x += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x;\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x;\n                y = c2y + stack.shift();\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 27: // hhcurveto\n              if (stack.length % 2) {\n                y += stack.shift();\n              }\n\n              while (stack.length >= 4) {\n                c1x = x + stack.shift();\n                c1y = y;\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y;\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n              }\n              break;\n\n            case 28: // shortint\n              stack.push(stream.readInt16BE());\n              break;\n\n            case 29: // callgsubr\n              index = stack.pop() + gsubrsBias;\n              subr = gsubrs[index];\n              if (subr) {\n                usedGsubrs[index] = true;\n                var p = stream.pos;\n                var e = end;\n                stream.pos = subr.offset;\n                end = subr.offset + subr.length;\n                parse();\n                stream.pos = p;\n                end = e;\n              }\n              break;\n\n            case 30: // vhcurveto\n            case 31: // hvcurveto\n              phase = op === 31;\n              while (stack.length >= 4) {\n                if (phase) {\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  y = c2y + stack.shift();\n                  x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                } else {\n                  c1x = x;\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  x = c2x + stack.shift();\n                  y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                }\n\n                path.bezierCurveTo(c1x, c1y, c2x, c2y, x, y);\n                phase = !phase;\n              }\n              break;\n\n            case 12:\n              op = stream.readUInt8();\n              switch (op) {\n                case 3: // and\n                  let a = stack.pop();\n                  let b = stack.pop();\n                  stack.push(a && b ? 1 : 0);\n                  break;\n\n                case 4: // or\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a || b ? 1 : 0);\n                  break;\n\n                case 5: // not\n                  a = stack.pop();\n                  stack.push(a ? 0 : 1);\n                  break;\n\n                case 9: // abs\n                  a = stack.pop();\n                  stack.push(Math.abs(a));\n                  break;\n\n                case 10: // add\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a + b);\n                  break;\n\n                case 11: // sub\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a - b);\n                  break;\n\n                case 12: // div\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a / b);\n                  break;\n\n                case 14: // neg\n                  a = stack.pop();\n                  stack.push(-a);\n                  break;\n\n                case 15: // eq\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a === b ? 1 : 0);\n                  break;\n\n                case 18: // drop\n                  stack.pop();\n                  break;\n\n                case 20: // put\n                  let val = stack.pop();\n                  let idx = stack.pop();\n                  trans[idx] = val;\n                  break;\n\n                case 21: // get\n                  idx = stack.pop();\n                  stack.push(trans[idx] || 0);\n                  break;\n\n                case 22: // ifelse\n                  let s1 = stack.pop();\n                  let s2 = stack.pop();\n                  let v1 = stack.pop();\n                  let v2 = stack.pop();\n                  stack.push(v1 <= v2 ? s1 : s2);\n                  break;\n\n                case 23: // random\n                  stack.push(Math.random());\n                  break;\n\n                case 24: // mul\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(a * b);\n                  break;\n\n                case 26: // sqrt\n                  a = stack.pop();\n                  stack.push(Math.sqrt(a));\n                  break;\n\n                case 27: // dup\n                  a = stack.pop();\n                  stack.push(a, a);\n                  break;\n\n                case 28: // exch\n                  a = stack.pop();\n                  b = stack.pop();\n                  stack.push(b, a);\n                  break;\n\n                case 29: // index\n                  idx = stack.pop();\n                  if (idx < 0) {\n                    idx = 0;\n                  } else if (idx > stack.length - 1) {\n                    idx = stack.length - 1;\n                  }\n\n                  stack.push(stack[idx]);\n                  break;\n\n                case 30: // roll\n                  let n = stack.pop();\n                  let j = stack.pop();\n\n                  if (j >= 0) {\n                    while (j > 0) {\n                      var t = stack[n - 1];\n                      for (let i = n - 2; i >= 0; i--) {\n                        stack[i + 1] = stack[i];\n                      }\n\n                      stack[0] = t;\n                      j--;\n                    }\n                  } else {\n                    while (j < 0) {\n                      var t = stack[0];\n                      for (let i = 0; i <= n; i++) {\n                        stack[i] = stack[i + 1];\n                      }\n\n                      stack[n - 1] = t;\n                      j++;\n                    }\n                  }\n                  break;\n\n                case 34: // hflex\n                  c1x = x + stack.shift();\n                  c1y = y;\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  let c3x = c2x + stack.shift();\n                  let c3y = c2y;\n                  let c4x = c3x + stack.shift();\n                  let c4y = c3y;\n                  let c5x = c4x + stack.shift();\n                  let c5y = c4y;\n                  let c6x = c5x + stack.shift();\n                  let c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 35: // flex\n                  let pts = [];\n\n                  for (let i = 0; i <= 5; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  stack.shift(); // fd\n                  break;\n\n                case 36: // hflex1\n                  c1x = x + stack.shift();\n                  c1y = y + stack.shift();\n                  c2x = c1x + stack.shift();\n                  c2y = c1y + stack.shift();\n                  c3x = c2x + stack.shift();\n                  c3y = c2y;\n                  c4x = c3x + stack.shift();\n                  c4y = c3y;\n                  c5x = c4x + stack.shift();\n                  c5y = c4y + stack.shift();\n                  c6x = c5x + stack.shift();\n                  c6y = c5y;\n                  x = c6x;\n                  y = c6y;\n\n                  path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                  path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                  break;\n\n                case 37: // flex1\n                  let startx = x;\n                  let starty = y;\n\n                  pts = [];\n                  for (let i = 0; i <= 4; i++) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    pts.push(x, y);\n                  }\n\n                  if (Math.abs(x - startx) > Math.abs(y - starty)) { // horizontal\n                    x += stack.shift();\n                    y = starty;\n                  } else {\n                    x = startx;\n                    y += stack.shift();\n                  }\n\n                  pts.push(x, y);\n                  path.bezierCurveTo(...pts.slice(0, 6));\n                  path.bezierCurveTo(...pts.slice(6));\n                  break;\n\n                default:\n                  throw new Error(`Unknown op: 12 ${op}`);\n              }\n              break;\n\n            default:\n              throw new Error(`Unknown op: ${op}`);\n          }\n\n        } else if (op < 247) {\n          stack.push(op - 139);\n        } else if (op < 251) {\n          var b1 = stream.readUInt8();\n          stack.push((op - 247) * 256 + b1 + 108);\n        } else if (op < 255) {\n          var b1 = stream.readUInt8();\n          stack.push(-(op - 251) * 256 - b1 - 108);\n        } else {\n          stack.push(stream.readInt32BE() / 65536);\n        }\n      }\n    };\n\n    parse();\n\n    if (open) {\n      path.closePath();\n    }\n\n    return path;\n  }\n}\n","import TTFGlyph from './TTFGlyph';\nimport * as r from 'restructure';\n\nlet SBIXImage = new r.Struct({\n  originX: r.uint16,\n  originY: r.uint16,\n  type: new r.String(4),\n  data: new r.Buffer(t => t.parent.buflen - t._currentOffset)\n});\n\n/**\n * Represents a color (e.g. emoji) glyph in Apple's SBIX format.\n */\nexport default class SBIXGlyph extends TTFGlyph {\n  type = 'SBIX';\n\n  /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */\n  getImageForSize(size) {\n    for (let i = 0; i < this._font.sbix.imageTables.length; i++) {\n      var table = this._font.sbix.imageTables[i];\n      if (table.ppem >= size) { break; }\n    }\n\n    let offsets = table.imageOffsets;\n    let start = offsets[this.id];\n    let end = offsets[this.id + 1];\n\n    if (start === end) {\n      return null;\n    }\n\n    this._font.stream.pos = start;\n    return SBIXImage.decode(this._font.stream, {buflen: end - start});\n  }\n\n  render(ctx, size) {\n    let img = this.getImageForSize(size);\n    if (img != null) {\n      let scale = size / this._font.unitsPerEm;\n      ctx.image(img.data, {height: size, x: img.originX, y: (this.bbox.minY - img.originY) * scale});\n    }\n\n    if (this._font.sbix.flags.renderOutlines) {\n      super.render(ctx, size);\n    }\n  }\n}\n","import Glyph from './Glyph';\nimport BBox from './BBox';\n\nclass COLRLayer {\n  constructor(glyph, color) {\n    this.glyph = glyph;\n    this.color = color;\n  }\n}\n\n/**\n * Represents a color (e.g. emoji) glyph in Microsoft's COLR format.\n * Each glyph in this format contain a list of colored layers, each\n * of which  is another vector glyph.\n */\nexport default class COLRGlyph extends Glyph {\n  type = 'COLR';\n\n  _getBBox() {\n    let bbox = new BBox;\n    for (let i = 0; i < this.layers.length; i++) {\n      let layer = this.layers[i];\n      let b = layer.glyph.bbox;\n      bbox.addPoint(b.minX, b.minY);\n      bbox.addPoint(b.maxX, b.maxY);\n    }\n\n    return bbox;\n  }\n\n  /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */\n  get layers() {\n    let cpal = this._font.CPAL;\n    let colr = this._font.COLR;\n    let low = 0;\n    let high = colr.baseGlyphRecord.length - 1;\n\n    while (low <= high) {\n      let mid = (low + high) >> 1;\n      var rec = colr.baseGlyphRecord[mid];\n\n      if (this.id < rec.gid) {\n        high = mid - 1;\n      } else if (this.id > rec.gid) {\n        low = mid + 1;\n      } else {\n        var baseLayer = rec;\n        break;\n      }\n    }\n\n    // if base glyph not found in COLR table,\n    // default to normal glyph from glyf or CFF\n    if (baseLayer == null) {\n      var g = this._font._getBaseGlyph(this.id);\n      var color = {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 255\n      };\n\n      return [new COLRLayer(g, color)];\n    }\n\n    // otherwise, return an array of all the layers\n    let layers = [];\n    for (let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++) {\n      var rec = colr.layerRecords[i];\n      var color = cpal.colorRecords[rec.paletteIndex];\n      var g = this._font._getBaseGlyph(rec.gid);\n      layers.push(new COLRLayer(g, color));\n    }\n\n    return layers;\n  }\n\n  render(ctx, size) {\n    for (let {glyph, color} of this.layers) {\n      ctx.fillColor([color.red, color.green, color.blue], color.alpha / 255 * 100);\n      glyph.render(ctx, size);\n    }\n\n    return;\n  }\n}\n","const TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst TUPLE_COUNT_MASK           = 0x0fff;\nconst EMBEDDED_TUPLE_COORD       = 0x8000;\nconst INTERMEDIATE_TUPLE         = 0x4000;\nconst PRIVATE_POINT_NUMBERS      = 0x2000;\nconst TUPLE_INDEX_MASK           = 0x0fff;\nconst POINTS_ARE_WORDS           = 0x80;\nconst POINT_RUN_COUNT_MASK       = 0x7f;\nconst DELTAS_ARE_ZERO            = 0x80;\nconst DELTAS_ARE_WORDS           = 0x40;\nconst DELTA_RUN_COUNT_MASK       = 0x3f;\n\n/**\n * This class is transforms TrueType glyphs according to the data from\n * the Apple Advanced Typography variation tables (fvar, gvar, and avar).\n * These tables allow infinite adjustments to glyph weight, width, slant,\n * and optical size without the designer needing to specify every exact style.\n *\n * Apple's documentation for these tables is not great, so thanks to the\n * Freetype project for figuring much of this out.\n *\n * @private\n */\nexport default class GlyphVariationProcessor {\n  constructor(font, coords) {\n    this.font = font;\n    this.normalizedCoords = this.normalizeCoords(coords);\n    this.blendVectors = new Map;\n  }\n\n  normalizeCoords(coords) {\n    // the default mapping is linear along each axis, in two segments:\n    // from the minValue to defaultValue, and from defaultValue to maxValue.\n    let normalized = [];\n    for (var i = 0; i < this.font.fvar.axis.length; i++) {\n      let axis = this.font.fvar.axis[i];\n      if (coords[i] < axis.defaultValue) {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n      } else {\n        normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n      }\n    }\n\n    // if there is an avar table, the normalized value is calculated\n    // by interpolating between the two nearest mapped values.\n    if (this.font.avar) {\n      for (var i = 0; i < this.font.avar.segment.length; i++) {\n        let segment = this.font.avar.segment[i];\n        for (let j = 0; j < segment.correspondence.length; j++) {\n          let pair = segment.correspondence[j];\n          if (j >= 1 && normalized[i] < pair.fromCoord) {\n            let prev = segment.correspondence[j - 1];\n            normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) /\n              (pair.fromCoord - prev.fromCoord + Number.EPSILON) +\n              prev.toCoord;\n\n            break;\n          }\n        }\n      }\n    }\n\n    return normalized;\n  }\n\n  transformPoints(gid, glyphPoints) {\n    if (!this.font.fvar || !this.font.gvar) { return; }\n\n    let { gvar } = this.font;\n    if (gid >= gvar.glyphCount) { return; }\n\n    let offset = gvar.offsets[gid];\n    if (offset === gvar.offsets[gid + 1]) { return; }\n\n    // Read the gvar data for this glyph\n    let { stream } = this.font;\n    stream.pos = offset;\n    if (stream.pos >= stream.length) {\n      return;\n    }\n\n    let tupleCount = stream.readUInt16BE();\n    let offsetToData = offset + stream.readUInt16BE();\n\n    if (tupleCount & TUPLES_SHARE_POINT_NUMBERS) {\n      var here = stream.pos;\n      stream.pos = offsetToData;\n      var sharedPoints = this.decodePoints();\n      offsetToData = stream.pos;\n      stream.pos = here;\n    }\n\n    let origPoints = glyphPoints.map(pt => pt.copy());\n\n    tupleCount &= TUPLE_COUNT_MASK;\n    for (let i = 0; i < tupleCount; i++) {\n      let tupleDataSize = stream.readUInt16BE();\n      let tupleIndex = stream.readUInt16BE();\n\n      if (tupleIndex & EMBEDDED_TUPLE_COORD) {\n        var tupleCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          tupleCoords.push(stream.readInt16BE() / 16384);\n        }\n\n      } else {\n        if ((tupleIndex & TUPLE_INDEX_MASK) >= gvar.globalCoordCount) {\n          throw new Error('Invalid gvar table');\n        }\n\n        var tupleCoords = gvar.globalCoords[tupleIndex & TUPLE_INDEX_MASK];\n      }\n\n      if (tupleIndex & INTERMEDIATE_TUPLE) {\n        var startCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          startCoords.push(stream.readInt16BE() / 16384);\n        }\n\n        var endCoords = [];\n        for (let a = 0; a < gvar.axisCount; a++) {\n          endCoords.push(stream.readInt16BE() / 16384);\n        }\n      }\n\n      // Get the factor at which to apply this tuple\n      let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n      if (factor === 0) {\n        offsetToData += tupleDataSize;\n        continue;\n      }\n\n      var here = stream.pos;\n      stream.pos = offsetToData;\n\n      if (tupleIndex & PRIVATE_POINT_NUMBERS) {\n        var points = this.decodePoints();\n      } else {\n        var points = sharedPoints;\n      }\n\n      // points.length = 0 means there are deltas for all points\n      let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n      let xDeltas = this.decodeDeltas(nPoints);\n      let yDeltas = this.decodeDeltas(nPoints);\n\n      if (points.length === 0) { // all points\n        for (let i = 0; i < glyphPoints.length; i++) {\n          var point = glyphPoints[i];\n          point.x += Math.round(xDeltas[i] * factor);\n          point.y += Math.round(yDeltas[i] * factor);\n        }\n      } else {\n        let outPoints = origPoints.map(pt => pt.copy());\n        let hasDelta = glyphPoints.map(() => false);\n\n        for (let i = 0; i < points.length; i++) {\n          let idx = points[i];\n          if (idx < glyphPoints.length) {\n            let point = outPoints[idx];\n            hasDelta[idx] = true;\n\n            point.x += Math.round(xDeltas[i] * factor);\n            point.y += Math.round(yDeltas[i] * factor);\n          }\n        }\n\n        this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n\n        for (let i = 0; i < glyphPoints.length; i++) {\n          let deltaX = outPoints[i].x - origPoints[i].x;\n          let deltaY = outPoints[i].y - origPoints[i].y;\n\n          glyphPoints[i].x += deltaX;\n          glyphPoints[i].y += deltaY;\n        }\n      }\n\n      offsetToData += tupleDataSize;\n      stream.pos = here;\n    }\n  }\n\n  decodePoints() {\n    let stream = this.font.stream;\n    let count = stream.readUInt8();\n\n    if (count & POINTS_ARE_WORDS) {\n      count = (count & POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n    }\n\n    let points = new Uint16Array(count);\n    let i = 0;\n    let point = 0;\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & POINT_RUN_COUNT_MASK) + 1;\n      let fn = run & POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n\n      for (let j = 0; j < runCount && i < count; j++) {\n        point += fn.call(stream);\n        points[i++] = point;\n      }\n    }\n\n    return points;\n  }\n\n  decodeDeltas(count) {\n    let stream = this.font.stream;\n    let i = 0;\n    let deltas = new Int16Array(count);\n\n    while (i < count) {\n      let run = stream.readUInt8();\n      let runCount = (run & DELTA_RUN_COUNT_MASK) + 1;\n\n      if (run & DELTAS_ARE_ZERO) {\n        i += runCount;\n\n      } else {\n        let fn = run & DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n        for (let j = 0; j < runCount && i < count; j++) {\n          deltas[i++] = fn.call(stream);\n        }\n      }\n    }\n\n    return deltas;\n  }\n\n  tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n    let normalized = this.normalizedCoords;\n    let { gvar } = this.font;\n    let factor = 1;\n\n    for (let i = 0; i < gvar.axisCount; i++) {\n      if (tupleCoords[i] === 0) {\n        continue;\n      }\n\n      if (normalized[i] === 0) {\n        return 0;\n      }\n\n      if ((tupleIndex & INTERMEDIATE_TUPLE) === 0) {\n        if ((normalized[i] < Math.min(0, tupleCoords[i])) ||\n            (normalized[i] > Math.max(0, tupleCoords[i]))) {\n          return 0;\n        }\n\n        factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n      } else {\n        if ((normalized[i] < startCoords[i]) ||\n            (normalized[i] > endCoords[i])) {\n          return 0;\n\n        } else if (normalized[i] < tupleCoords[i]) {\n          factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n\n        } else {\n          factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n        }\n      }\n    }\n\n    return factor;\n  }\n\n  // Interpolates points without delta values.\n  // Needed for the Ø and Q glyphs in Skia.\n  // Algorithm from Freetype.\n  interpolateMissingDeltas(points, inPoints, hasDelta) {\n    if (points.length === 0) {\n      return;\n    }\n\n    let point = 0;\n    while (point < points.length) {\n      let firstPoint = point;\n\n      // find the end point of the contour\n      let endPoint = point;\n      let pt = points[endPoint];\n      while (!pt.endContour) {\n        pt = points[++endPoint];\n      }\n\n      // find the first point that has a delta\n      while (point <= endPoint && !hasDelta[point]) {\n        point++;\n      }\n\n      if (point > endPoint) {\n        continue;\n      }\n\n      let firstDelta = point;\n      let curDelta = point;\n      point++;\n\n      while (point <= endPoint) {\n        // find the next point with a delta, and interpolate intermediate points\n        if (hasDelta[point]) {\n          this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n          curDelta = point;\n        }\n\n        point++;\n      }\n\n      // shift contour if we only have a single delta\n      if (curDelta === firstDelta) {\n        this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n      } else {\n        // otherwise, handle the remaining points at the end and beginning of the contour\n        this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n\n        if (firstDelta > 0) {\n          this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n        }\n      }\n\n      point = endPoint + 1;\n    }\n  }\n\n  deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n    if (p1 > p2) {\n      return;\n    }\n\n    let iterable = ['x', 'y'];\n    for (let i = 0; i < iterable.length; i++) {\n      let k = iterable[i];\n      if (inPoints[ref1][k] > inPoints[ref2][k]) {\n        var p = ref1;\n        ref1 = ref2;\n        ref2 = p;\n      }\n\n      let in1 = inPoints[ref1][k];\n      let in2 = inPoints[ref2][k];\n      let out1 = outPoints[ref1][k];\n      let out2 = outPoints[ref2][k];\n\n      // If the reference points have the same coordinate but different\n      // delta, inferred delta is zero.  Otherwise interpolate.\n      if (in1 !== in2 || out1 === out2) {\n        let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n\n        for (let p = p1; p <= p2; p++) {\n          let out = inPoints[p][k];\n\n          if (out <= in1) {\n            out += out1 - in1;\n          } else if (out >= in2) {\n            out += out2 - in2;\n          } else {\n            out = out1 + (out - in1) * scale;\n          }\n\n          outPoints[p][k] = out;\n        }\n      }\n    }\n  }\n\n  deltaShift(p1, p2, ref, inPoints, outPoints) {\n    let deltaX = outPoints[ref].x - inPoints[ref].x;\n    let deltaY = outPoints[ref].y - inPoints[ref].y;\n\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    for (let p = p1; p <= p2; p++) {\n      if (p !== ref) {\n        outPoints[p].x += deltaX;\n        outPoints[p].y += deltaY;\n      }\n    }\n  }\n\n  getAdvanceAdjustment(gid, table) {\n    let outerIndex, innerIndex;\n\n    if (table.advanceWidthMapping) {\n      let idx = gid;\n      if (idx >= table.advanceWidthMapping.mapCount) {\n        idx = table.advanceWidthMapping.mapCount - 1;\n      }\n\n      let entryFormat = table.advanceWidthMapping.entryFormat;\n      ({outerIndex, innerIndex} = table.advanceWidthMapping.mapData[idx]);\n    } else {\n      outerIndex = 0;\n      innerIndex = gid;\n    }\n\n    return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n  }\n\n  // See pseudo code from `Font Variations Overview'\n  // in the OpenType specification.\n  getDelta(itemStore, outerIndex, innerIndex) {\n    if (outerIndex >= itemStore.itemVariationData.length) {\n      return 0;\n    }\n\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (innerIndex >= varData.deltaSets.length) {\n      return 0;\n    }\n\n    let deltaSet = varData.deltaSets[innerIndex];\n    let blendVector = this.getBlendVector(itemStore, outerIndex);\n    let netAdjustment = 0;\n\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      netAdjustment += deltaSet.deltas[master] * blendVector[master];\n    }\n\n    return netAdjustment;\n  }\n\n  getBlendVector(itemStore, outerIndex) {\n    let varData = itemStore.itemVariationData[outerIndex];\n    if (this.blendVectors.has(varData)) {\n      return this.blendVectors.get(varData);\n    }\n\n    let normalizedCoords = this.normalizedCoords;\n    let blendVector = [];\n\n    // outer loop steps through master designs to be blended\n    for (let master = 0; master < varData.regionIndexCount; master++) {\n      let scalar = 1;\n      let regionIndex = varData.regionIndexes[master];\n      let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n\n      // inner loop steps through axes in this region\n      for (let j = 0; j < axes.length; j++) {\n        let axis = axes[j];\n        let axisScalar;\n\n        // compute the scalar contribution of this axis\n        // ignore invalid ranges\n        if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) {\n          axisScalar = 1;\n\n        } else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) {\n          axisScalar = 1;\n\n        // peak of 0 means ignore this axis\n        } else if (axis.peakCoord === 0) {\n          axisScalar = 1;\n\n        // ignore this region if coords are out of range\n        } else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) {\n          axisScalar = 0;\n\n        // calculate a proportional factor\n        } else {\n          if (normalizedCoords[j] === axis.peakCoord) {\n            axisScalar = 1;\n          } else if (normalizedCoords[j] < axis.peakCoord) {\n            axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) /\n              (axis.peakCoord - axis.startCoord + Number.EPSILON);\n          } else {\n            axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) /\n              (axis.endCoord - axis.peakCoord + Number.EPSILON);\n          }\n        }\n\n        // take product of all the axis scalars\n        scalar *= axisScalar;\n      }\n\n      blendVector[master] = scalar;\n    }\n\n    this.blendVectors.set(varData, blendVector);\n    return blendVector;\n  }\n}\n","import * as r from 'restructure';\n\nconst resolved = Promise.resolve();\n\nexport default class Subset {\n  constructor(font) {\n    this.font = font;\n    this.glyphs = [];\n    this.mapping = {};\n\n    // always include the missing glyph\n    this.includeGlyph(0);\n  }\n\n  includeGlyph(glyph) {\n    if (typeof glyph === 'object') {\n      glyph = glyph.id;\n    }\n\n    if (this.mapping[glyph] == null) {\n      this.glyphs.push(glyph);\n      this.mapping[glyph] = this.glyphs.length - 1;\n    }\n\n    return this.mapping[glyph];\n  }\n}\n","import * as r from 'restructure';\n\n// Flags for simple glyphs\nconst ON_CURVE        = 1 << 0;\nconst X_SHORT_VECTOR  = 1 << 1;\nconst Y_SHORT_VECTOR  = 1 << 2;\nconst REPEAT          = 1 << 3;\nconst SAME_X          = 1 << 4;\nconst SAME_Y          = 1 << 5;\n\nclass Point {\n  static size(val) {\n    return val >= 0 && val <= 255 ? 1 : 2;\n  }\n  \n  static encode(stream, value) {\n    if (value >= 0 && value <= 255) {\n      stream.writeUInt8(value);\n    } else {\n      stream.writeInt16BE(value);\n    }\n  }\n}\n\nlet Glyf = new r.Struct({\n  numberOfContours: r.int16, // if negative, this is a composite glyph\n  xMin: r.int16,\n  yMin: r.int16,\n  xMax: r.int16,\n  yMax: r.int16,\n  endPtsOfContours: new r.Array(r.uint16, 'numberOfContours'),\n  instructions: new r.Array(r.uint8, r.uint16),\n  flags: new r.Array(r.uint8, 0),\n  xPoints: new r.Array(Point, 0),\n  yPoints: new r.Array(Point, 0)\n});\n\n/**\n * Encodes TrueType glyph outlines\n */\nexport default class TTFGlyphEncoder {\n  encodeSimple(path, instructions = []) {\n    let endPtsOfContours = [];\n    let xPoints = [];\n    let yPoints = [];\n    let flags = [];\n    let same = 0;\n    let lastX = 0, lastY = 0, lastFlag = 0;\n    let pointCount = 0;\n    \n    for (let i = 0; i < path.commands.length; i++) {\n      let c = path.commands[i];\n      \n      for (let j = 0; j < c.args.length; j += 2) {\n        let x = c.args[j];\n        let y = c.args[j + 1];\n        let flag = 0;\n        \n        // If the ending point of a quadratic curve is the midpoint\n        // between the control point and the control point of the next\n        // quadratic curve, we can omit the ending point.\n        if (c.command === 'quadraticCurveTo' && j === 2) {\n          let next = path.commands[i + 1];\n          if (next && next.command === 'quadraticCurveTo') {\n            let midX = (lastX + next.args[0]) / 2;\n            let midY = (lastY + next.args[1]) / 2;\n            \n            if (x === midX && y === midY) {\n              continue;\n            }\n          }\n        }\n        \n        // All points except control points are on curve.\n        if (!(c.command === 'quadraticCurveTo' && j === 0)) {\n          flag |= ON_CURVE;\n        }\n        \n        flag = this._encodePoint(x, lastX, xPoints, flag, X_SHORT_VECTOR, SAME_X);\n        flag = this._encodePoint(y, lastY, yPoints, flag, Y_SHORT_VECTOR, SAME_Y);\n        \n        if (flag === lastFlag && same < 255) {\n          flags[flags.length - 1] |= REPEAT;\n          same++;\n        } else {\n          if (same > 0) {\n            flags.push(same);\n            same = 0;\n          }\n      \n          flags.push(flag);\n          lastFlag = flag;\n        }\n        \n        lastX = x;\n        lastY = y;\n        pointCount++;\n      }\n  \n      if (c.command === 'closePath') {\n        endPtsOfContours.push(pointCount - 1);\n      }\n    }\n\n    // Close the path if the last command didn't already\n    if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== 'closePath') {\n      endPtsOfContours.push(pointCount - 1);\n    }\n    \n    let bbox = path.bbox;\n    let glyf = {\n      numberOfContours: endPtsOfContours.length,\n      xMin: bbox.minX,\n      yMin: bbox.minY,\n      xMax: bbox.maxX,\n      yMax: bbox.maxY,\n      endPtsOfContours: endPtsOfContours,\n      instructions: instructions,\n      flags: flags,\n      xPoints: xPoints,\n      yPoints: yPoints\n    };\n    \n    let size = Glyf.size(glyf);\n    let tail = 4 - (size % 4);\n    \n    let stream = new r.EncodeStream(size + tail);\n    Glyf.encode(stream, glyf);\n    \n    // Align to 4-byte length\n    if (tail !== 0) {\n      stream.fill(0, tail);\n    }\n    \n    return stream.buffer;\n  }\n  \n  _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n    let diff = value - last;\n    \n    if (value === last) {\n      flag |= sameFlag;\n    } else {\n      if (-255 <= diff && diff <= 255) {\n        flag |= shortFlag;\n        if (diff < 0) {\n          diff = -diff;\n        } else {\n          flag |= sameFlag;\n        }\n      }\n      \n      points.push(diff);\n    }\n    \n    return flag;\n  }\n}\n","import cloneDeep from 'clone';\nimport Subset from './Subset';\nimport Directory from '../tables/directory';\nimport Tables from '../tables';\nimport TTFGlyphEncoder from '../glyph/TTFGlyphEncoder';\n\nexport default class TTFSubset extends Subset {\n  constructor(font) {\n    super(font);\n    this.glyphEncoder = new TTFGlyphEncoder;\n  }\n\n  _addGlyph(gid) {\n    let glyph = this.font.getGlyph(gid);\n    let glyf = glyph._decode();\n\n    // get the offset to the glyph from the loca table\n    let curOffset = this.font.loca.offsets[gid];\n    let nextOffset = this.font.loca.offsets[gid + 1];\n\n    let stream = this.font._getTableStream('glyf');\n    stream.pos += curOffset;\n\n    let buffer = stream.readBuffer(nextOffset - curOffset);\n\n    // if it is a compound glyph, include its components\n    if (glyf && glyf.numberOfContours < 0) {\n      buffer = new Uint8Array(buffer);\n      let view = new DataView(buffer.buffer);\n      for (let component of glyf.components) {\n        gid = this.includeGlyph(component.glyphID);\n        view.setUint16(component.pos, gid);\n      }\n    } else if (glyf && this.font._variationProcessor) {\n      // If this is a TrueType variation glyph, re-encode the path\n      buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n    }\n\n    this.glyf.push(buffer);\n    this.loca.offsets.push(this.offset);\n\n    this.hmtx.metrics.push({\n      advance: glyph.advanceWidth,\n      bearing: glyph._getMetrics().leftBearing\n    });\n\n    this.offset += buffer.length;\n    return this.glyf.length - 1;\n  }\n\n  encode() {\n    // tables required by PDF spec:\n    //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n    //\n    // additional tables required for standalone fonts:\n    //   name, cmap, OS/2, post\n\n    this.glyf = [];\n    this.offset = 0;\n    this.loca = {\n      offsets: [],\n      version: this.font.loca.version\n    };\n\n    this.hmtx = {\n      metrics: [],\n      bearings: []\n    };\n\n    // include all the glyphs\n    // not using a for loop because we need to support adding more\n    // glyphs to the array as we go, and CoffeeScript caches the length.\n    let i = 0;\n    while (i < this.glyphs.length) {\n      this._addGlyph(this.glyphs[i++]);\n    }\n\n    let maxp = cloneDeep(this.font.maxp);\n    maxp.numGlyphs = this.glyf.length;\n\n    this.loca.offsets.push(this.offset);\n\n    let head = cloneDeep(this.font.head);\n    head.indexToLocFormat = this.loca.version;\n\n    let hhea = cloneDeep(this.font.hhea);\n    hhea.numberOfMetrics = this.hmtx.metrics.length;\n\n    // map = []\n    // for index in [0...256]\n    //     if index < @numGlyphs\n    //         map[index] = index\n    //     else\n    //         map[index] = 0\n    //\n    // cmapTable =\n    //     version: 0\n    //     length: 262\n    //     language: 0\n    //     codeMap: map\n    //\n    // cmap =\n    //     version: 0\n    //     numSubtables: 1\n    //     tables: [\n    //         platformID: 1\n    //         encodingID: 0\n    //         table: cmapTable\n    //     ]\n\n    // TODO: subset prep, cvt, fpgm?\n    return Directory.toBuffer({\n      tables: {\n        head,\n        hhea,\n        loca: this.loca,\n        maxp,\n        'cvt ': this.font['cvt '],\n        prep: this.font.prep,\n        glyf: this.glyf,\n        hmtx: this.hmtx,\n        fpgm: this.font.fpgm\n\n        // name: clone @font.name\n        // 'OS/2': clone @font['OS/2']\n        // post: clone @font.post\n        // cmap: cmap\n      }\n    });\n  }\n}\n","import Subset from './Subset';\nimport CFFTop from '../cff/CFFTop';\nimport CFFPrivateDict from '../cff/CFFPrivateDict';\nimport standardStrings from '../cff/CFFStandardStrings';\n\nexport default class CFFSubset extends Subset {\n  constructor(font) {\n    super(font);\n\n    this.cff = this.font['CFF '];\n    if (!this.cff) {\n      throw new Error('Not a CFF Font');\n    }\n  }\n\n  subsetCharstrings() {\n    this.charstrings = [];\n    let gsubrs = {};\n\n    for (let gid of this.glyphs) {\n      this.charstrings.push(this.cff.getCharString(gid));\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedGsubrs) {\n        gsubrs[subr] = true;\n      }\n    }\n\n    this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n  }\n\n  subsetSubrs(subrs, used) {\n    let res = [];\n    for (let i = 0; i < subrs.length; i++) {\n      let subr = subrs[i];\n      if (used[i]) {\n        this.cff.stream.pos = subr.offset;\n        res.push(this.cff.stream.readBuffer(subr.length));\n      } else {\n        res.push(new Uint8Array([11])); // return\n      }\n    }\n\n    return res;\n  }\n\n  subsetFontdict(topDict) {\n    topDict.FDArray = [];\n    topDict.FDSelect = {\n      version: 0,\n      fds: []\n    };\n\n    let used_fds = {};\n    let used_subrs = [];\n    let fd_select = {};\n    for (let gid of this.glyphs) {\n      let fd = this.cff.fdForGlyph(gid);\n      if (fd == null) {\n        continue;\n      }\n\n      if (!used_fds[fd]) {\n        topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n        used_subrs.push({});\n        fd_select[fd] = topDict.FDArray.length - 1;\n      }\n\n      used_fds[fd] = true;\n      topDict.FDSelect.fds.push(fd_select[fd]);\n\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[fd_select[fd]][subr] = true;\n      }\n    }\n\n    for (let i = 0; i < topDict.FDArray.length; i++) {\n      let dict = topDict.FDArray[i];\n      delete dict.FontName;\n      if (dict.Private && dict.Private.Subrs) {\n        dict.Private = Object.assign({}, dict.Private);\n        dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n      }\n    }\n\n    return;\n  }\n\n  createCIDFontdict(topDict) {\n    let used_subrs = {};\n    for (let gid of this.glyphs) {\n      let glyph = this.font.getGlyph(gid);\n      let path = glyph.path; // this causes the glyph to be parsed\n\n      for (let subr in glyph._usedSubrs) {\n        used_subrs[subr] = true;\n      }\n    }\n\n    let privateDict = Object.assign({}, this.cff.topDict.Private);\n    if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) {\n      privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n    }\n\n    topDict.FDArray = [{ Private: privateDict }];\n    return topDict.FDSelect = {\n      version: 3,\n      nRanges: 1,\n      ranges: [{ first: 0, fd: 0 }],\n      sentinel: this.charstrings.length\n    };\n  }\n\n  addString(string) {\n    if (!string) {\n      return null;\n    }\n\n    if (!this.strings) {\n      this.strings = [];\n    }\n\n    this.strings.push(string);\n    return standardStrings.length + this.strings.length - 1;\n  }\n\n  encode() {\n    this.subsetCharstrings();\n\n    let charset = {\n      version: this.charstrings.length > 255 ? 2 : 1,\n      ranges: [{ first: 1, nLeft: this.charstrings.length - 2 }]\n    };\n\n    let topDict = Object.assign({}, this.cff.topDict);\n    topDict.Private = null;\n    topDict.charset = charset;\n    topDict.Encoding = null;\n    topDict.CharStrings = this.charstrings;\n\n    for (let key of ['version', 'Notice', 'Copyright', 'FullName', 'FamilyName', 'Weight', 'PostScript', 'BaseFontName', 'FontName']) {\n      topDict[key] = this.addString(this.cff.string(topDict[key]));\n    }\n\n    topDict.ROS = [this.addString('Adobe'), this.addString('Identity'), 0];\n    topDict.CIDCount = this.charstrings.length;\n\n    if (this.cff.isCIDFont) {\n      this.subsetFontdict(topDict);\n    } else {\n      this.createCIDFontdict(topDict);\n    }\n\n    let top = {\n      version: 1,\n      hdrSize: this.cff.hdrSize,\n      offSize: 4,\n      header: this.cff.header,\n      nameIndex: [this.cff.postscriptName],\n      topDictIndex: [topDict],\n      stringIndex: this.strings,\n      globalSubrIndex: this.gsubrs\n    };\n\n    return CFFTop.toBuffer(top);\n  }\n}\n","import * as r from 'restructure';\nimport { cache } from './decorators';\nimport * as fontkit from './base';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport CmapProcessor from './CmapProcessor';\nimport LayoutEngine from './layout/LayoutEngine';\nimport TTFGlyph from './glyph/TTFGlyph';\nimport CFFGlyph from './glyph/CFFGlyph';\nimport SBIXGlyph from './glyph/SBIXGlyph';\nimport COLRGlyph from './glyph/COLRGlyph';\nimport GlyphVariationProcessor from './glyph/GlyphVariationProcessor';\nimport TTFSubset from './subset/TTFSubset';\nimport CFFSubset from './subset/CFFSubset';\nimport BBox from './glyph/BBox';\nimport { asciiDecoder } from './utils';\n\n/**\n * This is the base class for all SFNT-based font formats in fontkit.\n * It supports TrueType, and PostScript glyphs, and several color glyph formats.\n */\nexport default class TTFFont {\n  type = 'TTF';\n\n  static probe(buffer) {\n    let format = asciiDecoder.decode(buffer.slice(0, 4));\n    return format === 'true' || format === 'OTTO' || format === String.fromCharCode(0, 1, 0, 0);\n  }\n\n  constructor(stream, variationCoords = null) {\n    this.defaultLanguage = null;\n    this.stream = stream;\n    this.variationCoords = variationCoords;\n\n    this._directoryPos = this.stream.pos;\n    this._tables = {};\n    this._glyphs = {};\n    this._decodeDirectory();\n\n    // define properties for each table to lazily parse\n    for (let tag in this.directory.tables) {\n      let table = this.directory.tables[tag];\n      if (tables[tag] && table.length > 0) {\n        Object.defineProperty(this, tag, {\n          get: this._getTable.bind(this, table)\n        });\n      }\n    }\n  }\n\n  setDefaultLanguage(lang = null) {\n    this.defaultLanguage = lang;\n  }\n\n  _getTable(table) {\n    if (!(table.tag in this._tables)) {\n      try {\n        this._tables[table.tag] = this._decodeTable(table);\n      } catch (e) {\n        if (fontkit.logErrors) {\n          console.error(`Error decoding table ${table.tag}`);\n          console.error(e.stack);\n        }\n      }\n    }\n\n    return this._tables[table.tag];\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n      return this.stream;\n    }\n\n    return null;\n  }\n\n  _decodeDirectory() {\n    return this.directory = Directory.decode(this.stream, {_startOffset: 0});\n  }\n\n  _decodeTable(table) {\n    let pos = this.stream.pos;\n\n    let stream = this._getTableStream(table.tag);\n    let result = tables[table.tag].decode(stream, this, table.length);\n\n    this.stream.pos = pos;\n    return result;\n  }\n\n  /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */\n  getName(key, lang = this.defaultLanguage || fontkit.defaultLanguage) {\n    let record = this.name && this.name.records[key];\n    if (record) {\n      // Attempt to retrieve the entry, depending on which translation is available:\n      return (\n          record[lang]\n          || record[this.defaultLanguage]\n          || record[fontkit.defaultLanguage]\n          || record['en']\n          || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n          || null\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */\n  get postscriptName() {\n    return this.getName('postscriptName');\n  }\n\n  /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */\n  get fullName() {\n    return this.getName('fullName');\n  }\n\n  /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */\n  get familyName() {\n    return this.getName('fontFamily');\n  }\n\n  /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */\n  get subfamilyName() {\n    return this.getName('fontSubfamily');\n  }\n\n  /**\n   * The font's copyright information\n   * @type {string}\n   */\n  get copyright() {\n    return this.getName('copyright');\n  }\n\n  /**\n   * The font's version number\n   * @type {string}\n   */\n  get version() {\n    return this.getName('version');\n  }\n\n  /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */\n  get ascent() {\n    return this.hhea.ascent;\n  }\n\n  /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */\n  get descent() {\n    return this.hhea.descent;\n  }\n\n  /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */\n  get lineGap() {\n    return this.hhea.lineGap;\n  }\n\n  /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */\n  get underlinePosition() {\n    return this.post.underlinePosition;\n  }\n\n  /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */\n  get underlineThickness() {\n    return this.post.underlineThickness;\n  }\n\n  /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */\n  get italicAngle() {\n    return this.post.italicAngle;\n  }\n\n  /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */\n  get capHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.capHeight : this.ascent;\n  }\n\n  /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */\n  get xHeight() {\n    let os2 = this['OS/2'];\n    return os2 ? os2.xHeight : 0;\n  }\n\n  /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */\n  get numGlyphs() {\n    return this.maxp.numGlyphs;\n  }\n\n  /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */\n  get unitsPerEm() {\n    return this.head.unitsPerEm;\n  }\n\n  /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */\n  @cache\n  get bbox() {\n    return Object.freeze(new BBox(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n  }\n\n  @cache\n  get _cmapProcessor() {\n    return new CmapProcessor(this.cmap);\n  }\n\n  /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */\n  @cache\n  get characterSet() {\n    return this._cmapProcessor.getCharacterSet();\n  }\n\n  /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */\n  hasGlyphForCodePoint(codePoint) {\n    return !!this._cmapProcessor.lookup(codePoint);\n  }\n\n  /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */\n  glyphForCodePoint(codePoint) {\n    return this.getGlyph(this._cmapProcessor.lookup(codePoint), [codePoint]);\n  }\n\n  /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */\n  glyphsForString(string) {\n    let glyphs = [];\n    let len = string.length;\n    let idx = 0;\n    let last = -1;\n    let state = -1;\n\n    while (idx <= len) {\n      let code = 0;\n      let nextState = 0;\n\n      if (idx < len) {\n        // Decode the next codepoint from UTF 16\n        code = string.charCodeAt(idx++);\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n          let next = string.charCodeAt(idx);\n          if (0xdc00 <= next && next <= 0xdfff) {\n            idx++;\n            code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n          }\n        }\n\n        // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n        nextState = ((0xfe00 <= code && code <= 0xfe0f) || (0xe0100 <= code && code <= 0xe01ef)) ? 1 : 0;\n      } else {\n        idx++;\n      }\n\n      if (state === 0 && nextState === 1) {\n        // Variation selector following normal codepoint.\n        glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [last, code]));\n      } else if (state === 0 && nextState === 0) {\n        // Normal codepoint following normal codepoint.\n        glyphs.push(this.glyphForCodePoint(last));\n      }\n\n      last = code;\n      state = nextState;\n    }\n\n    return glyphs;\n  }\n\n  @cache\n  get _layoutEngine() {\n    return new LayoutEngine(this);\n  }\n\n  /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */\n  layout(string, userFeatures, script, language, direction) {\n    return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n  }\n\n  /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */\n  stringsForGlyph(gid) {\n    return this._layoutEngine.stringsForGlyph(gid);\n  }\n\n  /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */\n  get availableFeatures() {\n    return this._layoutEngine.getAvailableFeatures();\n  }\n\n  getAvailableFeatures(script, language) {\n    return this._layoutEngine.getAvailableFeatures(script, language);\n  }\n\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf) {\n        this._glyphs[glyph] = new TTFGlyph(glyph, characters, this);\n\n      } else if (this.directory.tables['CFF '] || this.directory.tables.CFF2) {\n        this._glyphs[glyph] = new CFFGlyph(glyph, characters, this);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */\n  getGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.sbix) {\n        this._glyphs[glyph] = new SBIXGlyph(glyph, characters, this);\n\n      } else if ((this.directory.tables.COLR) && (this.directory.tables.CPAL)) {\n        this._glyphs[glyph] = new COLRGlyph(glyph, characters, this);\n\n      } else {\n        this._getBaseGlyph(glyph, characters);\n      }\n    }\n\n    return this._glyphs[glyph] || null;\n  }\n\n  /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */\n  createSubset() {\n    if (this.directory.tables['CFF ']) {\n      return new CFFSubset(this);\n    }\n\n    return new TTFSubset(this);\n  }\n\n  /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */\n  @cache\n  get variationAxes() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let axis of this.fvar.axis) {\n      res[axis.axisTag.trim()] = {\n        name: axis.name.en,\n        min: axis.minValue,\n        default: axis.defaultValue,\n        max: axis.maxValue\n      };\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */\n  @cache\n  get namedVariations() {\n    let res = {};\n    if (!this.fvar) {\n      return res;\n    }\n\n    for (let instance of this.fvar.instance) {\n      let settings = {};\n      for (let i = 0; i < this.fvar.axis.length; i++) {\n        let axis = this.fvar.axis[i];\n        settings[axis.axisTag.trim()] = instance.coord[i];\n      }\n\n      res[instance.name.en] = settings;\n    }\n\n    return res;\n  }\n\n  /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */\n  getVariation(settings) {\n    if (!(this.directory.tables.fvar && ((this.directory.tables.gvar && this.directory.tables.glyf) || this.directory.tables.CFF2))) {\n      throw new Error('Variations require a font with the fvar, gvar and glyf, or CFF2 tables.');\n    }\n\n    if (typeof settings === 'string') {\n      settings = this.namedVariations[settings];\n    }\n\n    if (typeof settings !== 'object') {\n      throw new Error('Variation settings must be either a variation name or settings object.');\n    }\n\n    // normalize the coordinates\n    let coords = this.fvar.axis.map((axis, i) => {\n      let axisTag = axis.axisTag.trim();\n      if (axisTag in settings) {\n        return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n      } else {\n        return axis.defaultValue;\n      }\n    });\n\n    let stream = new r.DecodeStream(this.stream.buffer);\n    stream.pos = this._directoryPos;\n\n    let font = new TTFFont(stream, coords);\n    font._tables = this._tables;\n\n    return font;\n  }\n\n  @cache\n  get _variationProcessor() {\n    if (!this.fvar) {\n      return null;\n    }\n\n    let variationCoords = this.variationCoords;\n\n    // Ignore if no variation coords and not CFF2\n    if (!variationCoords && !this.CFF2) {\n      return null;\n    }\n\n    if (!variationCoords) {\n      variationCoords = this.fvar.axis.map(axis => axis.defaultValue);\n    }\n\n    return new GlyphVariationProcessor(this, variationCoords);\n  }\n\n  // Standardized format plugin API\n  getFont(name) {\n    return this.getVariation(name);\n  }\n}\n","import * as r from 'restructure';\nimport tables from './';\n\nlet WOFFDirectoryEntry = new r.Struct({\n  tag:          new r.String(4),\n  offset:       new r.Pointer(r.uint32, 'void', {type: 'global'}),\n  compLength:   r.uint32,\n  length:       r.uint32,\n  origChecksum: r.uint32\n});\n\nlet WOFFDirectory = new r.Struct({\n  tag:            new r.String(4), // should be 'wOFF'\n  flavor:         r.uint32,\n  length:         r.uint32,\n  numTables:      r.uint16,\n  reserved:       new r.Reserved(r.uint16),\n  totalSfntSize:  r.uint32,\n  majorVersion:   r.uint16,\n  minorVersion:   r.uint16,\n  metaOffset:     r.uint32,\n  metaLength:     r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset:     r.uint32,\n  privLength:     r.uint32,\n  tables:         new r.Array(WOFFDirectoryEntry, 'numTables')\n});\n\nWOFFDirectory.process = function() {\n  let tables = {};\n  for (let table of this.tables) {\n    tables[table.tag] = table;\n  }\n\n  this.tables = tables;\n};\n\nexport default WOFFDirectory;\n","import TTFFont from './TTFFont';\nimport WOFFDirectory from './tables/WOFFDirectory';\nimport tables from './tables';\nimport inflate from 'tiny-inflate';\nimport * as r from 'restructure';\nimport { asciiDecoder } from './utils';\n\nexport default class WOFFFont extends TTFFont {\n  type = 'WOFF';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'wOFF';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFFDirectory.decode(this.stream, { _startOffset: 0 });\n  }\n\n  _getTableStream(tag) {\n    let table = this.directory.tables[tag];\n    if (table) {\n      this.stream.pos = table.offset;\n\n      if (table.compLength < table.length) {\n        this.stream.pos += 2; // skip deflate header\n        let outBuffer = new Uint8Array(table.length);\n        let buf = inflate(this.stream.readBuffer(table.compLength - 2), outBuffer);\n        return new r.DecodeStream(buf);\n      } else {\n        return this.stream;\n      }\n    }\n\n    return null;\n  }\n}\n","import TTFGlyph from './TTFGlyph';\n\n/**\n * Represents a TrueType glyph in the WOFF2 format, which compresses glyphs differently.\n */\nexport default class WOFF2Glyph extends TTFGlyph {\n  type = 'WOFF2';\n\n  _decode() {\n    // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n    return this._font._transformedGlyphs[this.id];\n  }\n\n  _getCBox() {\n    return this.path.bbox;\n  }\n}\n","import * as r from 'restructure';\n\nconst Base128 = {\n  decode(stream) {\n    let result = 0;\n    let iterable = [0, 1, 2, 3, 4];\n    for (let j = 0; j < iterable.length; j++) {\n      let i = iterable[j];\n      let code = stream.readUInt8();\n\n      // If any of the top seven bits are set then we're about to overflow.\n      if (result & 0xe0000000) {\n        throw new Error('Overflow');\n      }\n\n      result = (result << 7) | (code & 0x7f);\n      if ((code & 0x80) === 0) {\n        return result;\n      }\n    }\n\n    throw new Error('Bad base 128 number');\n  }\n};\n\nlet knownTags = [\n  'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'OS/2', 'post', 'cvt ',\n  'fpgm', 'glyf', 'loca', 'prep', 'CFF ', 'VORG', 'EBDT', 'EBLC', 'gasp',\n  'hdmx', 'kern', 'LTSH', 'PCLT', 'VDMX', 'vhea', 'vmtx', 'BASE', 'GDEF',\n  'GPOS', 'GSUB', 'EBSC', 'JSTF', 'MATH', 'CBDT', 'CBLC', 'COLR', 'CPAL',\n  'SVG ', 'sbix', 'acnt', 'avar', 'bdat', 'bloc', 'bsln', 'cvar', 'fdsc',\n  'feat', 'fmtx', 'fvar', 'gvar', 'hsty', 'just', 'lcar', 'mort', 'morx',\n  'opbd', 'prop', 'trak', 'Zapf', 'Silf', 'Glat', 'Gloc', 'Feat', 'Sill'\n];\n\nlet WOFF2DirectoryEntry = new r.Struct({\n  flags: r.uint8,\n  customTag: new r.Optional(new r.String(4), t => (t.flags & 0x3f) === 0x3f),\n  tag: t => t.customTag || knownTags[t.flags & 0x3f],// || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },\n  length: Base128,\n  transformVersion: t => (t.flags >>> 6) & 0x03,\n  transformed: t => (t.tag === 'glyf' || t.tag === 'loca') ? t.transformVersion === 0 : t.transformVersion !== 0,\n  transformLength: new r.Optional(Base128, t => t.transformed)\n});\n\nlet WOFF2Directory = new r.Struct({\n  tag: new r.String(4), // should be 'wOF2'\n  flavor: r.uint32,\n  length: r.uint32,\n  numTables: r.uint16,\n  reserved: new r.Reserved(r.uint16),\n  totalSfntSize: r.uint32,\n  totalCompressedSize: r.uint32,\n  majorVersion: r.uint16,\n  minorVersion: r.uint16,\n  metaOffset: r.uint32,\n  metaLength: r.uint32,\n  metaOrigLength: r.uint32,\n  privOffset: r.uint32,\n  privLength: r.uint32,\n  tables: new r.Array(WOFF2DirectoryEntry, 'numTables')\n});\n\nWOFF2Directory.process = function() {\n  let tables = {};\n  for (let i = 0; i < this.tables.length; i++) {\n    let table = this.tables[i];\n    tables[table.tag] = table;\n  }\n\n  return this.tables = tables;\n};\n\nexport default WOFF2Directory;\n","import * as r from 'restructure';\nimport brotli from 'brotli/decompress.js';\nimport TTFFont from './TTFFont';\nimport TTFGlyph, { Point } from './glyph/TTFGlyph';\nimport WOFF2Glyph from './glyph/WOFF2Glyph';\nimport WOFF2Directory from './tables/WOFF2Directory';\nimport { asciiDecoder } from './utils';\n\n/**\n * Subclass of TTFFont that represents a TTF/OTF font compressed by WOFF2\n * See spec here: http://www.w3.org/TR/WOFF2/\n */\nexport default class WOFF2Font extends TTFFont {\n  type = 'WOFF2';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'wOF2';\n  }\n\n  _decodeDirectory() {\n    this.directory = WOFF2Directory.decode(this.stream);\n    this._dataPos = this.stream.pos;\n  }\n\n  _decompress() {\n    // decompress data and setup table offsets if we haven't already\n    if (!this._decompressed) {\n      this.stream.pos = this._dataPos;\n      let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n\n      let decompressedSize = 0;\n      for (let tag in this.directory.tables) {\n        let entry = this.directory.tables[tag];\n        entry.offset = decompressedSize;\n        decompressedSize += (entry.transformLength != null) ? entry.transformLength : entry.length;\n      }\n\n      let decompressed = brotli(buffer, decompressedSize);\n      if (!decompressed) {\n        throw new Error('Error decoding compressed data in WOFF2');\n      }\n\n      this.stream = new r.DecodeStream(decompressed);\n      this._decompressed = true;\n    }\n  }\n\n  _decodeTable(table) {\n    this._decompress();\n    return super._decodeTable(table);\n  }\n\n  // Override this method to get a glyph and return our\n  // custom subclass if there is a glyf table.\n  _getBaseGlyph(glyph, characters = []) {\n    if (!this._glyphs[glyph]) {\n      if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n        if (!this._transformedGlyphs) { this._transformGlyfTable(); }\n        return this._glyphs[glyph] = new WOFF2Glyph(glyph, characters, this);\n\n      } else {\n        return super._getBaseGlyph(glyph, characters);\n      }\n    }\n  }\n\n  _transformGlyfTable() {\n    this._decompress();\n    this.stream.pos = this.directory.tables.glyf.offset;\n    let table = GlyfTable.decode(this.stream);\n    let glyphs = [];\n\n    for (let index = 0; index < table.numGlyphs; index++) {\n      let glyph = {};\n      let nContours = table.nContours.readInt16BE();\n      glyph.numberOfContours = nContours;\n\n      if (nContours > 0) { // simple glyph\n        let nPoints = [];\n        let totalPoints = 0;\n\n        for (let i = 0; i < nContours; i++) {\n          let r = read255UInt16(table.nPoints);\n          totalPoints += r;\n          nPoints.push(totalPoints);\n        }\n\n        glyph.points = decodeTriplet(table.flags, table.glyphs, totalPoints);\n        for (let i = 0; i < nContours; i++) {\n          glyph.points[nPoints[i] - 1].endContour = true;\n        }\n\n        var instructionSize = read255UInt16(table.glyphs);\n\n      } else if (nContours < 0) { // composite glyph\n        let haveInstructions = TTFGlyph.prototype._decodeComposite.call({ _font: this }, glyph, table.composites);\n        if (haveInstructions) {\n          var instructionSize = read255UInt16(table.glyphs);\n        }\n      }\n\n      glyphs.push(glyph);\n    }\n\n    this._transformedGlyphs = glyphs;\n  }\n}\n\n// Special class that accepts a length and returns a sub-stream for that data\nclass Substream {\n  constructor(length) {\n    this.length = length;\n    this._buf = new r.Buffer(length);\n  }\n\n  decode(stream, parent) {\n    return new r.DecodeStream(this._buf.decode(stream, parent));\n  }\n}\n\n// This struct represents the entire glyf table\nlet GlyfTable = new r.Struct({\n  version: r.uint32,\n  numGlyphs: r.uint16,\n  indexFormat: r.uint16,\n  nContourStreamSize: r.uint32,\n  nPointsStreamSize: r.uint32,\n  flagStreamSize: r.uint32,\n  glyphStreamSize: r.uint32,\n  compositeStreamSize: r.uint32,\n  bboxStreamSize: r.uint32,\n  instructionStreamSize: r.uint32,\n  nContours: new Substream('nContourStreamSize'),\n  nPoints: new Substream('nPointsStreamSize'),\n  flags: new Substream('flagStreamSize'),\n  glyphs: new Substream('glyphStreamSize'),\n  composites: new Substream('compositeStreamSize'),\n  bboxes: new Substream('bboxStreamSize'),\n  instructions: new Substream('instructionStreamSize')\n});\n\nconst WORD_CODE = 253;\nconst ONE_MORE_BYTE_CODE2 = 254;\nconst ONE_MORE_BYTE_CODE1 = 255;\nconst LOWEST_U_CODE = 253;\n\nfunction read255UInt16(stream) {\n  let code = stream.readUInt8();\n\n  if (code === WORD_CODE) {\n    return stream.readUInt16BE();\n  }\n\n  if (code === ONE_MORE_BYTE_CODE1) {\n    return stream.readUInt8() + LOWEST_U_CODE;\n  }\n\n  if (code === ONE_MORE_BYTE_CODE2) {\n    return stream.readUInt8() + LOWEST_U_CODE * 2;\n  }\n\n  return code;\n}\n\nfunction withSign(flag, baseval) {\n  return flag & 1 ? baseval : -baseval;\n}\n\nfunction decodeTriplet(flags, glyphs, nPoints) {\n  let y;\n  let x = y = 0;\n  let res = [];\n\n  for (let i = 0; i < nPoints; i++) {\n    let dx = 0, dy = 0;\n    let flag = flags.readUInt8();\n    let onCurve = !(flag >> 7);\n    flag &= 0x7f;\n\n    if (flag < 10) {\n      dx = 0;\n      dy = withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n\n    } else if (flag < 20) {\n      dx = withSign(flag, (((flag - 10) & 14) << 7) + glyphs.readUInt8());\n      dy = 0;\n\n    } else if (flag < 84) {\n      var b0 = flag - 20;\n      var b1 = glyphs.readUInt8();\n      dx = withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n      dy = withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n\n    } else if (flag < 120) {\n      var b0 = flag - 84;\n      dx = withSign(flag, 1 + ((b0 / 12) << 8) + glyphs.readUInt8());\n      dy = withSign(flag >> 1, 1 + (((b0 % 12) >> 2) << 8) + glyphs.readUInt8());\n\n    } else if (flag < 124) {\n      var b1 = glyphs.readUInt8();\n      let b2 = glyphs.readUInt8();\n      dx = withSign(flag, (b1 << 4) + (b2 >> 4));\n      dy = withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n\n    } else {\n      dx = withSign(flag, glyphs.readUInt16BE());\n      dy = withSign(flag >> 1, glyphs.readUInt16BE());\n    }\n\n    x += dx;\n    y += dy;\n    res.push(new Point(onCurve, false, x, y));\n  }\n\n  return res;\n}\n","import * as r from 'restructure';\nimport TTFFont from './TTFFont';\nimport Directory from './tables/directory';\nimport tables from './tables';\nimport { asciiDecoder } from './utils';\n\nlet TTCHeader = new r.VersionedStruct(r.uint32, {\n  0x00010000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts')\n  },\n  0x00020000: {\n    numFonts:   r.uint32,\n    offsets:    new r.Array(r.uint32, 'numFonts'),\n    dsigTag:    r.uint32,\n    dsigLength: r.uint32,\n    dsigOffset: r.uint32\n  }\n});\n\nexport default class TrueTypeCollection {\n  type = 'TTC';\n\n  static probe(buffer) {\n    return asciiDecoder.decode(buffer.slice(0, 4)) === 'ttcf';\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    if (stream.readString(4) !== 'ttcf') {\n      throw new Error('Not a TrueType collection');\n    }\n\n    this.header = TTCHeader.decode(stream);\n  }\n\n  getFont(name) {\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      let font = new TTFFont(stream);\n      if (\n        font.postscriptName === name ||\n        (\n          font.postscriptName instanceof Uint8Array && \n          name instanceof Uint8Array && \n          font.postscriptName.every((v, i) => name[i] === v)\n        )\n      ) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let offset of this.header.offsets) {\n      let stream = new r.DecodeStream(this.stream.buffer);\n      stream.pos = offset;\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n","import * as r from 'restructure';\nimport TTFFont from './TTFFont';\n\nlet DFontName = new r.String(r.uint8);\nlet DFontData = new r.Struct({\n  len: r.uint32,\n  buf: new r.Buffer('len')\n});\n\nlet Ref = new r.Struct({\n  id: r.uint16,\n  nameOffset: r.int16,\n  attr: r.uint8,\n  dataOffset: r.uint24,\n  handle: r.uint32\n});\n\nlet Type = new r.Struct({\n  name: new r.String(4),\n  maxTypeIndex: r.uint16,\n  refList: new r.Pointer(r.uint16, new r.Array(Ref, t => t.maxTypeIndex + 1), { type: 'parent' })\n});\n\nlet TypeList = new r.Struct({\n  length: r.uint16,\n  types: new r.Array(Type, t => t.length + 1)\n});\n\nlet DFontMap = new r.Struct({\n  reserved: new r.Reserved(r.uint8, 24),\n  typeList: new r.Pointer(r.uint16, TypeList),\n  nameListOffset: new r.Pointer(r.uint16, 'void')\n});\n\nlet DFontHeader = new r.Struct({\n  dataOffset: r.uint32,\n  map: new r.Pointer(r.uint32, DFontMap),\n  dataLength: r.uint32,\n  mapLength: r.uint32\n});\n\nexport default class DFont {\n  type = 'DFont';\n\n  static probe(buffer) {\n    let stream = new r.DecodeStream(buffer);\n\n    try {\n      var header = DFontHeader.decode(stream);\n    } catch (e) {\n      return false;\n    }\n\n    for (let type of header.map.typeList.types) {\n      if (type.name === 'sfnt') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  constructor(stream) {\n    this.stream = stream;\n    this.header = DFontHeader.decode(this.stream);\n\n    for (let type of this.header.map.typeList.types) {\n      for (let ref of type.refList) {\n        if (ref.nameOffset >= 0) {\n          this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n          ref.name = DFontName.decode(this.stream);\n        } else {\n          ref.name = null;\n        }\n      }\n\n      if (type.name === 'sfnt') {\n        this.sfnt = type;\n      }\n    }\n  }\n\n  getFont(name) {\n    if (!this.sfnt) {\n      return null;\n    }\n\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      let font = new TTFFont(stream);\n      if (\n        font.postscriptName === name ||\n        (\n          font.postscriptName instanceof Uint8Array && \n          name instanceof Uint8Array && \n          font.postscriptName.every((v, i) => name[i] === v)\n        )\n      ) {\n        return font;\n      }\n    }\n\n    return null;\n  }\n\n  get fonts() {\n    let fonts = [];\n    for (let ref of this.sfnt.refList) {\n      let pos = this.header.dataOffset + ref.dataOffset + 4;\n      let stream = new r.DecodeStream(this.stream.buffer.slice(pos));\n      fonts.push(new TTFFont(stream));\n    }\n\n    return fonts;\n  }\n}\n","import { registerFormat, create, defaultLanguage, setDefaultLanguage } from './base';\nimport TTFFont from './TTFFont';\nimport WOFFFont from './WOFFFont';\nimport WOFF2Font from './WOFF2Font';\nimport TrueTypeCollection from './TrueTypeCollection';\nimport DFont from './DFont';\n\n// Register font formats\nregisterFormat(TTFFont);\nregisterFormat(WOFFFont);\nregisterFormat(WOFF2Font);\nregisterFormat(TrueTypeCollection);\nregisterFormat(DFont);\n\nexport * from './base';\n"]},"metadata":{},"sourceType":"module"}
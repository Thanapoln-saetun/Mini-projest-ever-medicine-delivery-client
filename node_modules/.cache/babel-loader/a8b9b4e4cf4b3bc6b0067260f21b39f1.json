{"ast":null,"code":"import { Base } from './Base.js';\nimport { Number as NumberT } from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length) {\n    let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ascii';\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({\n        buffer,\n        length,\n        pos\n      } = stream);\n\n      while (pos < length && buffer[pos] !== 0x00) {\n        ++pos;\n      }\n\n      length = pos - stream.pos;\n    }\n\n    let {\n      encoding\n    } = this;\n\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n\n    const string = stream.readString(length, encoding);\n\n    if (this.length == null && stream.pos < stream.length) {\n      stream.pos++;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let {\n      encoding\n    } = this;\n\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if (this.length == null) {\n      size++;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let {\n      encoding\n    } = this;\n\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if (this.length == null) {\n      return stream.writeUInt8(0x00);\n    }\n  }\n\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n\n    case 'utf8':\n      let len = 0;\n\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n\n      return len;\n\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport { StringT as String };","map":{"version":3,"names":["Base","Number","NumberT","utils","StringT","constructor","length","encoding","decode","stream","parent","pos","resolveLength","buffer","call","string","readString","size","val","undefined","byteLength","encode","writeString","writeUInt8","len","i","c","charCodeAt","c2","Error","String"],"sources":["E:/Mern login/client/node_modules/restructure/src/String.js"],"sourcesContent":["import {Base} from './Base.js';\nimport {Number as NumberT} from './Number.js';\nimport * as utils from './utils.js';\n\nclass StringT extends Base {\n  constructor(length, encoding = 'ascii') {\n    super();\n    this.length = length;\n    this.encoding = encoding;\n  }\n\n  decode(stream, parent) {\n    let length, pos;\n\n    if (this.length != null) {\n      length = utils.resolveLength(this.length, stream, parent);\n    } else {\n      let buffer;\n      ({buffer, length, pos} = stream);\n\n      while ((pos < length) && (buffer[pos] !== 0x00)) {\n        ++pos;\n      }\n\n      length = pos - stream.pos;\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent, parent) || 'ascii';\n    }\n\n    const string = stream.readString(length, encoding);\n\n    if ((this.length == null) && (stream.pos < stream.length)) {\n      stream.pos++;\n    }\n\n    return string;\n  }\n\n  size(val, parent) {\n    // Use the defined value if no value was given\n    if (!val) {\n      return utils.resolveLength(this.length, null, parent);\n    }\n\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (encoding === 'utf16be') {\n      encoding = 'utf16le';\n    }\n\n    let size = byteLength(val, encoding);\n    if (this.length instanceof NumberT) {\n      size += this.length.size();\n    }\n\n    if ((this.length == null)) {\n      size++;\n    }\n\n    return size;\n  }\n\n  encode(stream, val, parent) {\n    let { encoding } = this;\n    if (typeof encoding === 'function') {\n      encoding = encoding.call(parent != null ? parent.val : undefined, parent != null ? parent.val : undefined) || 'ascii';\n    }\n\n    if (this.length instanceof NumberT) {\n      this.length.encode(stream, byteLength(val, encoding));\n    }\n\n    stream.writeString(val, encoding);\n\n    if ((this.length == null)) {\n      return stream.writeUInt8(0x00);\n    }\n  }\n}\n\nfunction byteLength(string, encoding) {\n  switch (encoding) {\n    case 'ascii':\n      return string.length;\n    case 'utf8':\n      let len = 0;\n      for (let i = 0; i < string.length; i++) {\n        let c = string.charCodeAt(i);\n\n        if (c >= 0xd800 && c <= 0xdbff && i < string.length - 1) {\n          let c2 = string.charCodeAt(++i);\n          if ((c2 & 0xfc00) === 0xdc00) {\n            c = ((c & 0x3ff) << 10) + (c2 & 0x3ff) + 0x10000;\n          } else {\n            // unmatched surrogate.\n            i--;\n          }\n        }\n\n        if ((c & 0xffffff80) === 0) {\n          len++;\n        } else if ((c & 0xfffff800) === 0) {\n          len += 2;\n        } else if ((c & 0xffff0000) === 0) {\n          len += 3;\n        } else if ((c & 0xffe00000) === 0) {\n          len += 4;\n        }\n      }\n      return len;\n    case 'utf16le':\n    case 'utf16-le':\n    case 'utf16be':\n    case 'utf16-be':\n    case 'ucs2':\n      return string.length * 2;\n    default:\n      throw new Error('Unknown encoding ' + encoding);\n  }\n}\n\nexport {StringT as String};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}